digraph ulk7_try_to_wake_up{
        label="try_to_wake_up(p, stat, sync)";
        bgcolor=gray;
        size="10,10";
        ratio=filled;
        node[style=filled,shape=box,fillcolor=darkorange1];
        
        task_rq_lock[label="task_rq_lock()\ldisable irq and lock rq"];
        mask[label="cmp with mask of process states"];
        set_TASK_RUNNING[label="set TASK_RUNNING;"];
        array[label="task-\>array"];
        task_rq_unlock[label="task_rq_unlock()\lenable irq and unlock rq"];
        move_to_cpu[label="move to cpu"];
        uninterruptible[label="nr_uninterruptible--\lp-\>actived=-1"];
        resched_task[shape=record,label="{resched_task()|{uniprocessor|multiprocessor}}"];

        subgraph cluster_active_task{
                label= "active_task()";
                sched_clock[label="sched_clock()"];
                recalc_task_prio[label="recalc_task_prio()"];
                p_actived[label="p-\>actived"];
                timestamp[label="timestamp"];
                insert_active_list[label="insert active list"];

                sched_clock -> recalc_task_prio;
                recalc_task_prio -> p_actived;
                p_actived -> timestamp;
                timestamp -> insert_active_list;
                }
                

        task_rq_lock -> mask;
        mask -> task_rq_unlock[label="correspond"];
        mask -> array;
        array -> set_TASK_RUNNING;
        array -> move_to_cpu[label="NULL"];
        move_to_cpu -> uninterruptible[label="is UNINTRRUPT"];
        uninterruptible -> sched_clock;
        move_to_cpu -> sched_clock;
        insert_active_list -> resched_task[label="is local cpu or sync=1"];
        insert_active_list -> set_TASK_RUNNING;
        resched_task -> set_TASK_RUNNING;
        set_TASK_RUNNING -> task_rq_unlock;
}
