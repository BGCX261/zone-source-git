digraph swap_c{
        subgraph cluster_put_page{
                label="void put_page(struct page *page)";
                PageCompound_page_true[label="PageCompound_page_true"];
                set_page_page_private[label="set_page_page_private"];
                put_page_testzero_page_true[label="put_page_testzero_page_true"];
                set_dtor_page_1_mapping[label="set_dtor_page_1_mapping"];
                dtor_page[label="dtor_page"];
                return[label="return"];
                PageReserved_page_false_and_put_page_testzero_page_true[label="PageReserved_page_false_and_put_page_testzero_page_true"];
                __page_cache_release_page[label="__page_cache_release_page"];
        }

        subgraph cluster_rotate_reclaimable_page{
                label="int rotate_reclaimable_page(struct page *page)";
                PageLocked_page_true[label="PageLocked_page_true"];
                return_1[label="return_1"];
                PageDirty_page_true[label="PageDirty_page_true"];
                return_1[label="return_1"];
                PageActive_page_true[label="PageActive_page_true"];
                return_1[label="return_1"];
                PageLRU_page_false[label="PageLRU_page_false"];
                return_1[label="return_1"];
                set_zone_page_zone_page[label="set_zone_page_zone_page"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                PageLRU_page_true_and_PageActive_page_false[label="PageLRU_page_true_and_PageActive_page_false"];
                list_del_page_lru[label="list_del_page_lru"];
                list_add_tail_page_lru_zone_inactive_list[label="list_add_tail_page_lru_zone_inactive_list"];
                inc_page_state_pgrotated[label="inc_page_state_pgrotated"];
                test_clear_page_writeback_page_false[label="test_clear_page_writeback_page_false"];
                BUG[label="BUG"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                return_0[label="return_0"];
        }

        subgraph cluster_activate_page{
                label="void fastcall activate_page(struct page *page)";
                set_zone_page_zone_page[label="set_zone_page_zone_page"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                PageLRU_page_true_and_PageActive_Page_false[label="PageLRU_page_true_and_PageActive_Page_false"];
                del_page_from_inactive_list_zone_page[label="del_page_from_inactive_list_zone_page"];
                SetPageActive_page[label="SetPageActive_page"];
                add_page_to_active_list_zone_page[label="add_page_to_active_list_zone_page"];
                inc_page_state_pgactivate[label="inc_page_state_pgactivate"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
        }

        subgrahp cluster_mark_page_accessed{
                label="void fastcall mark_page_accessed(struct page *page)";
                PageActive_page_false_and_PageReferenced_page_true_and_PageLRU_page_true[label="PageActive_page_false_and_PageReferenced_page_true_and_PageLRU_page_true"];
                activate_page_page[label="activate_page_page"];
                ClearPageReferenced_page[label="ClearPageReferenced_page"];
                PageReferenced_page_false[label="PageReferenced_page_false"];
                SetPageReferenced_page[label="SetPageReferenced_page"];
        }

        subgraph cluster_lru_cache_add{
                label="void fastcall lru_cache_add(struct page *page)";
                set_pvec_get_cpu_var_lru_add_pvecs[label="set_pvec_get_cpu_var_lru_add_pvecs"];
                page_cache_get_page[label="page_cache_get_page"];
                pagevec_add_pvec_page_false[label="pagevec_add_pvec_page_false"];
                __pagevec_lru_add_pvec[label="__pagevec_lru_add_pvec"];
                put_cpu_var_lru_add_pvecs[label="put_cpu_var_lru_add_pvecs"];
        }

        subgraph cluster_lru_cache_add_active{
                label="void fastcall lru_cache_add_active(struct page *page)";
                set_pvec_get_cpu_var_lru_add_active_pvecs[label="set_pvec_get_cpu_var_lru_add_active_pvecs"];
                page_cache_get_page[label="page_cache_get_page"];
                pagevec_add_pvec_page_false[label="pagevec_add_pvec_page_false"];
                __pagevec_lru_add_active_pvec[label="__pagevec_lru_add_active_pvec"];
                put_cpu_var_lru_add_active_pvecs[label="put_cpu_var_lru_add_active_pvecs"];
        }

        subgrahp cluster_lru_add_drain{
                label="void lru_add_drain(void)";
                set_pvec_get_cpu_var_lru_add_pvecs[label="set_pvec_get_cpu_var_lru_add_pvecs"];
                pagevec_count_pvec_true[label="pagevec_count_pvec_true"];
                __pagevec_lru_add_pvec[label="__pagevec_lru_add_pvec"];
                set_pvec_get_cpu_var_lru_add_active_pvecs[label="set_pvec_get_cpu_var_lru_add_active_pvecs"];
                pagevec_count_pvec_true[label="pagevec_count_pvec_true"];
                __pagevec_lru_add_active_pvec[label="__pagevec_lru_add_active_pvec"];
                put_cpu_var_lru_add_pvecs[label="put_cpu_var_lru_add_pvecs"];
        }

        subgraph cluster___page_cache_release{
                label="void fastcall __page_cache_release(struct page *page)";
                set_zone_page_zone_page[label="set_zone_page_zone_page"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                TestClearPageLRU_page_true[label="TestClearPageLRU_page_true"];
                del_page_from_lru_zone_page[label="del_page_from_lru_zone_page"];
                page_count_page_not_eq_0[label="page_count_page_not_eq_0"];
                clear_page[label="clear_page"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                page_true[label="page_true"];
                free_hot_page_page[label="free_hot_page_page"];
        }

        subgraph cluster_release_pages{
                label="void release_pages(struct page **pages, int nr, int cold)";
                pagevec_init_pages_to_free_cold[label="pagevec_init_pages_to_free_cold"];
                for_i_nr[label="for_i_nr"];
                set_page_pages_i[label="set_page_pages_i"];
                PageReserved_page_true_or_put_page_testzero_page_false[label="PageReserved_page_true_or_put_page_testzero_page_false"];
                set_pagezone_page_zone_page[label="set_pagezone_page_zone_page"];
                pagezone_not_eq_zone[label="pagezone_not_eq_zone"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                set_zone_pagezone[label="set_zone_pagezone"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                TestClearPageLRU_page[label="TestClearPageLRU_page"];
                del_page_from_lru_zone_page[label="del_page_from_lru_zone_page"];
                page_count_page_eq_0[label="page_count_page_eq_0"];
                pagevec_add_pages_to_free_page_false[label="pagevec_add_pages_to_free_page_false"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                __pagevec_free_pages_to_free[label="__pagevec_free_pages_to_free"];
                pagevec_reinit_pages_to_free[label="pagevec_reinit_pages_to_free"];
                clear_zone[label="clear_zone"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                pagevec_free_pages_to_free[label="pagevec_free_pages_to_free"];
        }

        subgraph clustar___pagevec_release{
                label="void __pagevec_release(struct pagevec *pvec)";
                lru_add_drain[label="lru_add_drain"];
                release_pages_pvec_pages_pagevec_count_pvec_pvec_cold[label="release_pages_pvec_pages_pagevec_count_pvec_pvec_cold"];
                pagevec_reinit_pvec[label="pagevec_reinit_pvec"];
        }

        subgraph cluster___pagevec_release_nonlru{
                label="void __pagevec_release_nonlru(struct pagevec *pvec)";
                pagevec_init_pages_to_free_pvec_cold[label="pagevec_init_pages_to_free_pvec_cold"];
                set_pages_to_free_cold_pvec_cold[label="set_pages_to_free_cold_pvec_cold"];
                for_i_pagevec_count_pvec[label="for_i_pagevec_count_pvec"];
                set_page_pvec_pages_i[label="set_page_pvec_pages_i"];
                put_page_testzone_page_true[label="put_page_testzone_page_true"];
                pagevec_add_pages_to_free_page[label="pagevec_add_pages_to_free_page"];
                pagevec_free_pages_to_free[label="pagevec_free_pages_to_free"];
                pagevec_reinit_pvec[label="pagevec_reinit_pvec"];
        }

        subgraph cluster___pagevec_lru_add{
                label="void __pagevec_lru_add(struct pagevec *pvec)";
                clear_zone[label="clear_zone"];
                for_i_pagevec_count_pvec[label="for_i_pagevec_count_pvec"];
                set_page_pvec_pages_i[label="set_page_pvec_pages_i"];
                set_pagezone_page_zone_page[label="set_pagezone_page_zone_page"];
                pagezone_not_eq_zone[label="pagezone_not_eq_zone"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                set_zone_pagezone[label="set_zone_pagezone"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                TestSetPageLRU_page_true[label="TestSetPageLRU_page_true"];
                BUG[label="BUG"];
                add_page_to_inactive_list_zone_page[label="add_page_to_inactive_list_zone_page"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                releaes_pages_pvec_pages_pvec_nr_pvec_cold[label="releaes_pages_pvec_pages_pvec_nr_pvec_cold"];
                pagevec_reinit_pvec[label="pagevec_reinit_pvec"];
        }

        subgraph cluster___pagevec_lru_add_active{
                label="void __pagevec_lru_add_active(struct pagevec *pvec)";
                clear_zone[label="clear_zone"];
                for_i_pagevec_count_pvec[label="for_i_pagevec_count_pvec"];
                set_page_pvec_pages_i[label="set_page_pvec_pages_i"];
                set_pagezone_page_zone_page[label="set_pagezone_page_zone_page"];
                pagezone_not_eq_zone[label="pagezone_not_eq_zone"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                set_zone_pagezone[label="set_zone_pagezone"];
                lock_zone_lru_lock[label="lock_zone_lru_lock"];
                TestSetPageLRU_page_true[label="TestSetPageLRU_page_true"];
                BUG[label="BUG"];
                TestSetPageLRU_page_true[label="TestSetPageLRU_page_true"];
                BUG[label="BUG"];
                add_page_to_active_list_zone_page[label="add_page_to_active_list_zone_page"];
                zone_true[label="zone_true"];
                unlock_zone_lru_lock[label="unlock_zone_lru_lock"];
                releaes_pages_pvec_pages_pvec_nr_pvec_cold[label="releaes_pages_pvec_pages_pvec_nr_pvec_cold"];
                pagevec_reinit_pvec[label="pagevec_reinit_pvec"];
        }

        subgraph cluster_pagevec_strip{
                label="void pagevec_strip(struct pagevec *pvec)";
                for_i_pagevec_count_pvec[label="for_i_pagevec_count_pvec"];
                set_page_pvec_pages_i[label="set_page_pvec_pages_i"];
                PagePrivate_page_true_and_TestSetPageLocked_page_false[label="PagePrivate_page_true_and_TestSetPageLocked_page_false"];
                try_to_release_page_page_0[label="try_to_release_page_page_0"];
                unlock_page_page[label="unlock_page_page"];
        }

        subgraph cluster_pagevec_lookup{
                label="unsigned pagevec_lookup(struct pagevec *pvec, struct address_space *mapping, pgoff_t start, unsigned nr_pages)";
                set_pvec_nr_find_get_pages_mapping_start_nr_pages_pvec_pages[label="set_pvec_nr_find_get_pages_mapping_start_nr_pages_pvec_pages"];
                return_pagevec_count_pvec[label="return_pagevec_count_pvec"];
        }

        subgraph cluster_pagevec_lookup_tag{
                label="unsigned pagevec_lookup_tag(struct pagevec *pvec, struct address_space *mapping, pgoff_t *index, int tag, unsigned nr_pages)";
                pvec_nr_find_get_pages_tag_mapping_index_tag_nr_pages_pvec_pages[label="pvec_nr_find_get_pages_tag_mapping_index_tag_nr_pages_pvec_pages"];
                return_pagevec_count_pvec[label="return_pagevec_count_pvec"];
        }

        subgraph cluster_vm_acct_memory{
                label="void vm_acct_memory(long pages)";
                preempt_disabel[label="preempt_disabel"];
                set_local___get_cpu_var_committed_space[label="set_local___get_cpu_var_committed_space"];
                local_self_add_pages[label="local_self_add_pages"];
                local_great_ACCT_THRESHOLD_or_local_small_net_ACCT_THRESHOLD[label="local_great_ACCT_THRESHOLD_or_local_small_net_ACCT_THRESHOLD"];
                atomic_add_local_vm_committed_space[label="atomic_add_local_vm_committed_space"];
                set_local_0[label="set_local_0"];
                preempt_enabel[label="preempt_enabel"];
        }

        subgraph cluster_lru_drain_cache{
                label="static void lru_drain_cache(unsigned int cpu)";
                pagevec_count_pvec_true[label="pagevec_count_pvec_true"];
                __pagevec_lru_addr_pvec[label="__pagevec_lru_addr_pvec"];
                set_pvec_per_cpu_lru_addr_active_pvecs_cpu[label="set_pvec_per_cpu_lru_addr_active_pvecs_cpu"];
                pagevec_count_pvec_true[label="pagevec_count_pvec_true"];
                __pagevec_lru_add_active_pvec[label="__pagevec_lru_add_active_pvec"];
        }

        subgraph cluster_cpu_swap_callback{
                label="static int cpu_swap_callback(struct notifier_block *nfb, unsigned long action, void *hcpu)";
                set_committed_per_cpu_committed_space_hcpu[label="set_committed_per_cpu_committed_space_hcpu"];
                action_eq_CPU_DEAD[label="action_eq_CPU_DEAD"];
                atomic_add_committed_vm_committed_space[label="atomic_add_committed_vm_committed_space"];
                set_committed_0[label="set_committed_0"];
                lru_drain_cache_hcpu[label="lru_drain_cache_hcpu"];
                return_NOTIFY_OK[label="return_NOTIFY_OK"];
        }

        subgraph cluster_percpu_counter_mod{
                label="void percpu_counter_mod(struct percpu_counter *fbc, long amount)";
                set_cpu_get_cpu[label="set_cpu_get_cpu"];
                set_pcount_per_cpu_ptr_fbc_counters_cpu[label="set_pcount_per_cpu_ptr_fbc_counters_cpu"];
                set_count_pcount_add_amount[label="set_count_pcount_add_amount"];
                count_not_small_FBC_BATCH_or_count_not_great_FBC_BATCH[label="count_not_small_FBC_BATCH_or_count_not_great_FBC_BATCH"];
                lock_fbc_lock[label="lock_fbc_lock"];
                fbc_count_self_add_count[label="fbc_count_self_add_count"];
                unlock_fbc_lock[label="unlock_fbc_lock"];
                set_count_0[label="set_count_0"];
                set_pcount_count[label="set_pcount_count"];
                put_cpu[label="put_cpu"];
        }

        subgraph cluster_swap_setup{
                label="void __init swap_setup(void)";;
                set_megs_num_physpages_right_move_20_sub_PAGE_SHIFT[label="set_megs_num_physpages_right_move_20_sub_PAGE_SHIFT"];
                megs_small_16[label="megs_small_16"];
                set_page_cluster_2[label="set_page_cluster_2"];
                set_page_cluster_3[label="set_page_cluster_3"];
                hotcpu_notifier_cpu_swap_callback_0[label="hotcpu_notifier_cpu_swap_callback_0"];
        }
}
