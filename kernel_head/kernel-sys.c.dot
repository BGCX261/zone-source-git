digraph sys_c{
	subgraph cluster_notifier_chain_register{
		label="int notifier_chain_register(struct notifier_block **list, struct notifier_block *n)";
		write_lock_notifier_lock[label="write_lock_notifier_lock"];
		while_list_not_null[label="while_list_not_null"];
		n_priority_great_list_priority[label="n_priority_great_list_priority"];
		set_list_list_next[label="set_list_list_next"];
		set_n_next_list[label="set_n_next_list"];
		set_list_n[label="set_list_n"];
		write_unlock_notifier_lock[label="write_unlock_notifier_lock"];
		return_0[label="return_0"];
	}

	subgraph cluster_notifier_chain_unregister{
		label="int notifier_chain_unregister(struct notifier_block **nl, struct notifier_block *n)";
		write_lock_notifier_lock[label="write_lock_notifier_lock"];
		write_ns_eq_NULL[label="write_ns_eq_NULL"];
		nl_eq_n[label="nl_eq_n"];
		set_nl_n_next[label="set_nl_n_next"];
		write_unlock_notifier_lock[label="write_unlock_notifier_lock"];
		return_0[label="return_0"];
		set_nl_nl_next[label="set_nl_nl_next"];
		write_unlock_notifier_lock[label="write_unlock_notifier_lock"];
		return_ENOENT[label="return_ENOENT"];
	}

	subgraph cluster_notifier_call_chain{
		label="int notifier_call_chain(struct notifier_block **n, unsigned long val, void *v)";
		set_nb_n[label="set_nb_n"];
		nb_not_null[label="nb_not_null"];
		set_ret_nb_notifier_call_nb_val_v[label="set_ret_nb_notifier_call_nb_val_v"];
		ret_NOTIFY_STOP_MASK_set[label="ret_NOTIFY_STOP_MASK_set"];
		return_ret[label="return_ret"];
		set_nb_nb_next[label="set_nb_nb_next"];
		return_ret[label="return_ret"];
	}

	subgraph cluster_register_reboot_notifier{
		label="int register_reboot_notifier(struct notifier_block * nb)";
		return_notifier_chain_register_reboot_notifier_list_nb[label="return_notifier_chain_register_reboot_notifier_list_nb"];
	}

	subgraph cluster_unregister_reboot_notifier{
		label="int unregister_reboot_notifier(struct notifier_block * nb)";
		return_notifier_chain_unregister_reboot_notifier_list_nb[label="return_notifier_chain_unregister_reboot_notifier_list_nb"];
	}

	subgraph cluster_set_one_prio{
		label="static int set_one_prio(struct task_struct *p, int niceval, int error)";
		p_uid_not_eq_current_euid_and_p_euid_not_eq_current_euid_and_capable_CAP_SYS_NICE_false[label="p_uid_not_eq_current_euid_and_p_euid_not_eq_current_euid_and_capable_CAP_SYS_NICE_false"];
		set_error_EPERM[label="set_error_EPERM"];
		goto_out[label="goto_out"];
		niceval_small_task_nice_p_and_can_nice_p_niceval_false[label="niceval_small_task_nice_p_and_can_nice_p_niceval_false"];
		set_error_EACCES[label="set_error_EACCES"];
		goto_out[label="goto_out"];
		set_no_nice_security_task_setnice_p_niceval[label="set_no_nice_security_task_setnice_p_niceval"];
		no_nice_not_null[label="no_nice_not_null"];
		set_error_no_nice[label="set_error_no_nice"];
		goto_out[label="goto_out"];
		err_or_eq_ESRCH[label="err_or_eq_ESRCH"];
		set_error_0[label="set_error_0"];
		set_user_nice_p_niceval[label="set_user_nice_p_niceval"];
		return_error[label="return_error"];
	}

	subgraph cluster_sys_setpriority{
		label="asmlinkage long sys_setpriority(int which, int who, int niceval)";
		set_error_ESRCH[label="set_error_ESRCH"];
		niceval_small_neg20[label="niceval_small_neg20"];
		set_niceval_neg20[label="set_niceval_neg20"];
		niceval_small_19[label="niceval_small_19"];
		set_niceval_19[label="set_niceval_19"];
		read_lock_tasklist_lock[label="read_lock_tasklist_lock"];
		switch_which[label="switch_which"];
		case_PRIO_PROCESS[label="case_PRIO_PROCESS"];
		who_null[label="who_null"];
		set_who_current_pid[label="set_who_current_pid"];
		set_p_find_task_by_pid_who[label="set_p_find_task_by_pid_who"];
		p_not_null[label="p_not_null"];
		set_error_set_one_prio_p_niceval_error[label="set_error_set_one_prio_p_niceval_error"];
		case_PRIO_PGRP[label="case_PRIO_PGRP"];
		who_null[label="who_null"];
		set_who_process_group_current[label="set_who_process_group_current"];
		do_each_task_pid_who_PIDTYPE_PGID_p[label="do_each_task_pid_who_PIDTYPE_PGID_p"];
		set_error_set_one_prio_p_niceval_error[label="set_error_set_one_prio_p_niceval_error"];
		while_each_task_pid_who_PIDTYPE_PGID_p[label="while_each_task_pid_who_PIDTYPE_PGID_p"];
		case_PRIO_USER[label="case_PRIO_USER"];
		set_user_current_user[label="set_user_current_user"];
		who_null[label="who_null"];
		set_who_current_uid[label="set_who_current_uid"];
		who_not_eq_current_uid_and_set_user_find_user_who_null[label="who_not_eq_current_uid_and_set_user_find_user_who_null"];
		goto_out_unlock[label="goto_out_unlock"];
		de_each_thread_g_p[label="de_each_thread_g_p"];
		p_uid_not_eq_who[label="p_uid_not_eq_who"];
		set_error_set_one_prio_p_niceval_error[label="set_error_set_one_prio_p_niceval_error"];
		while_each_thread_g_p[label="while_each_thread_g_p"];
		who_not_eq_current_uid[label="who_not_eq_current_uid"];
		free_uid_user[label="free_uid_user"];
		read_unlock_tasklist_lock[label="read_unlock_tasklist_lock"];
		return_error[label="return_error"];
	}

	subgraph cluster_sys_getpriotity{
		label="asmlinkage long sys_getpriority(int which, int who)";
		set_retval_ESRCH[label="set_retval_ESRCH"];
		read_lock_tasklist_lock[label="read_lock_tasklist_lock"];
		switch_which[label="switch_which"];
		case_PRIO_PROCESS[label="case_PRIO_PROCESS"];
		who_null[label="who_null"];
		set_who_current_pid[label="set_who_current_pid"];
		set_p_find_task_by_pid_who[label="set_p_find_task_by_pid_who"];
		p_not_null[label="p_not_null"];
		niceval_20_sub_task_nice_p[label="niceval_20_sub_task_nice_p"];
		niceval_great_retval[label="niceval_great_retval"];
		set_retval_niceval[label="set_retval_niceval"];
		case_PRIO_PGRP[label="case_PRIO_PGRP"];
		who_null[label="who_null"];
		set_who_process_group_current[label="set_who_process_group_current"];
		do_each_task_pid_who_PIDTYPE_PGID_p[label="do_each_task_pid_who_PIDTYPE_PGID_p"];
		set_niceval_20_sub_task_nice_p[label="set_niceval_20_sub_task_nice_p"];
		niceval_great_niceval[label="niceval_great_niceval"];
		case_PRIO_USER_set_user_current_user[label="case_PRIO_USER_set_user_current_user"];
		who_null[label="who_null"];
		set_who_current_uid[label="set_who_current_uid"];
		who_not_eq_current_uid_and_set_user_find_user_who_null[label="who_not_eq_current_uid_and_set_user_find_user_who_null"];
		goto_out_unlock[label="goto_out_unlock"];
		do_each_thread_g_p[label="do_each_thread_g_p"];
		p_uid_eq_who[label="p_uid_eq_who"];
		set_niceval_20_sub_task_nice_p[label="set_niceval_20_sub_task_nice_p"];
		niceval_great_retval[label="niceval_great_retval"];
		set_retval_niceval[label="set_retval_niceval"];
		while_each_thread_g_p[label="while_each_thread_g_p"];
		who_not_eq_current_uid[label="who_not_eq_current_uid"];
		free_uid_user[label="free_uid_user"];
		read_unlock_tasklist_lock[label="read_unlock_tasklist_lock"];
		return_retval[label="return_retval"];
	}

	subgraph cluster_sys_reboot{
		label="asmlinkage long sys_reboot(int magic1, int magic2, unsigned int cmd, void __user * arg)";
		capable_CAP_SYS_BOOT_false[label="capable_CAP_SYS_BOOT_false"];
		return_EPERM[label="return_EPERM"];
		magic1_not_eq_LINUX_REBOOT_MAGIC1_or_magic2_not_eq_LINUX_REBOOT_MAGIC2_and_magic2_not_eq_LINUX_REBOOT_MAGIC2A_and_magic2_not_eq_LINUX_REBOOT_MAGIC2B_and_magic2_not_eq_LINUX_REBOOT_MAGIC2C[label="magic1_not_eq_LINUX_REBOOT_MAGIC1_or_magic2_not_eq_LINUX_REBOOT_MAGIC2_and_magic2_not_eq_LINUX_REBOOT_MAGIC2A_and_magic2_not_eq_LINUX_REBOOT_MAGIC2B_and_magic2_not_eq_LINUX_REBOOT_MAGIC2C"];
		return_EINVAL[label="return_EINVAL"];
		lock_kernel[label="lock_kernel"];
		switch_cmd[label="switch_cmd"];
		case_LINUX_REBOOT_CMD_RESTART[label="case_LINUX_REBOOT_CMD_RESTART"];
		notifier_call_chain_reboot_notifier_list_SYS_RESTART_NULL[label="notifier_call_chain_reboot_notifier_list_SYS_RESTART_NULL"];
		set_system_state_SYSTEM_RESTART[label="set_system_state_SYSTEM_RESTART"];
		device_shutdown[label="device_shutdown"];
		machine_restart_NULL[label="machine_restart_NULL"];
		case_LINUX_REBOOT_CMD_CAD_ON[label="case_LINUX_REBOOT_CMD_CAD_ON"];
		set_C_A_D_1[label="set_C_A_D_1"];
		case_LINUX_REBOOT_CMD_CAD_OFF[label="case_LINUX_REBOOT_CMD_CAD_OFF"];
		set_C_A_D_0[label="set_C_A_D_0"];
		case_LINUX_REBOOT_CMD_HALT[label="case_LINUX_REBOOT_CMD_HALT"];
		notifier_call_chain_reboot_notifer_list_SYS_HALT_NULL[label="notifier_call_chain_reboot_notifer_list_SYS_HALT_NULL"];
		set_system_state_SYSTEM_HALT[label="set_system_state_SYSTEM_HALT"];
		device_shutdown[label="device_shutdown"];
		machine_halt[label="machine_halt"];
		unlock_kernel[label="unlock_kernel"];
		do_exit_0[label="do_exit_0"];
		case_LINUX_REBOOT_CMD_POWER_OFF[label="case_LINUX_REBOOT_CMD_POWER_OFF"];
		notifier_call_chain_reboot_notifier_list_SYS_POWER_OFF_NULL[label="notifier_call_chain_reboot_notifier_list_SYS_POWER_OFF_NULL"];
		set_system_state_SYSTEM_POWER_OFF[label="set_system_state_SYSTEM_POWER_OFF"];
		device_shutdown[label="device_shutdown"];
		machine_power_off[label="machine_power_off"];
		unlock_kernel[label="unlock_kernel"];
		do_exit_0[label="do_exit_0"];
		case_LINUX_REBOOT_CMD_RESTART2[label="case_LINUX_REBOOT_CMD_RESTART2"];
		strncpy_from_user_buffer_0_arg[label="strncpy_from_user_buffer_0_arg"];
		unlock_kernel[label="unlock_kernel"];
		return_EFAULT[label="return_EFAULT"];
		notifier_call_chain_reboot_notifier_list_SYS_RESTART_buffer[label="notifier_call_chain_reboot_notifier_list_SYS_RESTART_buffer"];
		set_system_state_SYSTEM_RESTART[label="set_system_state_SYSTEM_RESTART"];
		device_shutdown[label="device_shutdown"];
		machine_restart_buffer[label="machine_restart_buffer"];
		CONFIG_SOFTWARE_SUSPEND[label="CONFIG_SOFTWARE_SUSPEND"];
		case_LINUX_REBOOT_CMD_SW_SUSPEND[label="case_LINUX_REBOOT_CMD_SW_SUSPEND"];
		set_ret_software_suspend[label="set_ret_software_suspend"];
		unlock_kernel[label="unlock_kernel"];
		return_ret[label="return_ret"];
		default_[label="default_"];
		unlock_kernel[label="unlock_kernel"];
		return_EINVAL[label="return_EINVAL"];
		unlock_kernel[label="unlock_kernel"];
		return_0[label="return_0"];
	}

	subgraph cluster_deferred_cad{
		label="static void deferred_cad(void *dummy)";
		notifier_call_chain_reboot_notifier_list_SYS_RESTART_NULL[label="notifier_call_chain_reboot_notifier_list_SYS_RESTART_NULL"];
		machine_restart_NULL[label="machine_restart_NULL"];
	}

	subgraph cluster_ctrl_alt_del{
		label="void ctrl_alt_del(void)";
		DECLARE_WORK_cad_work_deferred_cad_NULL[label="DECLARE_WORK_cad_work_deferred_cad_NULL"];
		C_A_D_not_null[label="C_A_D_not_null"];
		schedule_work_cad_work[label="schedule_work_cad_work"];
		kill_proc_cad_pid_SIGINT_1[label="kill_proc_cad_pid_SIGINT_1"];
	}

	subgraph cluster_sys_setregid{
		label="asmlinkage long sys_setregid(gid_t rgid, gid_t egid)";
		set_old_rgid_current_gid[label="set_old_rgid_current_gid"];
		set_old_egid_current_egid[label="set_old_egid_current_egid"];
		set_new_rgid_old_rgid[label="set_new_rgid_old_rgid"];
		set_new_egid_old_egid[label="set_new_egid_old_egid"];
		set_retval_security_task_setgid_rgid_egid_gid_t_sub_1_LSM_SETID_RE[label="set_retval_security_task_setgid_rgid_egid_gid_t_sub_1_LSM_SETID_RE"];
		retval_not_null[label="retval_not_null"];
		return_retval[label="return_retval"];
		rgid_not_eq_gid_t_sub_1[label="rgid_not_eq_gid_t_sub_1"];
		old_rgid_eq_rgid_or_current_egid_eq_rgid_or_capable_CAP_SETGID[label="old_rgid_eq_rgid_or_current_egid_eq_rgid_or_capable_CAP_SETGID"];
		set_new_rgid_rgid[label="set_new_rgid_rgid"];
		return_EPERM[label="return_EPERM"];
		egid_not_eq_gid_t_sub_1[label="egid_not_eq_gid_t_sub_1"];
		old_rgid_eq_egid_or_current_egid_eq_egid_or_current_sgid_eq_egid_or_capable_CAP_SETGID[label="old_rgid_eq_egid_or_current_egid_eq_egid_or_current_sgid_eq_egid_or_capable_CAP_SETGID"];
		set_new_egid_egid[label="set_new_egid_egid"];
		return_EPERM[label="return_EPERM"];
		new_egid_not_eq_old_egid[label="new_egid_not_eq_old_egid"];
		set_current_mm_dumpable_0[label="set_current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		rgid_not_eq_gid_t_sub_1_or_egid_not_eq_gid_t_sub_1_and_egid_not_eq_old_rgid[label="rgid_not_eq_gid_t_sub_1_or_egid_not_eq_gid_t_sub_1_and_egid_not_eq_old_rgid"];
		set_current_sgid_new_egid[label="set_current_sgid_new_egid"];
		set_current_fsgid_new_egid[label="set_current_fsgid_new_egid"];
		set_current_egid_new_egid[label="set_current_egid_new_egid"];
		set_current_gid_new_rgid[label="set_current_gid_new_rgid"];
		key_fsgid_changed_current[label="key_fsgid_changed_current"];
		return_0[label="return_0"];
	}

	subgraph cluster_sys_setgid{
		label="asmlinkage long sys_setgid(gid_t gid)";
		set_old_egid_current_egid[label="set_old_egid_current_egid"];
		securith_task_setgid_gid_git_t_sub_1_gid_t_sub_1_LSM_SETID_ID[label="securith_task_setgid_gid_git_t_sub_1_gid_t_sub_1_LSM_SETID_ID"];
		capable_CAP_SETGID_true[label="capable_CAP_SETGID_true"];
		old_egid_not_eq_gid[label="old_egid_not_eq_gid"];
		set_current_mm_dumpable_0[label="set_current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		set_current_gid_current_egid_current_sgid_current_fsgid_gid[label="set_current_gid_current_egid_current_sgid_current_fsgid_gid"];
		gid_eq_current_gid_or_gid_current_sgid[label="gid_eq_current_gid_or_gid_current_sgid"];
		old_egid_not_eq_gid[label="old_egid_not_eq_gid"];
		set_current_mm_dumpable_0[label="set_current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		set_current_egid_current_fsgid_gid[label="set_current_egid_current_fsgid_gid"];
		return_EPERM[label="return_EPERM"];
		key_fsgid_changed_current[label="key_fsgid_changed_current"];
		return_0[label="return_0"];
	}

	subgraph cluster_set_user{
		label="static int set_user(uid_t new_ruid, int dumpclear)";
		set_new_user_alloc_uid_new_ruid[label="set_new_user_alloc_uid_new_ruid"];
		new_user_null[label="new_user_null"];
		return_EAGAIN[label="return_EAGAIN"];
		atomic_read_new_user_processes_not_small_current_signal_rlim_RLIMIT_NPROC_rlim_cur_and_new_user_not_eq_root_user[label="atomic_read_new_user_processes_not_small_current_signal_rlim_RLIMIT_NPROC_rlim_cur_and_new_user_not_eq_root_user"];
		free_uid_new_user[label="free_uid_new_user"];
		return_EAGAIN[label="return_EAGAIN"];
		switch_uid_new_user[label="switch_uid_new_user"];
		dumpclear_not_null[label="dumpclear_not_null"];
		current_mm_dumpable_0[label="current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		set_current_uid_new_ruid[label="set_current_uid_new_ruid"];
		return_0[label="return_0"];
	}

	subgraph cluster_sys_setreuid{
		label="asmlinkage long sys_setreuid(uid_t ruid, uid_t euid)";
		security_task_setuid_ruid_euid_uid_t_sub_1_LSM_SETID_RE[label="security_task_setuid_ruid_euid_uid_t_sub_1_LSM_SETID_RE"];
		set_new_ruid_old_ruid_current_uid[label="set_new_ruid_old_ruid_current_uid"];
		set_new_euid_old_euid_current_euid[label="set_new_euid_old_euid_current_euid"];
		set_old_suid_current_suid[label="set_old_suid_current_suid"];
		ruid_not_eq_uid_t_sub_1[label="ruid_not_eq_uid_t_sub_1"];
		set_new_ruid_ruid[label="set_new_ruid_ruid"];
		old_ruid_not_eq_ruid_and_current_euid_not_eq_ruid_and_capable_CAP_SETUID[label="old_ruid_not_eq_ruid_and_current_euid_not_eq_ruid_and_capable_CAP_SETUID"];
		return_EPERM[label="return_EPERM"];
		euid_not_eq_uid_t_sub_1[label="euid_not_eq_uid_t_sub_1"];
		set_new_euid_euid[label="set_new_euid_euid"];
		old_ruid_not_eq_euid_and_current_euid_not_eq_euid_and_current_suid_not_eq_euid_and_capable_CAP_SETUID[label="old_ruid_not_eq_euid_and_current_euid_not_eq_euid_and_current_suid_not_eq_euid_and_capable_CAP_SETUID"];
		return_EPERM[label="return_EPERM"];
		new_ruid_not_eq_old_ruid_and_set_user_new_ruid_new_euid_not_eq_old_euid_small_0[label="new_ruid_not_eq_old_ruid_and_set_user_new_ruid_new_euid_not_eq_old_euid_small_0"];
		return_EAGAIN[label="return_EAGAIN"];
		new_euid_not_eq_old_euid[label="new_euid_not_eq_old_euid"];
		set_current_mm_dumpable_0[label="set_current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		set_current_fsuid_current_euid_new_euid[label="set_current_fsuid_current_euid_new_euid"];
		ruid_not_eq_uid_t_sub_1_or_euid_not_eq_uid_t_sub_1_and_euid_not_eq_old_ruid[label="ruid_not_eq_uid_t_sub_1_or_euid_not_eq_uid_t_sub_1_and_euid_not_eq_old_ruid"];
		set_current_suid_current_euid[label="set_current_suid_current_euid"];
		set_current_fsuid_current_euid[label="set_current_fsuid_current_euid"];
		key_fsuid_changed_current[label="key_fsuid_changed_current"];
		return_security_task_post_setuid_old_ruid_old_euid_old_suid_LSM_SETID_RE[label="return_security_task_post_setuid_old_ruid_old_euid_old_suid_LSM_SETID_RE"];
	}

	subgraph cluster_sys_setuid{
		label="asmlinkage long sys_setuid(uid_t uid)";
		set_old_euid_current_euid[label="set_old_euid_current_euid"];
	    security_task_setuid_uid_uid_t_sub_1_uid_t_sub_1_LSM_SETID_ID[label="security_task_setuid_uid_uid_t_sub_1_uid_t_sub_1_LSM_SETID_ID"];
		set_old_ruid_new_ruid_current_uid[label="set_old_ruid_new_ruid_current_uid"];
		set_old_suid_current_suid[label="set_old_suid_current_suid"];
		set_new_suid_old_suid[label="set_new_suid_old_suid"];
		capable_CAP_SETUID_true[label="capable_CAP_SETUID_true"];
		uid_not_eq_old_ruid_and_set_user_uid_old_euid_not_eq_uid_small_0[label="uid_not_eq_old_ruid_and_set_user_uid_old_euid_not_eq_uid_small_0"];
		return_EAGAIN[label="return_EAGAIN"];
		set_new_suid_uid[label="set_new_suid_uid"];
		uid_not_eq_current_uid_and_uid_not_eq_new_suid[label="uid_not_eq_current_uid_and_uid_not_eq_new_suid"];
		return_EPERM[label="return_EPERM"];
		old_euid_eq_uid[label="old_euid_eq_uid"];
		set_current_mm_dumpable_0[label="set_current_mm_dumpable_0"];
		smp_wmb[label="smp_wmb"];
		set_current_fsuid_current_euid_uid[label="set_current_fsuid_current_euid_uid"];
		set_current_suid_new_suid[label="set_current_suid_new_suid"];
		key_fsuid_changed_current[label="key_fsuid_changed_current"];
		return_security_task_post_setuid_old_ruid_old_euid_old_suid_LSM_SETID_ID[label="return_security_task_post_setuid_old_ruid_old_euid_old_suid_LSM_SETID_ID"];
	}

	subgraph cluster_sys_setresuid{
		label="asmlinkage long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid)";
		set_old_ruid_current_uid[label="set_old_ruid_current_uid"];
		set_old_euid_current_euid[label="set_old_euid_current_euid"];
		set_old_suid_current_suid[label="set_old_suid_current_suid"];
		security_task_setuid_ruid_euid_suid_LSM_SETID_RES[label="security_task_setuid_ruid_euid_suid_LSM_SETID_RES"];
		capable_CAP_SETUID_false[label="capable_CAP_SETUID_false"];
		ruid_not_eq_uid_t_sub_1_and_ruid_not_eq_current_uid_and_ruid_not_eq_current_euid_and_ruid_current_suid[label="ruid_not_eq_uid_t_sub_1_and_ruid_not_eq_current_uid_and_ruid_not_eq_current_euid_and_ruid_current_suid"];
		return_EPERM[label="return_EPERM"];
		euid_not_eq_uid_t_sub_1_and_euid_not_eq_current_uid_and_euid_not_eq_current_euid_and_euid_not_eq_current_suid[label="euid_not_eq_uid_t_sub_1_and_euid_not_eq_current_uid_and_euid_not_eq_current_euid_and_euid_not_eq_current_suid"];
		return_EPERM[label="return_EPERM"];
		suid_not_eq_uid_t_sub_1_and_suid_not_eq_current_uid_and_suid_current_euid_and_suid_not_eq_current_suid[label="suid_not_eq_uid_t_sub_1_and_suid_not_eq_current_uid_and_suid_current_euid_and_suid_not_eq_current_suid"];
		return_EPERM[label="return_EPERM"];
		ruid_not_sq_uid_t_sub_1[label="ruid_not_sq_uid_t_sub_1"];
		ruid_not_eq_current_uid_and_set_user_ruid_euid_not_eq_current_euid_small_0[label="ruid_not_eq_current_uid_and_set_user_ruid_euid_not_eq_current_euid_small_0"];
		return_EAGAIN[label="return_EAGAIN"];
	}

	subgraph cluster_sys_times{
		label="asmlinkage long sys_times(struct tms __user * tbuf)";
		tbuf_not_null[label="tbuf_not_null"];
		set_tsk_current[label="set_tsk_current"];
		read_lock_tasklist_lock[label="read_lock_tasklist_lock"];
		set_utime_tsk_signal_utime[label="set_utime_tsk_signal_utime"];
		set_stime_tsk_signal_stime[label="set_stime_tsk_signal_stime"];
		set_t_tsk[label="set_t_tsk"];
		set_utime_cputime_add_utime_t_utime[label="set_utime_cputime_add_utime_t_utime"];
		set_stime_cputime_add_stime_t_stime[label="set_stime_cputime_add_stime_t_stime"];
		set_t_next_thread_t[label="set_t_next_thread_t"];
		t_not_eq_tsk[label="t_not_eq_tsk"];
		lock_tsk_sighand_siglock[label="lock_tsk_sighand_siglock"];
		set_cutime_tsk_signal_cutime[label="set_cutime_tsk_signal_cutime"];
		set_cstime_tsk_signal_cstime[label="set_cstime_tsk_signal_cstime"];
		unlock_tsk_sighand_siglock[label="unlock_tsk_sighand_siglock"];
		unlock_tasklist_lock[label="unlock_tasklist_lock"];
		set_tmp_tms_utime_cputime_to_clock_t_utime[label="set_tmp_tms_utime_cputime_to_clock_t_utime"];
		set_tmp_tms_stime_cputime_to_clock_t_stime[label="set_tmp_tms_stime_cputime_to_clock_t_stime"];
		set_tmp_tms_cutime_cputime_to_clock_t_cutime[label="set_tmp_tms_cutime_cputime_to_clock_t_cutime"];
		set_tmp_tms_cstime_cputime_to_clock_t_cstime[label="set_tmp_tms_cstime_cputime_to_clock_t_cstime"];
		copy_to_user_tbuf_tmp[label="copy_to_user_tbuf_tmp"];
		return_EFAULT[label="return_EFAULT"];
		return_jiffies_64_to_clock_t_get_jiffies_64[label="return_jiffies_64_to_clock_t_get_jiffies_64"];
	}

	subgraph cluster_sys_setpgid{
		label="asmlinkage long sys_setpgid(pid_t pid, pid_t pgid)";
		pid_null[label="pid_null"];
		set_pid_current_pid[label="set_pid_current_pid"];
		pgid_null[label="pgid_null"];
		set_pgid_pid[label="set_pgid_pid"];
		pgid_small_0[label="pgid_small_0"];
		return_EINVAL[label="return_EINVAL"];
		write_lock_tasklist_lock[label="write_lock_tasklist_lock"];
		set_p_find_task_by_pid_pid[label="set_p_find_task_by_pid_pid"];
		p_null[label="p_null"];
		goto_out[label="goto_out"];
		thread_group_leader_p_false[label="thread_group_leader_p_false"];
		goto_out[label="goto_out"];
		p_parent_eq_current_or_p_real_parent_eq_current[label="p_parent_eq_current_or_p_real_parent_eq_current"];
		p_signal_session_not_eq_current_signal_session[label="p_signal_session_not_eq_current_signal_session"];
		p_did_exec_not_null[label="p_did_exec_not_null"];
		p_not_eq_current[label="p_not_eq_current"];
		p_signal_leader_not_null[label="p_signal_leader_not_null"];
		goto_out[label="goto_out"];
		pgid_not_eq_pid[label="pgid_not_eq_pid"];
		do_each_task_pid_pgid_PIDTYPE_PGID_p[label="do_each_task_pid_pgid_PIDTYPE_PGID_p"];
		p_signal_session_eq_current_signal_session[label="p_signal_session_eq_current_signal_session"];
		goto_ok_pgid[label="goto_ok_pgid"];
		while_each_task_pid_pgid_PIDTYPE_PGID_p[label="while_each_task_pid_pgid_PIDTYPE_PGID_p"];
		goto_out[label="goto_out"];
		security_task_setpgid_p_pgid[label="security_task_setpgid_p_pgid"];
		process_group_p_not_eq_pgid[label="process_group_p_not_eq_pgid"];
		detach_pid_p_PIDTYPE_PGID[label="detach_pid_p_PIDTYPE_PGID"];
		set_p_signal_pgrp_pgid[label="set_p_signal_pgrp_pgid"];
		attach_pid_p_PIDTYPE_PGID_pgid[label="attach_pid_p_PIDTYPE_PGID_pgid"];
		write_unlock_tasklist_lock[label="write_unlock_tasklist_lock"];
		return_err[label="return_err"];
	}

        subgraph cluster_sys_getsid{
                label="asmlinkage long sys_getsid(pid_t pid)";
                pid_null[label="pid_null"];
                return_current_signal_session[label="return_current_signal_session"];
                read_lock_tasklist_lock[label="read_lock_tasklist_lock"];
                set_p_find_task_by_pid[label="set_p_find_task_by_pid"];
                set_retval_ESRCH[label="set_retval_ESRCH"];
                p_not_null[label="p_not_null"];
                set_retval_security_task_getsid_p[label="set_retval_security_task_getsid_p"];
                retval_null[label="retval_null"];
                set_retval_p_signal_session[label="set_retval_p_signal_session"];
                read_unlock_tasklist_lock[label="read_unlock_tasklist_lock"];
                return_retval[label="return_retval"];
        }

        subgraph cluster_sys_setsid{
                label="asmlinkage long sys_setsid(void)";
                set_err_EPERM[label="set_err_EPERM"];
                thread_group_loader_current_null[label="thread_group_loader_current_null"];
                return_EINVAL[label="return_EINVAL"];
                down_tty_sem[label="down_tty_sem"];
                write_lock_tasklist_lock[label="write_lock_tasklist_lock"];
                set_pid_find_pid_PIDTYPE_PGID_current_pid[label="set_pid_find_pid_PIDTYPE_PGID_current_pid"];
                pid_not_null[label="pid_not_null"];
                goto_out[label="goto_out"];
                set_current_signal_leader_1[label="set_current_signal_leader_1"];
                __set_special_pids_current_pid_current_pid[label="__set_special_pids_current_pid_current_pid"];
                clear_current_tty[label="clear_current_tty"];
                set_current_signal_tty_old_pgrp_0[label="set_current_signal_tty_old_pgrp_0"];
                set_err_process_group_current[label="set_err_process_group_current"];
                write_unlock_tasklist_lock[label="write_unlock_tasklist_lock"];
                up_tty_sem[label="up_tty_sem"];
                return_err[label="return_err"];
        }

        subgraph cluster_groups_alloc{
                label="struct group_info *groups_alloc(int gidsetsize)";
                set_nblocks_gidsetsize_add_NGROUPS_PER_BLOCK_sub_1_div_NGROUPS_PER_BLOCK[label="set_nblocks_gidsetsize_add_NGROUPS_PER_BLOCK_sub_1_div_NGROUPS_PER_BLOCK"];
                set_nblocks_null_or_1_decide_nblocks[label="set_nblocks_null_or_1_decide_nblocks"];
                set_group_info_kmalloc[label="set_group_info_kmalloc"];
                set_group_info_ngroups_gidsetsize[label="set_group_info_ngroups_gidsetsize"];
                set_group_info_nblocks_nblocks[label="set_group_info_nblocks_nblocks"];
                atomic_set_group_info_usage_1[label="atomic_set_group_info_usage_1"];
                gidsetsize_not_great_NGROUPS_SMALL[label="gidsetsize_not_great_NGROUPS_SMALL"];
                set_group_info_blocks_0_group_info_small_block[label="set_group_info_blocks_0_group_info_small_block"];
                for_i_nblocks[label="for_i_nblocks"];
                set_b___get_free_page[label="set_b___get_free_page"];
                b_null[label="b_null"];
                goto_out_undo_partial_alloc[label="goto_out_undo_partial_alloc"];
                set_group_info_blocks_i_b[label="set_group_info_blocks_i_b"];
                return_group_info[label="return_group_info"];
                while_dec_i_not_small_0[label="while_dec_i_not_small_0"];
                free_page_group_info_blocks_i[label="free_page_group_info_blocks_i"];
                kfree_group_info[label="kfree_group_info"];
                return_NULL[label="return_NULL"];
        }

        subgraph cluster_groups_free{
                label="void groups_free(struct group_info *group_info)";
                group_info_blocks_0_not_eq_group_info_small_block[label="group_info_blocks_0_not_eq_group_info_small_block"];
                for_i_group_info_nblocks[label="for_i_group_info_nblocks"];
                free_page_group_info_blocks_i[label="free_page_group_info_blocks_i"];
                kfree_group_info[label="kfree_group_info"];
        }

        subgraph cluster_groups_to_user{
                label="static int groups_to_user(gid_t __user *grouplist,struct group_info *group_info)";
                set_count_group_info_ngroups[label="set_count_group_info_ngroups"];
                for_i_group_info_nblocks[label="for_i_group_info_nblocks"];
                set_cp_count_min_NGROUPS_PER_BLOCK_count[label="set_cp_count_min_NGROUPS_PER_BLOCK_count"];
                set_off_i_multi_NGROUPS_PER_BLOCK[label="set_off_i_multi_NGROUPS_PER_BLOCK"];
                set_len_cp_count_multi_sizeof_grouplist[label="set_len_cp_count_multi_sizeof_grouplist"];
                copy_to_user_grouplist_add_off_group_info_blocks_i[label="copy_to_user_grouplist_add_off_group_info_blocks_i"];
                count_self_sub_cp_count[label="count_self_sub_cp_count"];
                return_0[label="return_0"];
        }

        subgraph cluster_groups_from_usere{
                label="static int groups_from_user(struct group_info *group_info, gid_t __user *grouplist)";
                set_count_group_info_ngroups[label="set_count_group_info_ngroups"];
                for_i_group_info_nblocks[label="for_i_group_info_nblocks"];
                set_cp_count_min_NGROUPS_PER_BLOCK_count[label="set_cp_count_min_NGROUPS_PER_BLOCK_count"];
                set_off_i_multi_NGROUPS_PER_BLOCK[label="set_off_i_multi_NGROUPS_PER_BLOCK"];
                set_len_cp_count_multi_grouplist[label="set_len_cp_count_multi_grouplist"];
        }

        subgraph cluster_groups_sort{
                label="static void groups_sort(struct group_info *group_info)";
                set_gidsetsize_group_info_ngroups[label="set_gidsetsize_group_info_ngroups"];
                for_stride_gidsetsie[label="for_stride_gidsetsie"];
                stride_self_div_3[label="stride_self_div_3"];
                while_stride_true[label="while_stride_true"];
                set_max_gidsetsize_sub_stride[label="set_max_gidsetsize_sub_stride"];
                for_base_max[label="for_base_max"];
                set_left_base[label="set_left_base"];
                set_right_left_add_stride[label="set_right_left_add_stride"];
                set_tmp_GROUP_AT_group_info_right[label="set_tmp_GROUP_AT_group_info_right"];
                while_left_not_small_0_and_GROUP_AT_group_info_left_great_tmp[label="while_left_not_small_0_and_GROUP_AT_group_info_left_great_tmp"];
                set_GROUP_AT_goup_info_right_GROUP_AT_group_info_left[label="set_GROUP_AT_goup_info_right_GROUP_AT_group_info_left"];
                set_right_left[label="set_right_left"];
                left_self_sub_stride[label="left_self_sub_stride"];
                GROUP_AT_group_info_right_tmp[label="GROUP_AT_group_info_right_tmp"];
                stride_self_div_3[label="stride_self_div_3"];
        }

        subgraph cluster_group_search{
                label="static int groups_search(struct group_info *group_info, gid_t grp)";
                set_left_0[label="set_left_0"];
                set_right_group_info_ngroups[label="set_right_group_info_ngroups"];
                left_small_right[label="left_small_right"];
                set_mid_left_right_div_2[label="set_mid_left_right_div_2"];
                set_cmp_grp_sub_GROUP_AT_group_info_mid[label="set_cmp_grp_sub_GROUP_AT_group_info_mid"];
                cmp_great_0[label="cmp_great_0"];
                set_left_mid_add_1[label="set_left_mid_add_1"];
                cmp_small_0[label="cmp_small_0"];
                set_right_mid[label="set_right_mid"];
                return_1[label="return_1"];
                return_0[label="return_0"];
        }

        subgraph cluster_set_current_groups{
                label="int set_current_groups(struct group_info *group_info)";
                security_task_setgroups_group_info[label="security_task_setgroups_group_info"];
                groups_sort_group_info[label="groups_sort_group_info"];
                get_group_info_group_info[label="get_group_info_group_info"];
                task_lock_current[label="task_lock_current"];
                set_old_info_current_group_info[label="set_old_info_current_group_info"];
                set_current_group_info_group_info[label="set_current_group_info_group_info"];
                task_unlock_current[label="task_unlock_current"];
                put_group_info_old_info[label="put_group_info_old_info"];
                return_0[label="return_0"];
        }

        subgraph cluster_sys_getgroups{
                label="asmlinkage long sys_getgroups(int gidsetsize, gid_t __user *grouplist)";
                get_group_info_current_group_info[label="get_group_info_current_group_info"];
                set_i_current_group_info_ngroups[label="set_i_current_group_info_ngroups"];
                gidsetsize_not_null[label="gidsetsize_not_null"];
                i_great_gidsetsize[label="i_great_gidsetsize"];
                set_i_EINVAL[label="set_i_EINVAL"];
                got_out[label="got_out"];
                groups_to_user_grouplist_current_group_info[label="groups_to_user_grouplist_current_group_info"];
                set_i_EFAULT[label="set_i_EFAULT"];
                goto_out[label="goto_out"];
                put_group_info_current_group_info[label="put_group_info_current_group_info"];
                return_i[label="return_i"];
        }

        subgraph cluster_sys_setgroups{
                label="asmlinkage long sys_setgroups(int gidsetsize, gid_t __user *grouplist)";
                capable_CAP_SETGID_false[label="capable_CAP_SETGID_false"];
                return_EPERM[label="return_EPERM"];
                gidsetsize_great_NGROUPS_MAX[label="gidsetsize_great_NGROUPS_MAX"];
                return_EINVAL[label="return_EINVAL"];
                set_group_info_groups_alloc_gidsetsize[label="set_group_info_groups_alloc_gidsetsize"];
                set_retval_groups_from_user_group_info_groupslist[label="set_retval_groups_from_user_group_info_groupslist"];
                retval_not_null[label="retval_not_null"];
                put_group_info_group_info[label="put_group_info_group_info"];
                return_retval[label="return_retval"];
                set_retval_set_current_groups_group_info[label="set_retval_set_current_groups_group_info"];
                put_group_info_group_info[label="put_group_info_group_info"];
                return_retval[label="return_retval"];
        }

        subgraph cluster_in_group_p{
                label="int in_group_p(gid_t grp)";
                set_retval_1[label="set_retval_1"];
                grp_not_eq_current_fsgid[label="grp_not_eq_current_fsgid"];
                get_group_info_current_group_info[label="get_group_info_current_group_info"];
                set_retval_groups_search_current_group_info_grp[label="set_retval_groups_search_current_group_info_grp"];
                put_group_info_current_group_info[label="put_group_info_current_group_info"];
                return_retval[label="return_retval"];
        }

        subgraph cluster_is_egroup_p{
                label="int in_egroup_p(gid_t grp)";
                set_retval_1[label="set_retval_1"];
                grp_not_eq_current_egid[label="grp_not_eq_current_egid"];
                get_group_info_current_group_info[label="get_group_info_current_group_info"];
                set_retval_groups_search_current_group_info_grp[label="set_retval_groups_search_current_group_info_grp"];
                put_group_info_current_group_info[label="put_group_info_current_group_info"];
                return_retval[label="return_retval"];
        }

        subgraph cluster_sys_newuname{
                label="asmlinkage long sys_newuname(struct new_utsname __user * name)";
                down_read_uts_sem[label="down_read_uts_sem"];
                copy_to_user_name_system_utsname[label="copy_to_user_name_system_utsname"];
                set_errno_EFAULT[label="set_errno_EFAULT"];
                up_read_uts_sem[label="up_read_uts_sem"];
                return_errno[label="return_errno"];
        }

        subgraph cluster_sys_sethostname{
                label="asmlinkage long sys_sethostname(char __user *name, int len)";
                capable_CAP_SYS_ADMIN_false[label="capable_CAP_SYS_ADMIN_false"];
                return_EPERM[label="return_EPERM"];
                len_small_0_or_len_great___NEW_UTS_LEN[label="len_small_0_or_len_great___NEW_UTS_LEN"];
                return_EINVAL[label="return_EINVAL"];
                down_write_uts_sem[label="down_write_uts_sem"];
                set_errno_EFAULT[label="set_errno_EFAULT"];
                copy_from_user_tmp_name[label="copy_from_user_tmp_name"];
                memcpy_system_utsname_nodename_tmp[label="memcpy_system_utsname_nodename_tmp"];
                set_system_utsname_nodename_len_0[label="set_system_utsname_nodename_len_0"];
                set_errno_0[label="set_errno_0"];
                up_write_uts_sem[label="up_write_uts_sem"];
                return_errno[label="return_errno"];
        }

        subgraph cluster_sys_gethostname{
                label="asmlinkage long sys_gethostname(char __user *name, int len)";
                down_read_uts_sem[label="down_read_uts_sem"];
                set_i_1_add_strlen_system_utsname_nodename[label="set_i_1_add_strlen_system_utsname_nodename"];
                i_great_len[label="i_great_len"];
                set_i_len[label="set_i_len"];
                set_errno_0[label="set_errno_0"];
                copy_to_user_name_system_utsname_nodename[label="copy_to_user_name_system_utsname_nodename"];
                up_read_uts_sem[label="up_read_uts_sem"];
                return_error[label="return_error"];
        }

        subgraph cluster_sys_setdomainname{
                label="asmlinkage long sys_setdomainname(char __user *name, int len)";
                capable_CAP_SYS_ADMIN_false[label="capable_CAP_SYS_ADMIN_false"];
                return_EPERM[label="return_EPERM"];
                len_small_0_or_len_great___NEW_UTS_LEN[label="len_small_0_or_len_great___NEW_UTS_LEN"];
                return_EINVAL[label="return_EINVAL"];
                down_write_uts_sem[label="down_write_uts_sem"];
                set_errno_EFAULT[label="set_errno_EFAULT"];
                copy_from_user_tmp_name[label="copy_from_user_tmp_name"];
                memcpy_sys_utsname_domainname_tmp[label="memcpy_sys_utsname_domainname_tmp"];
                set_system_utsname_domainname_len_0[label="set_system_utsname_domainname_len_0"];
                set_errno_0[label="set_errno_0"];
                up_write_uts_sem[label="up_write_uts_sem"];
                return_errno[label="return_errno"];
        }

        subgraph cluster_sys_getrlimit{
                label="asmlinkage long sys_getrlimit(unsigned int resource, struct rlimit __user *rlim)";
                task_lock_current_group_leader[label="task_lock_current_group_leader"];
                set_value_current_signal_rlim_resource[label="set_value_current_signal_rlim_resource"];
                task_unlock_current_group_leader[label="task_unlock_current_group_leader"];
                return_copy_to_user_rlim_value[label="return_copy_to_user_rlim_value"];
        }

        subgraph cluster_sys_old_getrlimit{
                label="asmlinkage long sys_old_getrlimit(unsigned int resource, struct rlimit __user *rlim)";
                task_lock_current_group_leader[label="task_lock_current_group_leader"];
                set_x_current_signal_rlim_resource[label="set_x_current_signal_rlim_resource"];
                task_unlock_current_group_leader[label="task_unlock_current_group_leader"];
                x_rlim_cur_great_0X7FFFFFF[label="x_rlim_cur_great_0X7FFFFFF"];
                set_x_rlim_cur_0x7fffffff[label="set_x_rlim_cur_0x7fffffff"];
                x_rlim_max_great_0X7FFFFFFF[label="x_rlim_max_great_0X7FFFFFFF"];
                set_x_rlim_max_0x7fffffff[label="set_x_rlim_max_0x7fffffff"];
                return_copy_to_user_rlim_x[label="return_copy_to_user_rlim_x"];
        }

        subgraph cluster_sys_setrlimit{
                label="asmlinkage long sys_setrlimit(unsigned int resource, struct rlimit __user *rlim)";
                copy_from_user_new_rlim_rlim[label="copy_from_user_new_rlim_rlim"];
                new_rlim_rlim_cur_great_new_rlim_rlim_max[label="new_rlim_rlim_cur_great_new_rlim_rlim_max"];
                set_old_rlim_current_signal_rlim_add_resource[label="set_old_rlim_current_signal_rlim_add_resource"];
                new_rlim_rlim_max_great_old_rlim_rlim_max_and_capable_CAP_SYS_RESOURC_false[label="new_rlim_rlim_max_great_old_rlim_rlim_max_and_capable_CAP_SYS_RESOURC_false"];
                resource_eq_RLIMIT_NOFILE_and_new_rlim_rlim_max_great_NR_OPEN[label="resource_eq_RLIMIT_NOFILE_and_new_rlim_rlim_max_great_NR_OPEN"];
                set_retval_security_task_setrlimit_resource_new_rlim[label="set_retval_security_task_setrlimit_resource_new_rlim"];
                task_lock_current_group_leader[label="task_lock_current_group_leader"];
                set_old_rlim_new_rlim[label="set_old_rlim_new_rlim"];
                task_unlock_current_group_leader[label="task_unlock_current_group_leader"];
                resource_eq_RLIMIT_CPU_and_new_rlim_rlim_cur_not_eq_RLIM_INFINITY_and_cputime_eq_current_signal_it_prof_expires_cputime_zero_or_new_rlim_rlim_cur_not_great_cputime_to_secs_current_signal_it_prof_expires[label="resource_eq_RLIMIT_CPU_and_new_rlim_rlim_cur_not_eq_RLIM_INFINITY_and_cputime_eq_current_signal_it_prof_expires_cputime_zero_or_new_rlim_rlim_cur_not_great_cputime_to_secs_current_signal_it_prof_expires"];
                set_cputime_secs_to_cputime_new_rlim_rlim_cur[label="set_cputime_secs_to_cputime_new_rlim_rlim_cur"];
                lock_tasklist_lock[label="lock_tasklist_lock"];
                lock_current_sighand_siglock[label="lock_current_sighand_siglock"];
                set_process_cpu_timer_current_CPUCLOCK_PROF_cputime_NULL[label="set_process_cpu_timer_current_CPUCLOCK_PROF_cputime_NULL"];
                unlock_current_sighand_siglock[label="unlock_current_sighand_siglock"];
                unlock_tasklist_lock[label="unlock_tasklist_lock"];
                return_0[label="return_0"];
        }

        subgraph cluster_k_getrusage{
                label="static void k_getrusage(struct task_struct *p, int who, struct rusage *r)";
                memset_r_0[label="memset_r_0"];
                switch_who[label="switch_who"];
                case_RUSAGE_CHILDREN[label="case_RUSAGE_CHILDREN"];
                lock_p_sgihand_siglock[label="lock_p_sgihand_siglock"];
                set_utime_p_signal_cutime[label="set_utime_p_signal_cutime"];
                set_stime_p_signal_cstime[label="set_stime_p_signal_cstime"];
                set_r_ru_nvcsw_p_signal_cnvcsw[label="set_r_ru_nvcsw_p_signal_cnvcsw"];
                set_r_ru_nivcsw_p_signal_cnivcsw[label="set_r_ru_nivcsw_p_signal_cnivcsw"];
                set_r_ru_minflt_p_signal_cmin_flt[label="set_r_ru_minflt_p_signal_cmin_flt"];
                set_r_ru_majflt_p_signal_cmaj_flt[label="set_r_ru_majflt_p_signal_cmaj_flt"];
                unlock_p_sighand_siglock[label="unlock_p_sighand_siglock"];
                cputime_to_timeval_utime_r_ru_utime[label="cputime_to_timeval_utime_r_ru_utime"];
                cputime_to_timeval_stime_r_ru_stime[label="cputime_to_timeval_stime_r_ru_stime"];
                case_RUSAGE_SELF[label="case_RUSAGE_SELF"];
                lock_p_sighand_siglock[label="lock_p_sighand_siglock"];
                set_utime_stime_cputime_zero[label="set_utime_stime_cputime_zero"];
                case_RUSAGE_BOTH[label="case_RUSAGE_BOTH"];
                lock_p_sighand_siglock[label="lock_p_sighand_siglock"];
                set_time_p_signall_cutime[label="set_time_p_signall_cutime"];
                set_stime_p_signal_cstime[label="set_stime_p_signal_cstime"];
                set_r_ru_nvcsw_p_signal_cnvcsw[label="set_r_ru_nvcsw_p_signal_cnvcsw"];
                set_r_ru_nivcsw_p_signal_cnivcsw[label="set_r_ru_nivcsw_p_signal_cnivcsw"];
                set_r_ru_minflt_p_signal_cmin_flt[label="set_r_ru_minflt_p_signal_cmin_flt"];
                set_r_ru_majflt_p_signal_cmaj_flt[label="set_r_ru_majflt_p_signal_cmaj_flt"];
                set_utime_cputime_add_utime_p_signal_utime[label="set_utime_cputime_add_utime_p_signal_utime"];
                set_stime_cputime_add_stime_p_signal_stime[label="set_stime_cputime_add_stime_p_signal_stime"];
                r_ru_nvcsw_self_add_p_signal_cnvcsw[label="r_ru_nvcsw_self_add_p_signal_cnvcsw"];
                r_ru_nivcsw_self_add_p_signal_cnivcsw[label="r_ru_nivcsw_self_add_p_signal_cnivcsw"];
                r_ru_minflt_self_add_p_signal_cmin_flt[label="r_ru_minflt_self_add_p_signal_cmin_flt"];
                r_ru_majflt_self_add_p_signal_cmaj_flt[label="r_ru_majflt_self_add_p_signal_cmaj_flt"];
                set_t_p[label="set_t_p"];
                set_utime_cputime_add_utime_t_utime[label="set_utime_cputime_add_utime_t_utime"];
                set_stime_cputime_add_stime_t_stime[label="set_stime_cputime_add_stime_t_stime"];
                r_ru_nvcsw_self_add_t_cnvcsw[label="r_ru_nvcsw_self_add_t_cnvcsw"];
                r_ru_nivcsw_self_add_t_cnivcsw[label="r_ru_nivcsw_self_add_t_cnivcsw"];
                r_ru_minflt_self_add_t_cmin_flt[label="r_ru_minflt_self_add_t_cmin_flt"];
                r_ru_majflt_self_add_t_cmaj_flt[label="r_ru_majflt_self_add_t_cmaj_flt"];
                set_t_next_thread_t[label="set_t_next_thread_t"];
                t_not_eq_p[label="t_not_eq_p"];
                unlock_p_sighand_siglock[label="unlock_p_sighand_siglock"];
                cputime_to_timeval_utime_r_ru_utime[label="cputime_to_timeval_utime_r_ru_utime"];
                cputime_to_timeval_stime_r_ru_stime[label="cputime_to_timeval_stime_r_ru_stime"];
                default_[label="default_"];
                BUG[label="BUG"];
        }

        subgrap cluster_getrusage{
                label="int getrusage(struct task_struct *p, int who, struct rusage __user *ru)";
                lock_tasklist_lock[label="lock_tasklist_lock"];
                k_getrusage_p_who_r[label="k_getrusage_p_who_r"];
                unlock_tasklist_lock[label="unlock_tasklist_lock"];
                return_EFAULT_or_0_decide_copy_to_user_ru_r[label="return_EFAULT_or_0_decide_copy_to_user_ru_r"];
        }

        subgraph cluster_sys_getrusage{
                label="asmlinkage long sys_getrusage(int who, struct rusage __user *ru)";
                who_not_eq_RSUAGE_SELF_and_who_not_eq_RUSAGE_CHILDREN[label="who_not_eq_RSUAGE_SELF_and_who_not_eq_RUSAGE_CHILDREN"];
                return_EINVAL[label="return_EINVAL"];
                return_getrusage_current_who_ru[label="return_getrusage_current_who_ru"];
        }

        subgraph cluster_sys_unmask{
                label="asmlinkage long sys_umask(int mask)";
                set_mask_xchg_current_fs_umask_mask_and_S_IRWXUGO[label="set_mask_xchg_current_fs_umask_mask_and_S_IRWXUGO"];
                return_mask[label="return_mask"];
        }

        subgraph cluster_sys_prctl{
                label="asmlinkage long sys_prctl(int option, unsigned long arg2, unsigned long arg3,unsigned long arg4, unsigned long arg5)";
                security_task_ptrctl_option_arg2_arg3_arg4_arg5[label="security_task_ptrctl_option_arg2_arg3_arg4_arg5"];
                switch_option[label="switch_option"];
                case_PR_SET_PDEATHSIG[label="case_PR_SET_PDEATHSIG"];
                set_sig_arg2[label="set_sig_arg2"];
                set_current_pdeath_signal_sig[label="set_current_pdeath_signal_sig"];
                case_PR_GET_PDEATHSIG[label="case_PR_GET_PDEATHSIG"];
                set_error_put_user_current_pdeath_signal_arg2[label="set_error_put_user_current_pdeath_signal_arg2"];
                case_PR_GET_DUMPABLE[label="case_PR_GET_DUMPABLE"];
                current_mm_dumpable_not_null[label="current_mm_dumpable_not_null"];
                set_error_1[label="set_error_1"];
                case_PR_SET_DUMPABLE[label="case_PR_SET_DUMPABLE"];
                arg2_not_eq_0_and_arg2_not_eq_1[label="arg2_not_eq_0_and_arg2_not_eq_1"];
                set_error_EINVAL[label="set_error_EINVAL"];
                set_current_mm_dumpable_arg2[label="set_current_mm_dumpable_arg2"];
                case_PR_GET_UNALIGN[label="case_PR_GET_UNALIGN"];
                set_error_GET_UNALIGN_CTL_current_arg2[label="set_error_GET_UNALIGN_CTL_current_arg2"];
                case_PR_SET_FPEMU[label="case_PR_SET_FPEMU"];
                set_error_SET_FPEMU_CTL_current_arg2[label="set_error_SET_FPEMU_CTL_current_arg2"];
                case_PR_GET_FPEMU[label="case_PR_GET_FPEMU"];
                set_error_GET_FPEMU_CTL_current_arg2[label="set_error_GET_FPEMU_CTL_current_arg2"];
                case_PR_SET_FPEXC[label="case_PR_SET_FPEXC"];
                set_error_SET_FPEXC_CTL_current_arg2[label="set_error_SET_FPEXC_CTL_current_arg2"];
                case_PR_GET_FPEXC[label="case_PR_GET_FPEXC"];
                set_error_GET_FPEXC_CTL_current_arg2[label="set_error_GET_FPEXC_CTL_current_arg2"];
                case_PR_GET_TIMING[label="case_PR_GET_TIMING"];
                set_error_PR_TIMING_STATISTICAL[label="set_error_PR_TIMING_STATISTICAL"];
                case_PR_SET_TIMING[label="case_PR_SET_TIMING"];
                arg2_eq_PR_TIMING_STATISTICAL[label="arg2_eq_PR_TIMING_STATISTICAL"];
                set_error_0[label="set_erro_0"];
                set_error_EINVAL[label="set_error_EINVAL"];
                case_PR_GET_KEEPCAPS[label="case_PR_GET_KEEPCAPS"];
                current_keep_capabilites_true[label="current_keep_capabilites_true"];
                set_error_1[label="set_error_1"];
                case_PR_SET_KEEPCAPS[label="case_PR_SET_KEEPCAPS"];
                arg2_not_eq_0_and_arg2_not_eq_1[label="arg2_not_eq_0_and_arg2_not_eq_1"];
                set_error_EINVAL[label="set_error_EINVAL"];
                set_current_keep_capabilities_arg2[label="set_current_keep_capabilities_arg2"];
                case_PR_SET_NAME[label="case_PR_SET_NAME"];
                set_me_current[label="set_me_current"];
                set_ncomm_sizeof_me_comm_sub_1_0[label="set_ncomm_sizeof_me_comm_sub_1_0"];
                strncpy_from_user_ncomm_arg2[label="strncpy_from_user_ncomm_arg2"];
                set_task_comm_me_ncomm[label="set_task_comm_me_ncomm"];
                return_0[label="return_0"];
                case_PR_GET_NAME[label="case_PR_GET_NAME"];
                set_me_current[label="set_me_current"];
                get_task_comm_tcomm_me[label="get_task_comm_tcomm_me"];
                copy_to_user_arg2_tcomm[label="copy_to_user_arg2_tcomm"];
                return_0[label="return_0"];
                default_[label="default_"];
                set_error_EINVAL[label="set_error_EINVAL"];
                return_error[label="return_error"];
        }
	
}
