digraph posix_timers_c{
	subgraph cluster_common_clock_getres{
		label="static inline int common_clock_getres(clockid_t which_clock, struct timespec *tp)";
		set_tp_tv_sec_0[label="set_tp_tv_sec_0"];
		set_tp_tv_nsec_posix_clocks_which_clock_res[label="set_tp_tv_nsec_posix_clocks_which_clock_res"];
		return_0[label="return_0"];
	}

	subgraph cluster_common_clock_get{
		label="static inline int common_clock_get(clockid_t which_clock, struct timespec *tp)";
		getnstimeofday_tp[label="getnstimeofday_tp"];
		return_0[label="return_0"];
	}

	subgraph cluster_common_clock_set{
		label="static inline int common_clock_set(clockid_t which_clock, struct timespec *tp)";
		return_do_sys_settimeofday_tp_NULL[label="return_do_sys_settimeofday_tp_NULL"];
	}

	subgraph cluster_common_timer_create{
		label="static inline int common_timer_create(struct k_itimer *new_timer)";
		INIT_LIST_HEAD_new_timer_it_real_abs_timer_entry[label="INIT_LIST_HEAD_new_timer_it_real_abs_timer_entry"];
		init_timer_new_timer_it_real_timer[label="init_timer_new_timer_it_real_timer"];
		set_new_timer_it_real_timer_data_new_timer[label="set_new_timer_it_real_timer_data_new_timer"];
		set_new_timer_it_real_timer_function_posix_timer_fn[label="set_new_timer_it_real_timer_function_posix_timer_fn"];
		set_timer_inactive_new_timer[label="set_timer_inactive_new_timer"];
		return_0[label="return_0"];
	}

	subgraph cluster_invalid_clockid{
		label="static inline int invalid_clockid(clockid_t which_clock)";
		which_clock_small_0[label="which_clock_small_0"];
		return_0[label="return_0"];
		which_clock_not_small_MAX_CLOCKS[label="which_clock_not_small_MAX_CLOCKS"];
		return_1[label="return_1"];
		posix_clocks_whick_clock_clock_getres_not_eq_NULL[label="posix_clocks_whick_clock_clock_getres_not_eq_NULL"];
		return_0[label="return_0"];
		posix_clocks_whick_clock_res_not_eq_0[label="posix_clocks_whick_clock_res_not_eq_0"];
		return_0[label="return_0"];
		return_1[label="return_1"];
	}

	subgraph cluster_init_posix_timers{
		label="static __init int init_posix_timers(void)";
		set_clock_realtime_res_CLOCK_REALTIME_RES_abs_struct_abs_list[label="set_clock_realtime_res_CLOCK_REALTIME_RES_abs_struct_abs_list"];
		set_clock_monotonic_res_CLOCK_REALTIME_RES_abs_struct_NULL_clock_get_do_posix_clock_monotonic_get[label="set_clock_monotonic_res_CLOCK_REALTIME_RES_abs_struct_NULL_clock_get_do_posix_clock_monotonic_get"];
		clock_set_do_posix_clock_nosettime[label="clock_set_do_posix_clock_nosettime"];
		register_posix_clock_CLOCK_REALTIME_clock_realtime[label="register_posix_clock_CLOCK_REALTIME_clock_realtime"];
		register_posix_clock_CLOCK_MONOTONIC_clock_monotonic[label="register_posix_clock_CLOCK_MONOTONIC_clock_monotonic"];
		set_posix_timers_cache_kmem_cache_create_posix_timers_cache[label="set_posix_timers_cache_kmem_cache_create_posix_timers_cache"];
		idr_init_posix_timers_id[label="idr_init_posix_timers_id"];
		return_0[label="return_0"];
	}

	subgraph cluster_tstojiffie{
		label="static void tstojiffie(struct timespec *tp, int res, u64 *jiff)";
		set_sec_tp_tv_sec[label="set_sec_tp_tv_sec"];
		set_nsec_tp_tv_nsec_add_res_sub_1[label="set_nsec_tp_tv_nsec_add_res_sub_1"];
		nsec_great_NSEC_PER_SEC[label="nsec_great_NSEC_PER_SEC"];
		inc_sec[label="inc_sec"];
		nsec_self_sub_NSEC_PER_SEC[label="nsec_self_sub_NSEC_PER_SEC"];
		set_jiff_mpy_l_X_l_ll_sec_SEC_CONVERSION_add_mpy_l_X_l_ll_nsec_NSEC_CONVERSION_right_move_NSEC_JIFFIE_SC_sub_SEC_JIFFIE_SC_right_move_SEC_JIFFIE_SC[label="set_jiff_mpy_l_X_l_ll_sec_SEC_CONVERSION_add_mpy_l_X_l_ll_nsec_NSEC_CONVERSION_right_move_NSEC_JIFFIE_SC_sub_SEC_JIFFIE_SC_right_move_SEC_JIFFIE_SC"];
	}

	subgraph cluster_add_clockset_delta{
		label="static long add_clockset_delta(struct k_itimer *timr, struct timespec *new_wall_to)";
		set_normalized_timespec_delta_new_wall_to_tv_sec_sub_timr_it_real_wall_to_prev_tv_sec_new_wall_to_tv_nsec_sub_timr_it_real_wall_to_prev_tv_nsec[label="set_normalized_timespec_delta_new_wall_to_tv_sec_sub_timr_it_real_wall_to_prev_tv_sec_new_wall_to_tv_nsec_sub_timr_it_real_wall_to_prev_tv_nsec"];
		delta_tv_sec_or_delta_tv_nsec_not_null[label="delta_tv_sec_or_delta_tv_nsec_not_null"];
		return_0[label="return_0"];
		delata_tv_sec_small_0[label="delata_tv_sec_small_0"];
		set_normalized_timespec_delta_neg_delta_tv_sec_1_sub_delta_tv_nsec_sub_posix_clocks_timr_it_clock_res[label="set_normalized_timespec_delta_neg_delta_tv_sec_1_sub_delta_tv_nsec_sub_posix_clocks_timr_it_clock_res"];
		inc_sign[label="inc_sign"];
		tstojiffie_delta_posix_clocks_timr_it_clock_res_exp[label="tstojiffie_delta_posix_clocks_timr_it_clock_res_exp"];
		set_timr_it_real_wall_to_prev_new_wall_to[label="set_timr_it_real_wall_to_prev_new_wall_to"];
		timr_it_real_timer_expires_self_add_neg_exp_or_exp_decide_sign[label="timr_it_real_timer_expires_self_add_neg_exp_or_exp_decide_sign"];
		return_1[label="return_1"];
	}

        subgraph cluster_remove_from_abslist{
                label="static void remove_from_abslist(struct k_itimer *timr)";
                list_empty_timr_it_real_abs_timer_entry_false[label="list_empty_timr_it_real_abs_timer_entry_false"];
                lock_abs_list_lock[label="lock_abs_list_lock"];
                list_del_init_timr_it_real_abs_timer_entry[label="list_del_init_timr_it_real_abs_timer_entry"];
                unlock_abs_list_lock[label="unlock_abs_list_lock"];
        }

        subgraph cluster_schdule_next_timer{
                label="static void schedule_next_timer(struct k_itimer *timr)";
                set_sq_read_seqbegin_xtime_lock[label="set_sq_read_seqbegin_xtime_lock"];
                set_new_wall_to_wall_to_monotonic[label="set_new_wall_to_wall_to_monotonic"];
                posix_get_now_now[label="posix_get_now_now"];
                read_seqretry_xtime_lock_seq[label="read_seqretry_xtime_lock_seq"];
                list_empty_timr_it_real_abs_timer_entry_false[label="list_empty_timr_it_real_abs_timer_entry_false"];
                lock_abs_list_lock[label="lock_abs_list_lock"];
                add_clockset_delta_timr_new_wall_to[label="add_clockset_delta_timr_new_wall_to"];
                posix_bump_timer_timr_new[label="posix_bump_timer_timr_new"];
                unlock_abs_list_lock[label="unlock_abs_list_lock"];
                posix_bump_timer_timr_now[label="posix_bump_timer_timr_now"];
                set_timr_it_overrun_last_timr_it_overrun[label="set_timr_it_overrun_last_timr_it_overrun"];
                timr_it_overrun_neg1[label="timr_it_overrun_neg1"];
                inc_timr_it_requeue_pending[label="inc_timr_it_requeue_pending"];
                add_timer_timr_it_real_timer[label="add_timer_timr_it_real_timer"];
        }

        subgraph cluster_do_schedule_next_timer{
                label="void do_schedule_next_timer(struct siginfo *info)";
                set_timr_lock_timer_info_si_tid[label="set_timr_lock_timer_info_si_tid"];
                timr_null_or_timr_it_requeue_pending_not_eq_info_is_sys_private[label="timr_null_or_timr_it_requeue_pending_not_eq_info_is_sys_private"];
                goto_exit[label="goto_exit"];
                timr_it_clock_small_0[label="timr_it_clock_small_0"];
                posix_cpu_timer_schedule_timr[label="posix_cpu_timer_schedule_timr"];
                schedule_next_timer_timr[label="schedule_next_timer_timr"];
                set_info_si_overrun_timr_it_overrun_last[label="set_info_si_overrun_timr_it_overrun_last"];
                timr_not_null[label="timr_not_null"];
                unlock_timer_timr[label="unlock_timer_timr"];
        }

        subgraph cluster_posix_timer_event{
                label="int posix_timer_event(struct k_itimer *timr,int si_private)";
                memset_timr_sigq_info_0[label="memset_timr_sigq_info_0"];
                set_timr_sigq_info_si_sys_private_si_private[label="set_timr_sigq_info_si_sys_private_si_private"];
                set_timr_sigq_info_si_signo_timr_it_sigev_signo[label="set_timr_sigq_info_si_signo_timr_it_sigev_signo"];
                set_timr_sigq_info_si_errno_0[label="set_timr_sigq_info_si_errno_0"];
                set_timr_sigq_info_si_code_SI_TIMER[label="set_timr_sigq_info_si_code_SI_TIMER"];
                set_timr_sigq_info_si_tid_timr_it_id[label="set_timr_sigq_info_si_tid_timr_it_id"];
                set_timr_sigq_info_si_value_timr_it_sigev_value[label="set_timr_sigq_info_si_value_timr_it_sigev_value"];
                timr_it_sigev_notify_SIGEV_THREAD_ID_set[label="timr_it_sigev_notify_SIGEV_THREAD_ID_set"];
                timr_it_process_flags_PF_EXITING_set[label="timr_it_process_flags_PF_EXITING_set"];
                set_timr_it_sigev_notify_SIGEV_SIGNAL[label="set_timr_it_sigev_notify_SIGEV_SIGNAL"];
                put_task_struct_timr_ti_process[label="put_task_struct_timr_ti_process"];
                set_timr_it_process_timr_it_process_group_leader[label="set_timr_it_process_timr_it_process_group_leader"];
                goto_group[label="goto_group"];
                return_send_sigqueue_timr_it_sigev_signo_timr_sigq_timr_it_process[label="return_send_sigqueue_timr_it_sigev_signo_timr_sigq_timr_it_process"];
                return_send_group_sigqueue_timr_it_sigev_signo_timr_sigq_timr_it_process[label="return_send_group_sigqueue_timr_it_sigev_signo_timr_sigq_timr_it_process"];
        }

        subgraph cluster_posix_timer_fn{
                label="static void posix_timer_fn(unsigned long __data)";
                set_timr___data[label="set_timr___data"];
                lock_timr_it_lock[label="lock_timr_it_lock"];
                set_timer_inactive_timr[label="set_timer_inactive_timr"];
                list_empty_timr_it_real_abs_timer_entry_fasle[label="list_empty_timr_it_real_abs_timer_entry_fasle"];
                lock_abs_list_lock[label="lock_abs_list_lock"];
                set_seq_read_seqbegin_xtime_lock[label="set_seq_read_seqbegin_xtime_lock"];
                set_new_wall_to_wall_to_monotonic[label="set_new_wall_to_wall_to_monotonic"];
                read_seqretry_xtime_lock_seq[label="read_seqretry_xtime_lock_seq"];
                set_normalized_timespec_delta_new_wall_to_tv-sec_sub_timr_it_real_wall_to_prev_tv_sec_new_wall_to_tv_nsec_sub_timr_it_real_wall_to_prev_tv_nsec[label="set_normalized_timespec_delta_new_wall_to_tv-sec_sub_timr_it_real_wall_to_prev_tv_sec_new_wall_to_tv_nsec_sub_timr_it_real_wall_to_prev_tv_nsec"];
                delta_tv_sec_or_delta_tv_nsec_eq_0[label="delta_tv_sec_or_delta_tv_nsec_eq_0"];
                delta_tv_sec_small_0[label="delta_tv_sec_small_0"];
                tstojiffie_delta_posix_clocks_timr_it_clock_res_exp[label="tstojiffie_delta_posix_clocks_timr_it_clock_res_exp"];
                set_timr_it_real_wall_to_prev_new_wall_to[label="set_timr_it_real_wall_to_prev_new_wall_to"];
                timr_it_real_timer_expires_self_add_exp[label="timr_it_real_timer_expires_self_add_exp"];
                add_timer_timr_it_real_timer[label="add_timer_timr_it_real_timer"];
                set_do_notify_0[label="set_do_notify_0"];
                unlock_abs_list_lock[label="unlock_abs_list_lock"];
                do_notify_not_null[label="do_notify_not_null"];
                set_private_0[label="set_private_0"];
                timr_it_real_incr_not_Null[label="timr_it_real_incr_not_Null"];
                si_set_si_private_inc_timr_it_requeue_pending[label="si_set_si_private_inc_timr_it_requeue_pending"];
                remove_from_abslist_timr[label="remove_from_abslist_timr"];
                posix_timer_event_timr_si_private_false[label="posix_timer_event_timr_si_private_false"];
                schedule_next_timer_timr[label="schedule_next_timer_timr"];
                unlock_timer_timr[label="unlock_timer_timr"];
        }

        sugraph cluster_good_sigevent{
                label="static inline struct task_struct * good_sigevent(sigevent_t * event)";
                set_rtn_current_group_leader[label="set_rtn_current_group_leader"];
                event_sigev_notify_and_SIGEV_THREAD_ID_true_and_set_rtn_find_task_by_pid_event_sigev_notify_thread_id_not_null_or_rtn_tgid_not_eq_current_tgid_or_event_sigev_notify_set_ignore_SIGEV_THREAD_ID_not_eq_SIGEV_SIGNAL[label="event_sigev_notify_and_SIGEV_THREAD_ID_true_and_set_rtn_find_task_by_pid_event_sigev_notify_thread_id_not_null_or_rtn_tgid_not_eq_current_tgid_or_event_sigev_notify_set_ignore_SIGEV_THREAD_ID_not_eq_SIGEV_SIGNAL"];
                return_NULL[label="return_NULL"];
                event_sigev_notify_set_ignore_SIGEV_THREAD_ID_not_eq_SIGEV_NONE_and_event_sigev_signo_not_great_or_event_sigev_signo_great_SIGRTMAX[label="event_sigev_notify_set_ignore_SIGEV_THREAD_ID_not_eq_SIGEV_NONE_and_event_sigev_signo_not_great_or_event_sigev_signo_great_SIGRTMAX"];
                return_NULL[label="return_NULL"];
                return_rtn[label="return_rtn"];
        }

        subgraph cluster_register_posix_clock{
                label="void register_posix_clock(clockid_t clock_id, struct k_clock *new_clock)";
                clock_id_not_small_MAX_CLOCKS[label="clock_id_not_small_MAX_CLOCKS"];
                return[label="return"];
                set_posix_clocks_clock_id_new_clock[label="set_posix_clocks_clock_id_new_clock"];
        }

        subgraph cluster_alloc_posix_timer{
                label="static struct k_itimer * alloc_posix_timer(void)";
                set_tmr_kmem_cache_allocc_posix_timers_cache[label="set_tmr_kmem_cache_allocc_posix_timers_cache"];
                tmr_null[label="tmr_null"];
                return_tmr[label="return_tmr"];
                memset_tmr_0[label="memset_tmr_0"];
                tmr_sigq_eq_sigqueue_alloc_null[label="tmr_sigq_eq_sigqueue_alloc_null"];
                kmeme_cache_free_posix_timers_cache[label="kmeme_cache_free_posix_timers_cache"];
                set_tmr_NULL[label="set_tmr_NULL"];
                return_tmr[label="return_tmr"];
        }

        subgraph cluster_release_posix_timer{
                label="static void release_posix_timer(struct k_itimer *tmr, int it_id_set)";
                it_id_set_not_null[label="it_id_set_not_null"];
                lock_idr_loc[label="lock_idr_loc"];
                idr_remove_posix_timers_id_tmr_it_id[label="idr_remove_posix_timers_id_tmr_it_id"];
                unlock_idr_lock[label="unlock_idr_lock"];
                sigqeueue_free_tmr_sigq[label="sigqeueue_free_tmr_sigq"];
                tmr_it_process_and_tmr_it_sigev_notify_eq_SIGEV_SIGNAL_or_SIGEV_THREAD_ID[label="tmr_it_process_and_tmr_it_sigev_notify_eq_SIGEV_SIGNAL_or_SIGEV_THREAD_ID"];
                put_task_struct_tmr_it_process[label="put_task_struct_tmr_it_process"];
                kmem_cache_free_posix_timers_cache_tmr[label="kmem_cache_free_posix_timers_cache_tmr"];
        }

        subgraph cluster_sys_timer_create{
                label="asmlinkage long sys_timer_create(clockid_t which_clock, struct sigevent __user *timer_event_spec, timer_t __user * created_timer_id)";
                set_ir_id_set_IT_ID_NOT_SET[label="set_ir_id_set_IT_ID_NOT_SET"];
                invalid_clockid_which_clock_not_null[label="invalid_clockid_which_clock_not_null"];
                return_EAGAIN[label="return_EAGAIN"];
                lock_new_timer_it_lock[label="lock_new_timer_it_lock"];
                idr_pre_get_posix_timers_id_not_null[label="idr_pre_get_posix_timers_id_not_null"];
                set_error_EAGAIN[label="set_error_EAGAIN"];
                goto_out[label="goto_out"];
                lock_idr_lock[label="lock_idr_lock"];
                set_error_idr_get_new_posix_timers_id_new_timer_new_timer_id[label="set_error_idr_get_new_posix_timers_id_new_timer_new_timer_id"];
                unlock__idr_lock[label="unlock__idr_lock"];
                error_eq_EAGAIN[label="error_eq_EAGAIN"];
                goto_retry[label="goto_retry"];
                error_not_null[label="error_not_null"];
                set_error_EAGAIN[label="set_error_EAGAIN"];
                goto_out[label="goto_out"];
                set_it_id_set_IT_ID_SET[label="set_it_id_set_IT_ID_SET"];
                set_new_timer_it_id_new_timer_id[label="set_new_timer_it_id_new_timer_id"];
                set_new_timer_it_clock_which_clock[label="set_new_timer_it_clock_which_clock"];
                set_new_timer_it_overrun_neg1[label="set_new_timer_it_overrun_neg1"];
                CLOCK_DISPATCH_which_clock_timer_create_new_timer[label="CLOCK_DISPATCH_which_clock_timer_create_new_timer"];
                copy_to_user_created_timer_id_new_timer_id[label="copy_to_user_created_timer_id_new_timer_id"];
                timer_event_spec_not_null[label="timer_event_spec_not_null"];
                copy_from_user_event_timer_event_spec[label="copy_from_user_event_timer_event_spec"];
                set_new_timer_it_sigev_notify_eventn_sigev_notify[label="set_new_timer_it_sigev_notify_eventn_sigev_notify"];
                set_new_timer_it_sigev_signo_event_sigev_signo[label="set_new_timer_it_sigev_signo_event_sigev_signo"];
                set_new_timer_it_sigev_value_event_sigev_value[label="set_new_timer_it_sigev_value_event_sigev_value"];
                lock_tasklist_lock[label="lock_tasklist_lock"];
                set_process_good_sigevent_event_not_null[label="set_process_good_sigevent_event_not_null"];
                lock_process_sighand_siglock[label="lock_process_sighand_siglock"];
                process_flags_PF_EXITING_clear[label="process_flags_PF_EXITING_clear"];
                set_new_timer_it_process_process[label="set_new_timer_it_process_process"];
                list_add_new_timer_listt_process_signal_posix_timers[label="list_add_new_timer_listt_process_signal_posix_timers"];
                unlock_process_sighand_siglock[label="unlock_process_sighand_siglock"];
                new_timer_it_sigev_notify_eq_SIGEV_SIGNAL_or_SIGEV_THREAD_ID[label="new_timer_it_sigev_notify_eq_SIGEV_SIGNAL_or_SIGEV_THREAD_ID"];
                unlock_process_sighand_siglock[label="unlock_process_sighand_siglock"];
                clear_process[label="clear_process"];
                unlock_tasklist_lock[label="unlock_tasklist_lock"];
                process_null[label="process_null"];
                set_error_EINVAL[label="set_error_EINVAL"];
                goto_out[label="goto_out"];
                set_new_timer_it_sigev_notify_SIGEV_SIGNAL[label="set_new_timer_it_sigev_notify_SIGEV_SIGNAL"];
                set_new_timer_it_sigev_signo_SIGALRM[label="set_new_timer_it_sigev_signo_SIGALRM"];
                set_new_timer_it_sigev_value_sival_int_new_timer_it_id[label="set_new_timer_it_sigev_value_sival_int_new_timer_it_id"];
                set_process_current_group_leader[label="set_process_current_group_leader"];
                lock_process_sighand_siglock[label="lock_process_sighand_siglock"];
                set_new_timer_it_process_process[label="set_new_timer_it_process_process"];
                list_add_new_timer_list_process_signal_posix_timers[label="list_add_new_timer_list_process_signal_posix_timers"];
                unlock_process_sighand_siglock[label="unlock_process_sighand_siglock"];
                error_not_null[label="error_not_null"];
                release_posix_timer_new_timer_it_id_set[label="release_posix_timer_new_timer_it_id_set"];
                return_error[label="return_error"];
        }

        subgraph cluster_good_timespec{
                label="static int good_timespec(const struct timespec *ts)";
                ts_null_or_ts_tv_sec_small_0_or_ts_tv_nsec_not_small_NSEC_PER_SEC[label="ts_null_or_ts_tv_sec_small_0_or_ts_tv_nsec_not_small_NSEC_PER_SEC"];
                return_0[label="return_0"];
                return_1[label="return_1"];
        }

        subgraph cluster_lock_timer{
                label="static struct k_itimer * lock_timer(timer_t timer_id, unsigned long *flags)";
                lock_idr_lock[label="lock_idr_lock"];
                set_timr_idr_find_posix_timers_id_timer_id[label="set_timr_idr_find_posix_timers_id_timer_id"];
                timr_not_null[label="timr_not_null"];
                lock_timr_ti_lock[label="lock_timr_ti_lock"];
                unlock_idr_lock[label="unlock_idr_lock"];
                timr_it_id_not_eq_tiemr_id_or_timr_it_it_process_not_null_or_timr_it_process_tgid_not_eq_current_tgid[label="timr_it_id_not_eq_tiemr_id_or_timr_it_it_process_not_null_or_timr_it_process_tgid_not_eq_current_tgid"];
                unlock_timer_timr[label="unlock_timer_timr"];
                set_timr_NULL[label="set_timr_NULL"];
                unlock_idr_lock[label="unlock_idr_lock"];
                return_timr[label="return_timr"];
        }

        subgraph cluster_
}
