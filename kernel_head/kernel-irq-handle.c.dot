digraph handle_c{
	subgraph cluster___do_IRQ{
		label="unsigned int __do_IRQ(unsigned int irq, struct pt_regs *regs)";

		set_desc_irq_desc_add_irq[label="set_desc_irq_desc_add_irq"];
		inc_kstat_this_cpu_irqs_irq[label="inc_kstat_this_cpu_irqs_irq"];
		desc_status_IRQ_PER_CPU_set[label="desc_status_IRQ_PER_CPU_set"];
		desc_handler_ack_irq[label="desc_handler_ack_irq"];
		set_action_ret_handle_IRQ_event_irq_regs_desc_action[label="set_action_ret_handle_IRQ_event_irq_regs_desc_action"];
		desc_handler_end_irq[label="desc_handler_end_irq"];
		return_1[label="return_1"];
		lock_desc_lock[label="lock_desc_lock"];
		desc_handler_ack_irq[label="desc_handler_ack_irq"];
		clear_status_desc_status_IRQ_REPLAY_IRQ_WAITING[label="clear_status_desc_status_IRQ_REPLAY_IRQ_WAITING"];
		status_self_or_IRQ_PENDING[label="status_self_or_IRQ_PENDING"];
		clear_action[label="clear_action"];
		status_IRQ_DISABLE_and_IRQ_INPROGRESS_clean[label="status_IRQ_DISABLE_and_IRQ_INPROGRESS_clean"];
		set_action_desc_action[label="set_action_desc_action"];
		clear_status_IRQ_PENDING[label="clear_status_IRQ_PENDING"];
		status_self_or_IRQ_INPROGRESS[label="status_self_or_IRQ_INPROGRESS"];
		set_desc_status_status[label="set_desc_status_status"];
		action_false[label="action_false"];
		goto_out[label="goto_out"];
		dead_for[label="dead_for"];
		unlock_desc_lock[label="unlock_desc_lock"];
		set_action_ret_handle_IRQ_evnet_irq_regs_action[label="set_action_ret_handle_IRQ_evnet_irq_regs_action"];
		lock_desc_lock[label="lock_desc_lock"];
		noirqdebug_false[label="noirqdebug_false"];
		note_interrupt_irq_desc_action_ret[label="note_interrupt_irq_desc_action_ret"];
		desc_status_IRQ_PENDING_clean[label="desc_status_IRQ_PENDING_clean"];
		clear_desc_status_IRQ_PENDING[label="clear_desc_status_IRQ_PENDING"];
		clear_desc_status_IRQ_INPROGRESS[label="clear_desc_status_IRQ_INPROGRESS"];
		desc_handler_end_irq[label="desc_handler_end_irq"];
		unlock_desc_lock[label="unlock_desc_lock"];
		return_1[label="return_1"];

		set_desc_irq_desc_add_irq -> inc_kstat_this_cpu_irqs_irq;
		inc_kstat_this_cpu_irqs_irq -> desc_status_IRQ_PER_CPU_set;
		desc_status_IRQ_PER_CPU_set -> desc_handler_ack_irq;
		desc_handler_ack_irq -> set_action_ret_handle_IRQ_event_irq_regs_desc_action;
		set_action_ret_handle_IRQ_event_irq_regs_desc_action -> desc_handler_end_irq;
		desc_handler_end_irq -> return_1
		desc_status_IRQ_PER_CPU_set -> lock_desc_lock;
		lock_desc_lock -> desc_handler_ack_irq;
		desc_handler_ack_irq -> clear_status_desc_status_IRQ_REPLAY_IRQ_WAITING;
		clear_status_desc_status_IRQ_REPLAY_IRQ_WAITING -> status_self_or_IRQ_PENDING;
		status_self_or_IRQ_PENDING -> clear_action;
		clear_action -> status_IRQ_DISABLE_and_IRQ_INPROGRESS_clean;
		status_IRQ_DISABLE_and_IRQ_INPROGRESS_clean -> set_action_desc_action;
		set_action_desc_action -> clear_status_IRQ_PENDING;
		clear_status_IRQ_PENDING -> status_self_or_IRQ_INPROGRESS;
		status_self_or_IRQ_INPROGRESS -> set_desc_status_status;
		status_IRQ_DISABLE_and_IRQ_INPROGRESS_clean -> set_desc_status_status;
		set_desc_status_status -> action_false;
		action_false -> goto_out;
		action_false -> dead_for;
		dead_for -> unlock_desc_lock;
		unlock_desc_lock -> set_action_ret_handle_IRQ_event_irq_regs_desc_action;
		set_action_ret_handle_IRQ_event_irq_regs_desc_action -> lock_desc_lock;
		lock_desc_lock -> noirqdebug_false;
		noirqdebug_false -> note_interrupt_irq_desc_action_ret;
		note_interrupt_irq_desc_action_ret -> desc_status_IRQ_PENDING_clean;
		noirqdebug_false -> desc_status_IRQ_PENDING_clean;
		desc_status_IRQ_PENDING_clean -> clear_desc_status_IRQ_PENDING;
		clear_desc_status_IRQ_PENDING -> dead_for;
		desc_status_IRQ_PENDING_clean -> clear_desc_status_IRQ_INPROGRESS;
		clear_desc_status_IRQ_INPROGRESS -> desc_handler_end_irq;
		desc_handler_end_irq -> unlock_desc_lock;
		unlock_desc_lock -> return_1;
	}

	subgraph cluster_handle_IRQ_event{
		label="fastcall int handle_IRQ_event(unsigned int irq, struct pt_regs *regs,struct irqaction *action)";
                
		action_flags_SA_INTERRUPT_clean[label="action_flags_SA_INTERRUPT_clean"];
		local_irq_enable[label="local_irq_enable"];
		call_irqaction_handler[label="call_irqaction_handler"];
		IRQ_HANDLED_return[label="IRQ_HANDLED_return"];
		set_or_status_action_flags[label="set_or_status_action_flags"];
		set_or_retval[label="set_or_retval"];
		get_next_irqaction[label="get_next_irqaction"];
		SA_SAMPLE_RANDOM_set[label="SA_SAMPLE_RANDOM_set"];
		call_add_interrupt_randomness[label="call_add_interrupt_randomness"];
		local_irq_disable[label="call_local_irq_disable"];

		action_flags_SA_INTERRUPT_clean -> local_irq_enable;
		local_irq_enable -> call_irqaction_handler;
		action_flags_SA_INTERRUPT_clean -> call_irqaction_handler;
		call_irqaction_handler -> IRQ_HANDLED_return;
		IRQ_HANDLED_return -> set_or_status_action_flags;
		set_or_status_action_flags -> set_or_retval;
		IRQ_HANDLED_return -> set_or_retval;
		set_or_retval -> get_next_irqaction;
		get_next_irqaction -> call_irqaction_handler;
		get_next_irqaction -> SA_SAMPLE_RANDOM_set;
		SA_SAMPLE_RANDOM_set -> call_add_interrupt_randomness;
		call_add_interrupt_randomness -> local_irq_disable;
		SA_SAMPLE_RANDOM_set -> local_irq_disable;
	}

	subgraph cluster_ack_none{
		label="static void ack_none(unsigned int irq)";
		ack_bad_irq_irq[label="ack_bad_irq_irq"];
	}
        
}
