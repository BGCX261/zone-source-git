digraph module_c{
	subgraph cluster_register_module_notifier{
		label="int register_module_notifier(struct notifier_block * nb)";
		down_notify_mutex[label="down_notify_mutex"];
		set_err_notifier_chain_register_module_notify_list_nb[label="set_err_notifier_chain_register_module_notify_list_nb"];
		up_notify_mutex[label="up_notify_mutex"];
		return_err[label="return_err"];
	}

	subgraph cluster_unregister_module_notifier{
		label="int unregister_module_notifier(struct notifier_block * nb)";
		down_notify_mutex[label="down_notify_mutex"];
		set_err_notifier_chain_unregister_module_notify_list_nb[label="set_err_notifier_chain_unregister_module_notify_list_nb"];
		up_notify_mutex[label="up_notify_mutex"];
		return_err[label="return_err"];
	}

	subgraph cluster_strong_try_module_get{
		label="static inline int strong_try_module_get(struct module *mod)";
		mod_not_null_and_mod_state_eq_MODULE_STATE_COMING[label="mod_not_null_and_mod_state_eq_MODULE_STATE_COMING"];
		return_0[label="return_0"];
		return_try_module_get_mod[label="return_try_module_get_mod"];
	}

	subgraph cluster___module_put_and_exit{
		label="void __module_put_and_exit(struct module *mod, long code)";
		module_put_mod[label="module_put_mod"];
		do_exit_code[label="do_exit_code"];
	}

	subgraph cluster_find_sec{
		label="static unsigned int find_sec(Elf_Ehdr *hdr, Elf_Shdr *sechdrs, const char *secstrings,const char *name)";
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		sechdrs_i_sh_flags_SHF_ALLOC_set_and_strcmp_secstrings_add_sechdrs_i_sh_name_name_eq_0[label="sechdrs_i_sh_flags_SHF_ALLOC_set_and_strcmp_secstrings_add_sechdrs_i_sh_name_name_eq_0"];
		return_i[label="return_i"];
		return_0[label="return_0"];
	}

	subgraph cluster___find_symbol{
		label="static unsigned long __find_symbol(const char *name, struct module **owner, const unsigned long **crc, int gplok)";
		clear_owner[label="clear_owner"];
		for_i___start___ksymtab_add_i_small__stop___ksymtab[label="for_i___start___ksymtab_add_i_small__stop___ksymtab"];
		strcmp_start___ksymtab_i_name_name_eq_0[label="strcmp_start___ksymtab_i_name_name_eq_0"];
		set_crc_symversion__start___kcrctab_i[label="set_crc_symversion__start___kcrctab_i"];
		return___start___ksymtab_i_value[label="return___start___ksymtab_i_value"];
		gplok_not_null[label="gplok_not_null"];
		for_i___start___ksymtab_gpl_add_i_small___stop___ksymtab_gpl[label="for_i___start___ksymtab_gpl_add_i_small___stop___ksymtab_gpl"];
		strcmp___start_ksymtab_gpl_i_name_name_0[label="strcmp___start_ksymtab_gpl_i_name_name_0"];
		set_crc_symversion__start_kcrctab_gpl_i[label="set_crc_symversion__start_kcrctab_gpl_i"];
		return___start___ksymtab_gpl_i_value[label="return___start___ksymtab_gpl_i_value"];
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		set_owner_mod[label="set_owner_mod"];
		for_i_mod_num_syms[label="for_i_mod_num_syms"];
		strcmp_mod_syms_i_name_name_eq_0[label="strcmp_mod_syms_i_name_name_eq_0"];
		set_crc_symversion_mod_crcs_i[label="set_crc_symversion_mod_crcs_i"];
		return_mod_syms_i_value[label="return_mod_syms_i_value"];
		gplok_not_null[label="gplok_not_null"];
		for_i_mod_num_gpl_syms[label="for_i_mod_num_gpl_syms"];
		strcmp_mod_gpl_syms_i_name_name_0[label="strcmp_mod_gpl_syms_i_name_name_0"];
		set_crc_symversion_mod_gpl_crcs_i[label="set_crc_symversion_mod_gpl_crcs_i"];
		retrun_mod_gpl_syms_i_value[label="retrun_mod_gpl_syms_i_value"];
		return_0[label="return_0"];
	}

	subgraph cluster_find_local_symbol{
		label="static unsigned long find_local_symbol(Elf_Shdr *sechdrs, unsigned int symindex, const char *strtab, const char *name)";
		set_sym_sechdrs_symindex_sh_addr[label="set_sym_sechdrs_symindex_sh_addr"];
		for_i_sechdrs_symindex_sh_size_sizeof_sym[label="for_i_sechdrs_symindex_sh_size)sizeof_sym"];
		sym_i_st_shndx_not_eq_SHN_UNDEF_and_strcmp_name_strtab_add_sym_i_st_name_eq_0[label="sym_i_st_shndx_not_eq_SHN_UNDEF_and_strcmp_name_strtab_add_sym_i_st_name_eq_0"];
		return_sym_i_st_value[label="return_sym_i_st_value"];
		return_0[label="return_0"];
	}

	subgraph cluster_find_module{
		label="static struct module *find_module(const char *name)";
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		strcmp_mod_name_name_eq_0[label="strcmp_mod_name_name_eq_0"];
		return_mod[label="return_mod"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_split_block{
		label="static int split_block(unsigned int i, unsigned short size)";
		pcpu_num_used_add_1_great_pcpu_num_allocated[label="pcpu_num_used_add_1_great_pcpu_num_allocated"];
		set_new_kmalloc[label="set_new_kmalloc"];
		new_not_null[label="new_not_null"];
		return_0[label="return_0"];
		memcpy_new_pcpu_size[label="memcpy_new_pcpu_size"];
		pcpu_num_allocated_self_multi_2[label="pcpu_num_allocated_self_multi_2"];
		kfree_pcpu_size[label="kfree_pcpu_size"];
		set_pcpu_size_new[label="set_pcpu_size_new"];
	}

	subgraph cluster_block_size{
		label="static inline unsigned int block_size(int val)";
		val_small_0[label="val_small_0"];
		return_neg_val[label="return_neg_val"];
		return_val[label="return_val"];
	}

	subgraph cluster_percpu_modalloc{
		label="static void *percpu_modalloc(unsigned long size, unsigned long align)";
		set_ptr___per_cpu_start[label="set_ptr___per_cpu_start"];
		for_i_pcpu_num_used_ptr_self_add_block_size_pcpu_size_i[label="for_i_pcpu_num_used_ptr_self_add_block_size_pcpu_size_i"];
		set_extra_ALIGN_ptr_align_sub_ptr[label="set_extra_ALIGN_ptr_align_sub_ptr"];
		pcpu_size_i_small_0_or_pcpu_size_i_small_extra_add_size[label="pcpu_size_i_small_0_or_pcpu_size_i_small_extra_add_size"];
		pcpu_size_i_sub_1_small_0[label="pcpu_size_i_sub_1_small_0"];
		pcpu_size_i_sub_1_self_sub_extra[label="pcpu_size_i_sub_1_self_sub_extra"];
		pcpu_size_i_sub_1_self_add_extra[label="pcpu_size_i_sub_1_self_add_extra"];
		pcpu_size_i_sub_1_self_sub_extra[label="pcpu_size_i_sub_1_self_sub_extra"];
		ptr_self_add_extra[label="ptr_self_add_extra"];
		pcpu_size_i_sub_size_great_sizeof_long[label="pcpu_size_i_sub_size_great_sizeof_long"];
		split_block_i_size[label="split_block_i_size"];
		return_NULL[label="return_NULL"];
		set_pcpu_size_i_neg_pcpu_size_i[label="set_pcpu_size_i_neg_pcpu_size_i"];
		return_ptr[label="return_ptr"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_percpu_modfree{
		label="static void percpu_modfree(void *freeme)";
		set_ptr___per_cpu_start_add_block_size_pcpu_size_0[label="set_ptr___per_cpu_start_add_block_size_pcpu_size_0"];
		ptr_eq_freeme[label="ptr_eq_freeme"];
		set_pcpu_size_i_neg_pcpu_size_i[label="set_pcpu_size_i_neg_pcpu_size_i"];
		goto_free[label="goto_free"];
		pcpu_size_i_sub_1_not_small_0[label="pcpu_size_i_sub_1_not_small_0"];
		pcpu_size_i_sub_1_self_add_pcpu_size_i[label="pcpu_size_i_sub_1_self_add_pcpu_size_i"];
		dec_pcpu_num_used[label="dec_pcpu_num_used"];
		memmove_pcpu_size_i_pcpu_size_i_add_1[label="memmove_pcpu_size_i_pcpu_size_i_add_1"];
		dec_i[label="dec_i"];
		i_add_1_small_pcpu_num_used_and_pcpu_size_i_add_1_not_small_0[label="i_add_1_small_pcpu_num_used_and_pcpu_size_i_add_1_not_small_0"];
		pcpu_size_i_self_add_pcpu_size_i_add_1[label="pcpu_size_i_self_add_pcpu_size_i_add_1"];
		dec_pcpu_num_used[label="dec_pcpu_num_used"];
		memmove_pcpu_size_i_add_1_pcpu_size_i_add_2_pcpu_num_used_sub_i_add_1_multi_sizeof_pcpu_size_0[label="memmove_pcpu_size_i_add_1_pcpu_size_i_add_2_pcpu_num_used_sub_i_add_1_multi_sizeof_pcpu_size_0"];
		
	}

	subgraph cluster_find_pcpusec{
		label="static unsigned int find_pcpusec(Elf_Ehdr *hdr, Elf_Shdr *sechdrs, const char *secstrings)";
		return_find_sec_hdr_sechdrs_secstrings_data_percpu[label="return_find_sec_hdr_sechdrs_secstrings_data_percpu"];
	}
	subgraph cluster_percpu_modinit{
		label="static int percpu_modinit(void)";
		set_pcpu_num_used_2[label="set_pcpu_num_used_2"];
		set_pcpu_num_allocated_2[label="set_pcpu_num_allocated_2"];
		set_pcpu_size_kmalloc[label="set_pcpu_size_kmalloc"];
		set_pcpu_size_0_neg_ALIGN___per_cpu_end_sub_per_cpu_start_SMP_CACHE_BYTES[label="set_pcpu_size_0_neg_ALIGN___per_cpu_end_sub_per_cpu_start_SMP_CACHE_BYTES"];
		set_pcpu_size_1_PERCPU_ENOUGH_ROOM_add_pcpu_size_0[label="set_pcpu_size_1_PERCPU_ENOUGH_ROOM_add_pcpu_size_0"];
		pcpu_size_1_small_0[label="pcpu_size_1_small_0"];
		set_pcpu_num_used_1[label="set_pcpu_num_used_1"];
		return_0[label="return_0"];
	}

	subgraph cluster_module_unload_init{
		label="static void module_unload_init(struct module *mod)";
		INIT_LIST_HEAD_mod_modules_which_use_me[label="INIT_LIST_HEAD_mod_modules_which_use_me"];
		for_i_NR_CPUS[label="for_i_NR_CPUS"];
		local_set_mod_ref_i_cpunt_0[label="local_set_mod_ref_i_cpunt_0"];
		local_set_mod_ref__smp_processor_id_count_1[label="local_set_mod_ref__smp_processor_id_count_1"];
		set-mod-waiter_current[label="set-mod-waiter_current"];
	}

	subgraph cluster_already_uses{
		label="static int already_uses(struct module *a, struct module *b)";
		list_for_each_entry_use_b_modules_which_use_me_list[label="list_for_each_entry_use_b_modules_which_use_me_list"];
		use_module_which_uses_eq_a[label="use_module_which_uses_eq_a"];
		return_1[label="return_1"];
		return_0[label="return_0"];
	}

	subgraph cluster_use_module{
		label="static int use_module(struct module *a, struct module *b)";
		b_eq_NULL_or_already_uses_a_b[label="b_eq_NULL_or_already_uses_a_b"];
		return_1[label="return_1"];
		strong_try_module_get_b_not_null[label="strong_try_module_get_b_not_null"];
		return_0[label="return_0"];
		set_use_kmalloc[label="set_use_kmalloc"];
		use_null[label="use_null"];
		module_put_b[label="module_put_b"];
		return_0[label="return_0"];
		set_use_module_which_uses_a[label="set_use_module_which_uses_a"];
		list_add_use_list_b_modules_which_use_me[label="list_add_use_list_b_modules_which_use_me"];
		return_1[label="return_1"];
	}

	subgraph cluster_module_unload_free{
		label="static void module_unload_free(struct module *mod)";
		CONFIG_MODULE_UNLOAD[label="CONFIG_MODULE_UNLOAD"];
		list_for_each_entry_i_modules_list[label="list_for_each_entry_i_modules_list"];
		list_for_each_entry_use_i_modules_which_use_me_list[label="list_for_each_entry_use_i_modules_which_use_me_list"];
		use_module_which_uses_eq_mod[label="use_module_which_uses_eq_mod"];
		module_put_i[label="module_put_i"];
		list_del_use_list[label="list_del_use_list"];
		kfree_use[label="kfree_use"];
	}

	subgraph cluster_try_froce{
		label="static inline int try_force(unsigned int flags)";
		CONFIG_MODULE_FORCE_UNLOAD[label="CONFIG_MODULE_FORCE_UNLOAD"];
		set_ret_flags_O_TRUNC_set[label="set_ret_flags_O_TRUNC_set"];
		ret_not_null[label="ret_not_null"];
		tainted_self_or_TAINT_FORCED_MODULE[label="tainted_self_or_TAINT_FORCED_MODULE"];
		return_ret[label="return_ret"];
	}

	subgraph cluster___try_stop_module{
		label="static int __try_stop_module(void *_sref)";
		set_sref__sref[label="set_sref__sref"];
		sref_flags_O_NONBLOCK_set_and_module_refcount_sref_mod_not_eq_0[label="sref_flags_O_NONBLOCK_set_and_module_refcount_sref_mod_not_eq_0"];
		set_sref_forced_try_force_sref_flags_false[label="set_sref_forced_try_force_sref_flags_false"];
		return_EWOULDBLOCK[label="return_EWOULDBLOCK"];
		set_sref_mod_state_MODULE_STATE_GOING[label="set_sref_mod_state_MODULE_STATE_GOING"];
		return_0[label="return_0"];
	}

	subgraph cluster_try_stop_module{
		lable="static int try_stop_module(struct module *mod, int flags, int *forced)";
		set_sref_mod_flags_forced[label="set_sref_mod_flags_forced"];
		return_stop_machine_run___try_stop_module_sref_NR_CPUS[label="return_stop_machine_run___try_stop_module_sref_NR_CPUS"];
	}

	subgraph cluster_module_refcount{
		label="unsigned int module_refcount(struct module *mod)";
		for_i_NR_CPUS[label="for_i_NR_CPUS"];
		total_self_add_local_read_mod_ref_i_count[label="total_self_add_local_read_mod_ref_i_count"];
		return_total[label="return_total"];
	}

	subgraph cluster_wait_for_zero_refcount{
		label="static void wait_for_zero_refcount(struct module *mod)";
		up_module_mutex[label="up_module_mutex"];
		dead_for[label="dead_for"];
		set_current_state_TASK_UNINTERRUPTIBLE[label="set_current_state_TASK_UNINTERRUPTIBLE"];
		module_refcount_mod_eq_0[label="module_refcount_mod_eq_0"];
		schedule[label="schedule"];
		set_current_state_TASK_RUNNING[label="set_current_state_TASK_RUNNING"];
		down_module_mutex[label="down_module_mutex"];
	}

	subgraph cluster_sys_delete_module{
		label="asmlinkage long sys_delete_module(const char __user *name_user, unsigned int flags)";
		capable_CAP_SYS_MODULE_null[label="capable_CAP_SYS_MODULE_null"];
		return_EPERM[label="return_EPERM"];
		strncpy_from_user_name_name_user[label="strncpy_from_user_name_name_user"];
		down_interruptible_module_mutex_not_eq_0[label="down_interruptible_module_mutex_not_eq_0"];
		return_EINTR[label="return_EINTR"];
		set_mod_find_module_name[label="set_mod_find_module_name"];
		mod_null[label="mod_null"];
		set_ret_ENOENT[label="set_ret_ENOENT"];
		goto_out[label="goto_out"];
		list_empty_mod_modules_which_use_me_false[label="list_empty_mod_modules_which_use_me_false"];
		return_EWOULDBLOCK[label="return_EWOULDBLOCK"];
		goto_out[label="goto_out"];
		mod_state_not_eq_MODULE_STATE_LIVE[label="mod_state_not_eq_MODULE_STATE_LIVE"];
		set_ret_EBUSY[label="set_ret_EBUSY"];
		goto_out[label="goto_out"];
		mod_init_not_eq_NULL_and_mod_exit_eq_NULL_or_mod_unsafe[label="mod_init_not_eq_NULL_and_mod_exit_eq_NULL_or_mod_unsafe"];
		set_forced_try_force_flags[label="set_forced_try_force_flags"];
		forced_null[label="forced_null"];
		set_ret_EBUSY[label="set_ret_EBUSY"];
		goto_out[label="goto_out"];
		set_mod_waiter_current[label="set_mod_waiter_current"];
		set_ret_try_stop_module_mod_flags_forced[label="set_ret_try_stop_module_mod_flags_forced"];
		ret_not_eq_0[label="ret_not_eq_0"];
		goto_out[label="goto_out"];
		forced_null_and_module_refcount_mod_not_eq_0[label="forced_null_and_module_refcount_mod_not_eq_0"];
		wait_for_zero_refcount_mod[label="wait_for_zero_refcount_mod"];
		mod_exit_not_eq_NULL[label="mod_exit_not_eq_NULL"];
		up_module_mutex[label="up_module_mutex"];
		mod_exit[label="mod_exit"];
		down_module_mutex[label="down_module_mutex"];
		free_module_mod[label="free_module_mod"];
		up_module_mutex[label="up_module_mutex"];
		return_ret[label="return_ret"];
	}

	subgraph cluster___symbol_put{
		label="void __symbol_put(const char *symbol)";
		lock_modlist_lock_flags[label="lock_modlist_lock_flags"];
		find_symbol_symbol_owner_crc_1[label="find_symbol_symbol_owner_crc_1"];
		module_put_owner[label="module_put_owner"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
	}

	subgraph cluster_symbol_put_addr{
		label="void symbol_put_addr(void *addr)";
		lock_modlist_lock[label="lock_modlist_lock"];
		kernel_text_address_adr[label="kernel_text_address_adr"];
		module_put_module_text_address_addr[label="module_put_module_text_address_addr"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
	}

	subgraph cluster_set_obsolete{
		label="int set_obsolete(const char *val, struct kernel_param *kp)";
		set_obsparm_kp_arg[label="set_obsparm_kp_arg"];
		set_p_obsparm_type[label="set_p_obsparm_type"];
		set_min_simple_strtol_p_endp_10[label="set_min_simple_strtol_p_endp_10"];
		endp_eq_obsparm_type[label="endp_eq_obsparm_type"];
		set_min_max_1[label="set_min_max_1"];
		endp_eq_minus[label="endp_eq_minus"];
		set_p_endp_add_1[label="set_p_endp_add_1"];
		set_max_simple_strtol_p_endp_10[label="set_max_simple_strtol_p_endp_10"];
		set_max_min[label="set_max_min"];
		switch_endp[label="switch_endp"];
		case_b[label="case_b"];
		return_param_array_kp_name_val_min_max_obsparm_addr_1_param_set_byte_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_1_param_set_byte_dummy"];
		case_h[label="case_h"];
		return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_short_param_set_short_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_short_param_set_short_dummy"];
		case_i[label="case_i"];
		return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_int_param_set_short_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_int_param_set_short_dummy"];
		case_l[label="case_l"];
		return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_long_param_set_long_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_long_param_set_long_dummy"];
		case_s[label="case_s"];
		return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_char_param_set_char_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_sizeof_char_param_set_char_dummy"];
		case_c[label="case_c"];
		set_p_endp_add_1[label="set_p_endp_add_1"];
		set_maxsize_simple_strtol_p_endp_10[label="set_maxsize_simple_strtol_p_endp_10"];
		set_p_val[label="set_p_val"];
		while_p_size_eq_strcspn_p_dot[label="while_p_size_eq_strcspn_p_dot"];
		size_not_small_maxsize[label="size_not_small_maxsize"];
		goto_oversize[label="goto_oversize"];
		p_self_add_size_add_1[label="p_self_add_size_add_1"];
		size_not_small_maxsize[label="size_not_small_maxsize"];
		goto_oversize[label="goto_oversize"];
		return_param_array_kp_name_val_min_max_obsparm_addr_maxsize_obsparm_copy_string_dummy[label="return_param_array_kp_name_val_min_max_obsparm_addr_maxsize_obsparm_copy_string_dummy"];
		return_EINVAL[label="return_EINVAL"];
		return_EINVAL[label="return_EINVAL"];
	}

	subgraph cluster_obsolete_params{
		label="static int obsolete_params(const char *name, char *args, struct obsolete_modparm obsparm[], unsigned int num, Elf_Shdr *sechdrs, unsigned int symindex, const char *strtab)";
		set_kp_kmalloc[label="set_kp_kmalloc"];
		kp_null[label="kp_null"];
		return_ENOMEM[label="return_ENOMEM"];
		for_i_num[label="for_i_num"];
		set_kp_i_name_obsparm_name[label="set_kp_i_name_obsparm_name"];
		set_kp_i_perm_000[label="set_kp_i_perm_000"];
		set_kp_i_set_set_obsolete[label="set_kp_i_set_set_obsolete"];
		clear_kp_i_get[label="clear_kp_i_get"];
		set_obsparm_i_addr_find_local_symbol_sechdrs_symindex_strtab_sym_name[label="set_obsparm_i_addr_find_local_symbol_sechdrs_symindex_strtab_sym_name"];
		obsparm_i_add_null[label="obsparm_i_add_null"];
		set_ret_EINVAL[label="set_ret_EINVAL"];
		goto_out[label="goto_out"];
		set_kp_i_arg_obsparm_i[label="set_kp_i_arg_obsparm_i"];
		set_ret_parse_args_name_args_kp_num_NULL[label="set_ret_parse_args_name_args_kp_num_NULL"];
		kfree_kp[label="kfree_kp"];
		return_ret[label="return_ret"];
	}

	subgraph cluster_check_version{
		label="static int check_version(Elf_Shdr *sechdrs, unsigned int versindex, const char *symname, struct module *mod, const unsigned long *crc)";
		CONFIG_MODVERSIONS[label="CONFIG_MODVERSIONS"];
		crc_null[label="crc_null"];
		return_1[label="return_1"];
		set_versions_sechdrs_versindex_sh_addr[label="set_versions_sechdrs_versindex_sh_addr"];
		set_num_versions_sechdrs_versindex_sh_size_div_sizeof_struct_modversion_info[label="set_num_versions_sechdrs_versindex_sh_size_div_sizeof_struct_modversion_info"];
		for_i_num_versions[label="for_i_num_versions"];
		strcmp_versions_i_name_symname[label="strcmp_versions_i_name_symname"];
		versions_i_crc_eq_crc[label="versions_i_crc_eq_crc"];
		return_1[label="return_1"];
		return_0[label="return_0"];
		tainted_TAINT_FORCED_MODULE_clear[label="tainted_TAINT_FORCED_MODULE_clear"];
		tainted_self_set_TAINT_FORCED_MODULE[label="tainted_self_set_TAINT_FORCED_MODULE"];
		return_1[label="return_1"];
	}

	subgraph cluster_check_modstruct_version{
		label="static inline int check_modstruct_version(Elf_Shdr *sechdrs, unsigned int versindex, struct module *mod)";
		find_symbol_struct_module_owner_crc_1[label="find_symbol_struct_module_owner_crc_1"];
		check_version_sechdrs_versindex_struct_module_mod_crc[label="check_version_sechdrs_versindex_struct_module_mod_crc"];
	}

	subgraph cluster_resolve_symbol{
		label="static unsigned long resolve_symbol(Elf_Shdr *sechdrs, unsigned int versindex, const char *name, struct module *mod)";
		lock_modlist_lock[label="lock_modlist_lock"];
		set_ret___find_symbol_name_owner_crc_mod_license_gplok[label="set_ret___find_symbol_name_owner_crc_mod_license_gplok"];
		ret_not_null[label="ret_not_null"];
		check_version_sechdrs_versindex_name_mod_crc_null_or_use_module_mod_owner_null[label="check_version_sechdrs_versindex_name_mod_crc_null_or_use_module_mod_owner_null"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
		return_ret[label="return_ret"];
	}

	subgraph cluster_add_sect_attrs{
		label="static void add_sect_attrs(struct module *mod, unsigned int nsect, char *secstrings, Elf_Shdr *sechdrs)";
		for_i_nsect[label="for_i_nsect"];
		sechdrs_i_sh_flags_SHF_ALLOC_set[label="sechdrs_i_sh_flags_SHF_ALLOC_set"];
		inc_nloaded[label="inc_nloaded"];
		set_size_0_ALIGN_sizeof_sect_arrtrs_add_nloadded_multi_sizeof_sect_attrs_attrs_0[label="set_size_0_ALIGN_sizeof_sect_arrtrs_add_nloadded_multi_sizeof_sect_attrs_attrs_0"];
		set_size_1_nloaded_add_1_multi_sizeof_sect_attrs_grp_attrs_0[label="set_size_1_nloaded_add_1_multi_sizeof_sect_attrs_grp_attrs_0"];
		sect_attrs_kmalloc[label="sect_attrs_kmalloc"];
		set_sect_attrs_grp_name_sections[label="set_sect_attrs_grp_name_sections"];
		set_sect_attrs_grp_attrs_sect_attrs_add_size_0[label="set_sect_attrs_grp_attrs_sect_attrs_add_size_0"];
		set_sattr_sect_attrs_attrs_0[label="set_sattr_sect_attrs_attrs_0"];
		set_gattr_sect_attrs_grp_attrs_0[label="set_gattr_sect_attrs_grp_attrs_0"];
		for_i_nsect[label="for_i_nsect"];
		sechdrs_i_sh_flags_SHF_ALLOC_clear[label="sechdrs_i_sh_flags_SHF_ALLOC_clear"];
		set_sattr_address_sechdrs_i_sh_addr[label="set_sattr_address_sechdrs_i_sh_addr"];
		strlcpy_sattr_name_secstrings_add_sechdrs_i_sh_name_MODULE_SECT_NAME_LEN[label="strlcpy_sattr_name_secstrings_add_sechdrs_i_sh_name_MODULE_SECT_NAME_LEN"];
		set_sattr_mattr_show_module_sect_show[label="set_sattr_mattr_show_module_sect_show"];
		clear_sattr_mattr_store[label="clear_sattr_mattr_store"];
		set_sattr_mattr_attr_name_sattr_name[label="set_sattr_mattr_attr_name_sattr_name"];
		set_sattr_mattr_attr_owner_mod[label="set_sattr_mattr_attr_owner_mod"];
		set_sattr_mattr_attr_mode_S_IRUGO[label="set_sattr_mattr_attr_mode_S_IRUGO"];
		set_gattr_inc_sattr_inc_mattr_attr[label="set_gattr_inc_sattr_inc_mattr_attr"];
		clear_gattr[label="clear_gattr"];
		sysfs_create_group_mod_mkobj_kobj_sect_attrs_grp[label="sysfs_create_group_mod_mkobj_kobj_sect_attrs_grp"];
		goto_out[label="goto_out"];
		set_mod_sect_attrs_sect_attrs[label="set_mod_sect_attrs_sect_attrs"];
		kfree_sect_attrs[label="kfree_sect_attrs"];
	}

	subgraph cluster_remove_sect_attrs{
		label="static void remove_sect_attrs(struct module *mod)";
		mod_sect_attrs_not_null[label="mod_sect_attrs_not_null"];
		sysfs_remove_group_mod_mkobj_kobj_mod_sect_attrs_grp[label="sysfs_remove_group_mod_mkobj_kobj_mod_sect_attrs_grp"];
		kfree_mod_sect_attrs[label="kfree_mod_sect_attrs"];
		clear_mod_sect_attrs[label="clear_mod_sect_attrs"];
	}

	subgraph cluster_module_add_refcnt_attr{
		label="static inline int module_add_refcnt_attr(struct module *mod)";
		return_sysfs_create_file_mod_mkobj_kobj_refcnt_attr[label="return_sysfs_create_file_mod_mkobj_kobj_refcnt_attr"];
	}

	subgraph cluster_module_remove_refcnt_attr{
		label="static void module_remove_refcnt_attr(struct module *mod)";
		return_sysfs_remove_file_mod_mkobj_kobj_refcnt_attr[label="return_sysfs_remove_file_mod_mkobj_kobj_refcnt_attr"];
	}

	subgraph cluster_mod_sysfs_setup{
		label="static int mod_sysfs_setup(struct module *mod, struct kernel_param *kparam, unsigned int num_params)";
		memset_mod_mkobj_kobj_0[label="memset_mod_mkobj_kobj_0"];
		set_err_kobject_set_name_mod_mkobj_kobj_mod_name[label="set_err_kobject_set_name_mod_mkobj_kobj_mod_name"];
		err_not_null[label="err_not_null"];
		goto_out[label="goto_out"];
		kobj_set_kset_s_mod_mkobj_module_subsys[label="kobj_set_kset_s_mod_mkobj_module_subsys"];
		set_mod_mkobj_mod_mod[label="set_mod_mkobj_mod_mod"];
		set_err_kobject_register_mod_mkobj_kobj[label="set_err_kobject_register_mod_mkobj_kobj"];
		err_not_null[label="err_not_null"];
		goto_out[label="goto_out"];
		set_err_module_add_refcnt_attr_mod[label="set_err_module_add_refcnt_attr_mod"];
		err_not_null[label="err_not_null"];
		goto_out_unreg[label="goto_out_unreg"];
		set_err_module_param_sysfs_setup_mod_kparam_num_params[label="set_err_module_param_sysfs_setup_mod_kparam_num_params"];
		err_not_null[label="err_not_null"];
		goto_out_unreg[label="goto_out_unreg"];
		return_0[label="return_0"];
		kobject_unregister_mod_mkogj_kobj[label="kobject_unregister_mod_mkogj_kobj"];
		return_err[label="return_err"];
	}

	subgraph cluster_mod_kobject_remove{
		label="static void mod_kobject_remove(struct module *mod)";
		module_remove_refcnt_attr_mod[label="module_remove_refcnt_attr_mod"];
		module_param_sysfs_remove_mod[label="module_param_sysfs_remove_mod"];
		kobject_unregister_mod_mkobj_kobj[label="kobject_unregister_mod_mkobj_kobj"];
	}

	subgraph cluster___unlink_module{
		label="static int __unlink_module(void *_mod)";
		set_mod__mod[label="set_mod__mod"];
		list_del_mod_list[label="list_del_mod_list"];
		return_0[label="return_0"];
	}

	subgraph cluster_free_module{
		label="static void free_module(struct module *mod)";
		stop_machine_run___unlink_mdule_mod_NR_CPUS[label="stop_machine_run___unlink_mdule_mod_NR_CPUS"];
		remove_sect_attrs_mod[label="remove_sect_attrs_mod"];
		mod_kobject_remove_mod[label="mod_kobject_remove_mod"];
		module_arch_cleanup_mod[label="module_arch_cleanup_mod"];
		module_unload_free_mod[label="module_unload_free_mod"];
		module_free_mod_mod_module_init[label="module_free_mod_mod_module_init"];
		kfree_mod_args[label="kfree_mod_args"];
		mod_percpu_not_null[label="mod_percpu_not_null"];
		percpu_modfree_mod_percpu[label="percpu_modfree_mod_percpu"];
		module_free_mod_mod_module_core[label="module_free_mod_mod_module_core"];
	}

	subgraph cluster___symbol_get{
		label="void *__symbol_get(const char *symbol)";
		lock_modlist_lock[label="lock_modlist_lock"];
		set_value___find_symbol_symbol_owner_crc_1[label="set_value___find_symbol_symbol_owner_crc_1"];
		value_not_null_and_strong_try_module_get_owner_null[label="value_not_null_and_strong_try_module_get_owner_null"];
		set_value_0[label="set_value_0"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
		return_value[label="return_value"];
	}

	subgraph cluster_simplify_symbols{
		label="static int simplify_symbols(Elf_Shdr *sechdrs, unsigned int symindex, const char *strtab, unsigned int versindex, unsigned int pcpuindex, struct module *mod)";
		set_sym_sechdrs_symindex_sh_addr[label="set_sym_sechdrs_symindex_sh_addr"];
		set_n_sechdrs_ymindex_sh_size_div_sizeof_Elf_Sym[label="set_n_sechdrs_ymindex_sh_size_div_sizeof_Elf_Sym"];
		for_i_n[label="for_i_n"];
		switch_sym_i_st_shndx[label="switch_sym_i_st_shndx"];
		case_SHN_COMMON[label="case_SHN_COMMON"];
		set_ret_ENOEXEC[label="set_ret_ENOEXEC"];
		case_SHN_ABS[label="case_SHN_ABS"];
		case_SHN_UNDEF[label="case_SHN_UNDEF"];
		set_sym_i_st_value_resolev_symbol_sechdrs_versindex_strtab_sym_i_st_name_mod[label="set_sym_i_st_value_resolev_symbol_sechdrs_versindex_strtab_sym_i_st_name_mod"];
		sym_i_st_value_not_eq_0[label="sym_i_st_value_not_eq_0"];
		ELF_ST_BIND_sym_i_st_info_eq_STB_WEAK[label="ELF_ST_BIND_sym_i_st_info_eq_STB_WEAK"];
		set_ret_ENOENT[label="set_ret_ENOENT"];
		default_[label="default_"];
		sym_i_st_shndx_eq_pcpuindex[label="sym_i_st_shndx_eq_pcpuindex"];
		set_secbase_mod_percpu[label="set_secbase_mod_percpu"];
		set_secbase_sechdrs_sym_i_st_shndx_sh_addr[label="set_secbase_sechdrs_sym_i_st_shndx_sh_addr"];
		sym_i_st_value_self_add_secbase[label="sym_i_st_value_self_add_secbase"];
		return_ret[label="return_ret"];
	}

	subgraph cluster_get_offset{
		label="static long get_offset(unsigned long *size, Elf_Shdr *sechdr)";
		set_ret_ALIGN_size_sechdr_sh_addralign[label="set_ret_ALIGN_size_sechdr_sh_addralign"];
		set_size_ret_add_sechdr_sh_size[label="set_size_ret_add_sechdr_sh_size"];
		set_return_ret[label="set_return_ret"];
	}

	subgraph cluster_layout_sections{
		label="static void layout_sections(struct module *mod, const Elf_Ehdr *hdr, Elf_Shdr *sechdrs, const char *secstrings)";
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		set_sechdrs_i_sh_entsize_rever_0[label="set_sechdrs_i_sh_entsize_rever_0"];
		for_m_ARRAY_SIZE_masks[label="for_m_ARRAY_SIZE_masks"];
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		set_s_sechdrs_i[label="set_s_sechdrs_i"];
		s_sh_flags_and_masks_m_0_not_eq_masks_m_0_or_s_sh_flags_and_masks_m_1_not_null_or_s_sh_entsize_not_eq_rever_0_or_strncmp_secstring_add_s_sh_name_int_5_eq_0[label="s_sh_flags_and_masks_m_0_not_eq_masks_m_0_or_s_sh_flags_and_masks_m_1_not_null_or_s_sh_entsize_not_eq_rever_0_or_strncmp_secstring_add_s_sh_name_int_5_eq_0"];
		set_s_sh_entsize_get_offset_mod_core_size_s[label="set_s_sh_entsize_get_offset_mod_core_size_s"];
		m_eq_0[label="m_eq_0"];
		set_mod_core_text_size_mod_core_size[label="set_mod_core_text_size_mod_core_size"];
		for_m_ARRAY_SIZE_maks[label="for_m_ARRAY_SIZE_maks"];
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		set_s_sechdrs_i[label="set_s_sechdrs_i"];
		s_sh_flags_and_masks_m_0_not_eq_masks_m_0_or_s_sh_flags_and_masks_m_1_not_null_or_s_sh_entsize_not_eq_rever_0_or_strncmp_secstring_add_s_sh_name_int_5_not_eq_0[label="s_sh_flags_and_masks_m_0_not_eq_masks_m_0_or_s_sh_flags_and_masks_m_1_not_null_or_s_sh_entsize_not_eq_rever_0_or_strncmp_secstring_add_s_sh_name_int_5_not_eq_0"];
		set_s_sh_entsize_get_offset_mod_core_size_s_or_INIT_OFFSET_MASK[label="set_s_sh_entsize_get_offset_mod_core_size_s_or_INIT_OFFSET_MASK"];
		set_mod_init_text_size_mod_init_size[label="set_mod_init_text_size_mod_init_size"];
	}

	subgraph cluster_license_is_gpl_compatible{
		label="static inline int license_is_gpl_compatible(const char *license)";
		return_strcmp_license_GPL_strcmp_license_GPL_v2_strcmp_license_GPL_and_additional_rights_strcmp_license_Dual_BSD_GPL_strcmp_license_Daul_MPL_GPL[label="return_strcmp_license_GPL_strcmp_license_GPL_v2_strcmp_license_GPL_and_additional_rights_strcmp_license_Dual_BSD_GPL_strcmp_license_Daul_MPL_GPL"];
	}

	subgraph cluster_set_license{
		label="static void set_license(struct module *mod, const char *license)";
		license_null[label="license_null"];
		set_license_unspecified[label="set_license_unspecified"];
		set_mod_license_gplok_license_is_gpl_compatible_license[label="set_mod_license_gplok_license_is_gpl_compatible_license"];
		mod_license_gplok_null_and_tainted_TAINT_PROPRIETARY_MODULE_clear[label="mod_license_gplok_null_and_tainted_TAINT_PROPRIETARY_MODULE_clear"];
		tainted_self_or_TAINT_PROPRIETARY_MODULE[label="tainted_self_or_TAINT_PROPRIETARY_MODULE"];
	}

	subgraph cluster_next_string{
		label="static char *next_string(char *string, unsigned long *secsize)";
		while_string_0[label="while_string_0"];
		inc_string[label="inc_string"];
		dec_secsize_not_great_1[label="dec_secsize_not_great_1"];
		return_NULL[label="return_NULL"];
		while_string_0_null[label="while_string_0_null"];
		inc_string[label="inc_string"];
		dec_secsize_not_great_1[label="dec_secsize_not_great_1"];
		return_NULL[label="return_NULL"];
		return_string[label="return_string"];
	}

	subgraph cluster_get_modinfo{
		label="static char *get_modinfo(Elf_Shdr *sechdrs, unsigned int info, const char *tag)";
		set_taglen_strlen_tag[label="set_taglen_strlen_tag"];
		set_size_sechdrs_info_sh_size[label="set_size_sechdrs_info_sh_size"];
		for_p_sechdrs_info_sh_addr_next_string_p_size[label="for_p_sechdrs_info_sh_addr_next_string_p_size"];
		strncmp_p_tag_taglen_eq_0_and_p_taglen_eq_eq[label="strncmp_p_tag_taglen_eq_0_and_p_taglen_eq_eq"];
		return_p_add_taglen_add_1[label="return_p_add_taglen_add_1"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_is_exported{
		label="int is_exported(const char *name, const struct module *mod)";
		mod_null[label="mod_null"];
		for_i___start____ksymtab_add_i_small___stop___ksymtab[label="for_i___start____ksymtab_add_i_small___stop___ksymtab"];
		strcmp___start_ksymtab_i_name_name_eq_0[label="strcmp___start_ksymtab_i_name_name_eq_0"];
		return_1[label="return_1"];
		return_0[label="return_0"];
		for_i_mod_num_syms[label="for_i_mod_num_syms"];
		strcmp_mod_syms_i_name_name[label="strcmp_mod_syms_i_name_name"];
		return_1[label="return_1"];
		return_0[label="return_0"];
	}

	subgraph cluster_elf_type{
		label="static char elf_type(const Elf_Sym *sym, Elf_Shdr *sechdrs, const char *secstrings, struct module *mod)";
		ELF_ST_BIND_sym_st_info_eq_STB_WEAK[label="ELF_ST_BIND_sym_st_info_eq_STB_WEAK"];
		ELF_ST_TYPE_sym_st_info_eq_STT_OBJECT[label="ELF_ST_TYPE_sym_st_info_eq_STT_OBJECT"];
		return_v[label="return_v"];
		return_w[label="return_w"];
		sym_st_shndx_eq_SHN_UNDEF[label="sym_st_shndx_eq_SHN_UNDEF"];
		return_U[label="return_U"];
		sym_st_shndx_SHN_ABS[label="sym_st_shndx_SHN_ABS"];
		return_a[label="return_a"];
		sym_st_shndx_not_small_SHN_LORESERVE[label="sym_st_shndx_not_small_SHN_LORESERVE"];
		return_?[label="return_?"];
		sechdrs_sym_st_shndx_sh_flags_SHF_EXECINSTR_set[label="sechdrs_sym_st_shndx_sh_flags_SHF_EXECINSTR_set"];
		return_t[label="return_t"];
		sechdrs_sym_st_shndx_sh_flags_SHF_ALLOC_set_and_sechdrs_sym_st_shndx_sh_type_not_eq_SHF_NOBITS[label="sechdrs_sym_st_shndx_sh_flags_SHF_ALLOC_set_and_sechdrs_sym_st_shndx_sh_type_not_eq_SHF_NOBITS"];
		sechdrs_sym_st_shndx_sh_flags_SHF_WRITE_clear[label="sechdrs_sym_st_shndx_sh_flags_SHF_WRITE_clear"];
		return_r[label="return_r"];
		sechdrs_sym_st_shndx_sh_flags_ARCH_SHF_SMALL_set[label="sechdrs_sym_st_shndx_sh_flags_ARCH_SHF_SMALL_set"];
		return_g[label="return_g"];
		return_d[label="return_d"];
		sechdrs_sym_st_shndx_sh_type_eq_SHT_NOBITS[label="sechdrs_sym_st_shndx_sh_type_eq_SHT_NOBITS"];
		sechdrs_sym_st_shndx_sh_flags_ARCH_SHF_SMALL_set[label="sechdrs_sym_st_shndx_sh_flags_ARCH_SHF_SMALL_set"];
		return_s[label="return_s"];
		return_b[label="return_b"];
		strncmp_secstrings_add_sechdrs_sym_st_shndx_sh_name_debug_strlen_debug_eq_0[label="strncmp_secstrings_add_sechdrs_sym_st_shndx_sh_name_debug_strlen_debug_eq_0"];
		return_n[label="return_n"];
		return_?[label="return_?"];
	}

	subgraph cluster_add_kallsyms{
		label="static void add_kallsyms(struct module *mod, Elf_Shdr *sechdrs, int symindex,unsigned int strindex, const char *secstrings)";
		set_mod_symtab_sechdrs_symindex_sh_addr[label="set_mod_symtab_sechdrs_symindex_sh_addr"];
		set_mod_num_symtab_sechdrs_symindex_sh_size_div_sizeof_Elf_Sym[label="set_mod_num_symtab_sechdrs_symindex_sh_size_div_sizeof_Elf_Sym"];
		set_mod_strtab_sechdrs_strindex_sh_addr[label="set_mod_strtab_sechdrs_strindex_sh_addr"];
		for_i_mod_num_symtab[label="for_i_mod_num_symtab"];
		set_mod_symtab_i_st_info_elf_type_mod_symtab_i_sechdrs_secstrings_mod[label="set_mod_symtab_i_st_info_elf_type_mod_symtab_i_sechdrs_secstrings_mod"];
	}

	subgraph cluster_load_module{
		label="static struct module *load_module(void __user *umod, unsigned long len, const char __user *uargs)";
		len_great_64_multi_1024_multi_1024_or_set_hdr_vmalloc_len_eq_NULL[label="len_great_64_multi_1024_multi_1024_or_set_hdr_vmalloc_len_eq_NULL"];
		return_ERR_PTR_ENOMEM[label="return_ERR_PTR_ENOMEM"];
		copy_from_user_hdr_umod[label="copy_from_user_hdr_umod"];
		memcmp_hdr_e_ident_ELFMAG_not_eq_0_or_hdr_e_type_ET_REL_or_elf_check_arch_hdr_null_or_hdr_e_shentsize_not_eq_sizeof_sechdrs[label="memcmp_hdr_e_ident_ELFMAG_not_eq_0_or_hdr_e_type_ET_REL_or_elf_check_arch_hdr_null_or_hdr_e_shentsize_not_eq_sizeof_sechdrs"];
		set_err_ENOEXEC[label="set_err_ENOEXEC"];
		goto_free_hdr[label="goto_free_hdr"];

		len_small_hdr_e_shoff_add_hdr_e_shnum_multi_sizeof_Elf_Shdr[label="len_small_hdr_e_shoff_add_hdr_e_shnum_multi_sizeof_Elf_Shdr"];
		goto_trancated[label="goto_trancated"];
		set_sechdrs_hdr_add_hdr_e_shoff[label="set_sechdrs_hdr_add_hdr_e_shoff"];
		set_secstrings_hdr_add_sechdrs_hdr_e_shstrndx_sh_offset[label="set_secstrings_hdr_add_sechdrs_hdr_e_shstrndx_sh_offset"];
		set_sechdrs_0_sh_addr_0[label="set_sechdrs_0_sh_addr_0"];
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		sechdrs_i_sh_type_not_eq_SHT_NOBITS_and_len_small_sechdrs_i_sh_offset_add_sechdrs_i_sh_size[label="sechdrs_i_sh_type_not_eq_SHT_NOBITS_and_len_small_sechdrs_i_sh_offset_add_sechdrs_i_sh_size"];
		goto_tracated[label="goto_tracated"];
		sechdrs_i_sh_addr_hdr_add_sechdrs_i_sh_offset[label="sechdrs_i_sh_addr_hdr_add_sechdrs_i_sh_offset"];
		sechdrs_i_sh_type_eq_SHT_SYMTAB[label="sechdrs_i_sh_type_eq_SHT_SYMTAB"];
		set_symindex_i[label="set_symindex_i"];
		set_strindex_sechdrs_i_sh_link[label="set_strindex_sechdrs_i_sh_link"];
		set_strtab_hdr_sechdrs_strindex_sh_offset[label="set_strtab_hdr_sechdrs_strindex_sh_offset"];
		CONFIG_MODULE_UNLOAD[label="CONFIG_MODULE_UNLOAD"];
		strncmp_secstring_sechdrs_i_sh_name_exit_5_eq_0[label="strncmp_secstring_sechdrs_i_sh_name_exit_5_eq_0"];
		sechdrs_i_sh_flags_clear_SHF_ALLOC[label="sechdrs_i_sh_flags_clear_SHF_ALLOC"];
		set_modindex_find_sec_hdr_sechdrs_secstrings_gnu_linkonce_this_module[label="set_modindex_find_sec_hdr_sechdrs_secstrings_gnu_linkonce_this_module"];
		modindex_null[label="modindex_null"];
		set_err_ENOEXEC[label="set_err_ENOEXEC"];
		goto_free_hdr[label="goto_free_hdr"];
		set_mod_sechdrs_modindex_sh_addr[label="set_mod_sechdrs_modindex_sh_addr"];
		symindex_eq_0[label="symindex_eq_0"];
		set_err_ENOEXEC[label="set_err_ENOEXEC"];
		goto_free_hdr[label="goto_free_hdr"];
		set_exportindex_find_sec_hdr_sechdrs_secstrings___ksymtab[label="set_exportindex_find_sec_hdr_sechdrs_secstrings___ksymtab"];
		set_gplindex_find_sec_hdr_sechdrs_secstrings___ksymtab_gpl[label="set_gplindex_find_sec_hdr_sechdrs_secstrings___ksymtab_gpl"];
		set_crcindex_find_sec_hdr_sechdrs_secstrings___kcrctab[label="set_crcindex_find_sec_hdr_sechdrs_secstrings___kcrctab"];
		set_gplcrcindex_find_sec_hdr_sechdrs_secstrings___kcrctab_gpl[label="set_gplcrcindex_find_sec_hdr_sechdrs_secstrings___kcrctab_gpl"];
		set_setupindex_find_sec_hdr_sechdrs_secstrings___param[label="set_setupindex_find_sec_hdr_sechdrs_secstrings___param"];
		set_exindex_find_sec_hdr_sechdrs_secstrings___ex_table[label="set_exindex_find_sec_hdr_sechdrs_secstrings___ex_table"];
		set_obsparmindex_find_sec_hdr_sechdrs_secstrings___obsparm[label="set_obsparmindex_find_sec_hdr_sechdrs_secstrings___obsparm"];
		set_versindex_find_sec_hdr_sechdrs_secstrings___versions[label="set_versindex_find_sec_hdr_sechdrs_secstrings___versions"];
		set_infoindex_find_sec_hdr_sechdrs_secstrings_modinfo[label="set_infoindex_find_sec_hdr_sechdrs_secstrings_modinfo"];
		set_pcpuindex_find_pcpusec_hdr_sechdrs_secstrings[label="set_pcpuindex_find_pcpusec_hdr_sechdrs_secstrings"];
		clear_sechdrs_infoindex_sh_flagsSHF_ALLOC[label="clear_sechdrs_infoindex_sh_flagsSHF_ALLOC"];
		CONFIG_KALLSYMS[label="CONFIG_KALLSYMS"];
		sechdrs_symindex_sh_flags_self_or_SHF_ALLOC[label="sechdrs_symindex_sh_flags_self_or_SHF_ALLOC"];
		sechdrs_strindex_sh_flags_self_or_SHF_ALLOC[label="sechdrs_strindex_sh_flags_self_or_SHF_ALLOC"];
		check_modstruct_version_sechdrs_versindex_mod_false[label="check_modstruct_version_sechdrs_versindex_mod_false"];
		set_err_ENOEXEC[label="set_err_ENOEXEC"];
		goto_free_hdr[label="goto_free_hdr"];
		set_modmagic_get_modinfo_sechdrs_infoindex_vermagic[label="set_modmagic_get_modinfo_sechdrs_infoindex_vermagic"];
		modmagic_null[label="modmagic_null"];
		tainted_self_or_TAINT_FORCED_MODULE[label="tainted_self_or_TAINT_FORCED_MODULE"];
		same_magic_modmagic_vermagic_false[label="same_magic_modmagic_vermagic_false"];
		set_err_ENOEXEC[label="set_err_ENOEXEC"];
		goto_free_hdr[label="goto_free_hdr"];
		set_arglen_strlen_user_uargs[label="set_arglen_strlen_user_uargs"];
		arglen_null[label="arglen_null"];
		set_err-EFAULT[label="set_err-EFAULT"];
		goto_free_hdr[label="goto_free_hdr"];
		set_argskmalloc[label="set_argskmalloc"];
		set_args_kmalloc[label="set_args_kmalloc"];
		copy_from_user_args_uargs[label="copy_from_user_args_uargs"];
		find_module_mod_name[label="find_module_mod_name"];
		set_mod_state_MODULE_STATE_COMING[label="set_mod_state_MODULE_STATE_COMING"];
		module_frob_arch_sections_hdr_sechdrs_secstrings_mod[label="module_frob_arch_sections_hdr_sechdrs_secstrings_mod"];
		pcpuindex_not_null[label="pcpuindex_not_null"];
		set_percpu_percpu_modalloc_sechdrs_pcpuindex_sh_size_sechdrs_pcpuindex_sh_addralign[label="set_percpu_percpu_modalloc_sechdrs_pcpuindex_sh_size_sechdrs_pcpuindex_sh_addralign"];
		clear_sechdrs_pcpuindex_sh_flags_SHF_ALLOC[label="clear_sechdrs_pcpuindex_sh_flags_SHF_ALLOC"];
		set_mod_percpu_percpu[label="set_mod_percpu_percpu"];
		layout_sections_mod_hdr_sechdrs_secstrings[label="layout_sections_mod_hdr_sechdrs_secstrings"];
		set_ptr_module_alloc_mod_core_size[label="set_ptr_module_alloc_mod_core_size"];
		memset_ptr_0[label="memset_ptr_0"];
		set_mod_module_core_ptr[label="set_mod_module_core_ptr"];
		set_ptr_module_alloc_mod_init_size[label="set_ptr_module_alloc_mod_init_size"];
		memset_ptr_0[label="memset_ptr_0"];
		set_mod_module_init_ptr[label="set_mod_module_init_ptr"];
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		sechdrs_i_sh_flags_SHF_ALLOC_clear[label="sechdrs_i_sh_flags_SHF_ALLOC_clear"];
		sechdrs_i_sh_entsize_INIT_OFFSET_MASK_set[label="sechdrs_i_sh_entsize_INIT_OFFSET_MASK_set"];
		set_dest_mod_module_int_add_sechdrs_i_sh_entsize_clear_INIT_OFFSET_MASK[label="set_dest_mod_module_int_add_sechdrs_i_sh_entsize_clear_INIT_OFFSET_MASK"];
		set_dest_mod_module_core_add_sechdrs_i_sh_entsize[label="set_dest_mod_module_core_add_sechdrs_i_sh_entsize"];
		sechddrs_i_sh_type_not_eq_SHT_NOBITS[label="sechddrs_i_sh_type_not_eq_SHT_NOBITS"];
		memcpy_des_sechdrs_i_sh_addr[label="memcpy_des_sechdrs_i_sh_addr"];
		set_sechdrs_i_sh_addr_dest[label="set_sechdrs_i_sh_addr_dest"];
		set_mod_sechdrs_modindex_sh_addr[label="set_mod_sechdrs_modindex_sh_addr"];
		module_unload_init_mod[label="module_unload_init_mod"];
		set_license_mod_get_modinfo_sechdrs_infoindex_license[label="set_license_mod_get_modinfo_sechdrs_infoindex_license"];
		simplify_symbols_sechdrs_symindex_strtab_versindex_pcpuindex_mod[label="simplify_symbols_sechdrs_symindex_strtab_versindex_pcpuindex_mod"];
		set_mod_njm_syms_sechdrs_exportindex_sh_size_div_sizeof_mod_syms[label="set_mod_njm_syms_sechdrs_exportindex_sh_size_div_sizeof_mod_syms"];
		set_mod_syms_sechdrs_exportindex_sh_addr[label="set_mod_syms_sechdrs_exportindex_sh_addr"];
		crcindex_not_null[label="crcindex_not_null"];
		set_mod_crcs_sechdrs_crcindex_sh_addr[label="set_mod_crcs_sechdrs_crcindex_sh_addr"];
		set_mod_num_gpl_syms_sechdrs_gplindex_sh_size_div_mod_gpl_syms[label="set_mod_num_gpl_syms_sechdrs_gplindex_sh_size_div_mod_gpl_syms"];
		set_mod_gpl_syms_sechdrs_gplindex_sh_addr[label="set_mod_gpl_syms_sechdrs_gplindex_sh_addr"];
		gplcrcindex_not_null[label="gplcrcindex_not_null"];
		set_mod_gpl_crcs_sechdrs_gplcrcindex_sh_addr[label="set_mod_gpl_crcs_sechdrs_gplcrcindex_sh_addr"];
		CONFIG_MODEVERSIONS[label="CONFIG_MODEVERSIONS"];
		mod_num_syms_not_null_and_crcindex_null_or_mod_num_gpl_syms_not_null_and_gplcrcindex_null[label="mod_num_syms_not_null_and_crcindex_null_or_mod_num_gpl_syms_not_null_and_gplcrcindex_null"];
		tainted_self_or_TAINT_FORCED_MODULE[label="tainted_self_or_TAINT_FORCED_MODULE"];
		for_i_hdr_e_shnum[label="for_i_hdr_e_shnum"];
		set_strtab_sechdrs_strindex_sh_addr[label="set_strtab_sechdrs_strindex_sh_addr"];
		set_info_sechdrs_i_sh_info[label="set_info_sechdrs_i_sh_info"];
		info_not_small_hdr_e_shnum[label="info_not_small_hdr_e_shnum"];
		sechdrs_info_sh_flags_SHF_ALLOC_clear[label="sechdrs_info_sh_flags_SHF_ALLOC_clear"];
		sechdrs_i_sh_type_eq_SHT_REL[label="sechdrs_i_sh_type_eq_SHT_REL"];
		apply_relocate_sechdrs_strtab_symindex_i_mod[label="apply_relocate_sechdrs_strtab_symindex_i_mod"];
		sechdrs_i_sh_type_eq_SHT_RELA[label="sechdrs_i_sh_type_eq_SHT_RELA"];
		apply_relocate_add_sechdrs_strtab_symindex_i_mod[label="apply_relocate_add_sechdrs_strtab_symindex_i_mod"];
		set_mod_num_exentries_sechdrs_exindex_sh_size_sizeof_mod_extable[label="set_mod_num_exentries_sechdrs_exindex_sh_size_sizeof_mod_extable"];
		set_mod_extable_extable_sechdrs_exindex_sh_addr[label="set_mod_extable_extable_sechdrs_exindex_sh_addr"];
		sort_extable_extable_extable_add_mod_num_exentries[label="sort_extable_extable_extable_add_mod_num_exentries"];
		percpu_modcopy_mod_percpu_sechdrs_pcpuindex_sh_addr_sechdrs_pcpuindex_sh_size[label="percpu_modcopy_mod_percpu_sechdrs_pcpuindex_sh_addr_sechdrs_pcpuindex_sh_size"];
		add_kallsyms_mod_sechdrs_symindex_strindex_secstrings[label="add_kallsyms_mod_sechdrs_symindex_strindex_secstrings"];
		module_finalize_hdr_sechdrs_mod[label="module_finalize_hdr_sechdrs_mod"];
		set_mod_args_args[label="set_mod_args_args"];
		obsparmindex_not_null[label="obsparmindex_not_null"];
		obsolete_params_mod_name_mod_args_sechdrs_obsparmindex_sh_addr_sechdrs_obsparmindex_sh_size_div_sechdrs_symindex_sechdrs_strindex_sh_addr[label="obsolete_params_mod_name_mod_args_sechdrs_obsparmindex_sh_addr_sechdrs_obsparmindex_sh_size_div_sechdrs_symindex_sechdrs_strindex_sh_addr"];
		parse_args_mod_name_mod_args_sechdrs_setupindex_sh_addr_sechdrs_setupindex_sh_size_NULL[label="parse_args_mod_name_mod_args_sechdrs_setupindex_sh_addr_sechdrs_setupindex_sh_size_NULL"];
		mod_syfs_setup_mod_sechdrs_setupindex_sh_addr_sechdrs_setupindex_sh_size[label="mod_syfs_setup_mod_sechdrs_setupindex_sh_addr_sechdrs_setupindex_sh_size"];
		add_sect_attrs_mod_hdr_e_shnum_secstrings_sechdrs[label="add_sect_attrs_mod_hdr_e_shnum_secstrings_sechdrs"];
		vfree_hdr[label="vfree_hdr"];
		return_mod[label="return_mod"];
		module_arch_cleanup_mod[label="module_arch_cleanup_mod"];
		module_unloca_free_mod[label="module_unloca_free_mod"];
		module_free_mod_mod_module_init[label="module_free_mod_mod_module_init"];
		module_free_mod_mod_module_core[label="module_free_mod_mod_module_core"];
		percpu_not_null[label="percpu_not_null"];
		percpu_modfree_percpu[label="percpu_modfree_percpu"];
		kfree_args[label="kfree_args"];
		vfree_hdr[label="vfree_hdr"];
	}

	subgraph cluster___link_module{
		label="static int __link_module(void *_mod)";
		set_mod__mod[label="set_mod__mod"];
		list_add_mod_list_modules[label="list_add_mod_list_modules"];
		return_0[label="return_0"];
	}

	subgraph cluster_sys_init_module{
		label="asmlinkage long sys_init_module(void __user *umod, unsigned long len, const char __user *uargs)";
		set_old_fs_get_fs[label="set_old_fs_get_fs"];
		capable_CAP_SYS_MODULE_false[label="capable_CAP_SYS_MODULE_false"];
		return_EPERM[label="return_EPERM"];
		down_interruptible_module_mutex_not_eq_0[label="down_interruptible_module_mutex_not_eq_0"];
		return_EINTR[label="return_EINTR"];
		set_mod_load_module_umod_len_uargs[label="set_mod_load_module_umod_len_uargs"];
		IS_ERR_mod[label="IS_ERR_mod"];
		up_module_mutex[label="up_module_mutex"];
		return_PTR_ERR_mod[label="return_PTR_ERR_mod"];
		set_fs_KERNEL_DS[label="set_fs_KERNEL_DS"];
		mod_module_init_not_null[label="mod_module_init_not_null"];
		flush_icache_range_mod_module_init_mod_module_init_add_mod_init_size[label="flush_icache_range_mod_module_init_mod_module_init_add_mod_init_size"];
		flush_icache_range_mod_module_core_mod_module_core_add_mod_core_size[label="flush_icache_range_mod_module_core_mod_module_core_add_mod_core_size"];
		set_fs_old_fs[label="set_fs_old_fs"];
		stop_machine_run___link_module_mod_NR_CPUS[label="stop_machine_run___link_module_mod_NR_CPUS"];
		up_module_mutex[label="up_module_mutex"];
		down_notify_mutex[label="down_notify_mutex"];
		notifier_call_chain_module_notify_list_MODULE_STATE_COMING_mod[label="notifier_call_chain_module_notify_list_MODULE_STATE_COMING_mod"];
		up_notify_mutex[label="up_notify_mutex"];
		mod_init_not_null[label="mod_init_not_null"];
		set_ret_mod_init[label="set_ret_mod_init"];
		ret_small_0[label="ret_small_0"];
		set_mod_state_MODULE_STATE_GOING[label="set_mod_state_MODULE_STATE_GOING"];
		synchronize_sched[label="synchronize_sched"];
		module_put_mod[label="module_put_mod"];
		down_module_mutex[label="down_module_mutex"];
		free_module_mod[label="free_module_mod"];
		up_module_mutex[label="up_module_mutex"];
		return_ret[label="return_ret"];
		down_module_mutex[label="down_module_mutex"];
		set_mod_state_MODULE_STATE_LIVE[label="set_mod_state_MODULE_STATE_LIVE"];
		module_put_mod[label="module_put_mod"];
		module_free_mod_mod_module_init[label="module_free_mod_mod_module_init"];
		clear_mod_module_init[label="clear_mod_module_init"];
		set_mod_init_size_0[label="set_mod_init_size_0"];
		set_mod_init_text_size_0[label="set_mod_init_text_size_0"];
		up_module_mutex[label="up_module_mutex"];
		return_0[label="return_0"];
	}

	subgraph cluster_get_ksymbol{
		label="static const char *get_ksymbol(struct module *mod, unsigned long addr, unsigned long *size, unsigned long *offset)";
		within_adr_mod_module_init_mod_init_size[label="within_adr_mod_module_init_mod_init_size"];
		set_nextvalmod_module_init_mod_init_text_size[label="set_nextvalmod_module_init_mod_init_text_size"];
		set_nextval_mod_module_core_mod_core_text_size[label="set_nextval_mod_module_core_mod_core_text_size"];
		for_i_mod_num_symtab[label="for_i_mod_num_symtab"];
		mod_symtab_i_st_shndx_eq_SHN_UNDEF[label="mod_symtab_i_st_shndx_eq_SHN_UNDEF"];
		mod_symtab_i_st_value_not_great_addr_and_mod_symtab_i_st_value_great_mod_symtab_best_st_value_and_mod_strtab_add_mod_symtab_i_st_name_not_eq_0_and_is_arm_mapping_symbol_mod_strtab_add_mod_symtab_i_st_name[label="mod_symtab_i_st_value_not_great_addr_and_mod_symtab_i_st_value_great_mod_symtab_best_st_value_and_mod_strtab_add_mod_symtab_i_st_name_not_eq_0_and_is_arm_mapping_symbol_mod_strtab_add_mod_symtab_i_st_name"];
		set_best_i[label="set_best_i"];
		mod_symtab_i_st_value_great_addr_and_mod_symtab_i_st_value_nextval_and_mod_strtab_add_mod_symtab_i_st_name_not_eq_0_and_is_arm_mapping_symbol_mod_strtab_add_mod_symtab_i_st_name[label="mod_symtab_i_st_value_great_addr_and_mod_symtab_i_st_value_nextval_and_mod_strtab_add_mod_symtab_i_st_name_not_eq_0_and_is_arm_mapping_symbol_mod_strtab_add_mod_symtab_i_st_name"];
		set_nextval_mod_symtab_i_st_value[label="set_nextval_mod_symtab_i_st_value"];
		best_null[label="best_null"];
		return_NULL[label="return_NULL"];
		set_size_nextval_sub_mod_symtab_best_st_value[label="set_size_nextval_sub_mod_symtab_best_st_value"];
		set_offset_addr_sub_mod_symtab_best_st_value[label="set_offset_addr_sub_mod_symtab_best_st_value"];
		return_mod_strtab_add_mod_symtab_best_st_name[label="return_mod_strtab_add_mod_symtab_best_st_name"];
	}

	subgraph cluster_module_address_lookup{
		label="const char *module_address_lookup(unsigned long addr, unsigned long *size, unsigned long *offset, char **modname)";
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		within_addr_mod_module_init_mod_init_size_or_within_addr_mod_module_core_mod_core_size[label="within_addr_mod_module_init_mod_init_size_or_within_addr_mod_module_core_mod_core_size"];
		set_modname_mod_name[label="set_modname_mod_name"];
		return_get_ksymbol_mod_addr_size_offset[label="return_get_ksymbol_mod_addr_size_offset"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_module_get_kallsym{
		label="struct module *module_get_kallsym(unsigned int symnum, unsigned long *value, char *type, char namebuf[128])";
		down_module_mutex[label="down_module_mutex"];
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		symnum_small_mod_num_symtab[label="symnum_small_mod_num_symtab"];
		set_value_mod_symtab_symnum_st_value[label="set_value_mod_symtab_symnum_st_value"];
		set_type_mod_symtab_symnum_st_info[label="set_type_mod_symtab_symnum_st_info"];
		strncpy_namebuf_mod_strtab_add_mod_symtab_symnum_st_name_127[label="strncpy_namebuf_mod_strtab_add_mod_symtab_symnum_st_name_127"];
		up_module_mutex[label="up_module_mutex"];
		return_mod[label="return_mod"];
		symnum_self_sub_mod_num_symtab[label="symnum_self_sub_mod_num_symtab"];
		up_module_mutex[label="up_module_mutex"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_mod_find_symname{
		label="static unsigned long mod_find_symname(struct module *mod, const char *name)";
		for_i_mod_num_symtab[label="for_i_mod_num_symtab"];
		strcmp_name_mod_strtab_add_mod_symtab_i_st_name_not_eq_0[label="strcmp_name_mod_strtab_add_mod_symtab_i_st_name_not_eq_0"];
		return_mod_symtab_i_st_value[label="return_mod_symtab_i_st_value"];
		return_0[label="return_0"];
	}

	subgraph cluster_module_kallsyms_lookup_name{
		label="unsigned long module_kallsyms_lookup_name(const char *name)";
		set_colon_strchr_name_maohao_not_eq_NULL[label="set_colon_strchr_name_maohao_not_eq_NULL"];
		set_colon_0[label="set_colon_0"];
		set_mod_find_module_name_not_eq_NULL[label="set_mod_find_module_name_not_eq_NULL"];
		set_ret_mod_find_symname_mod_colon_add_1[label="set_ret_mod_find_symname_mod_colon_add_1"];
		set_colon_maohao[label="set_colon_maohao"];
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		set_ret_mod_find_symname_mod_name_not_eq_0[label="set_ret_mod_find_symname_mod_name_not_eq_0"];
		return_ret[label="return_ret"];
	}

	subgraph cluster_m_start{
		label="static void *m_start(struct seq_file *m, loff_t *pos)";
		down_module_mutex[label="down_module_mutex"];
		list_for_each_i_modules[label="list_for_each_i_modules"];
		n_inc_eq_pos[label="n_inc_eq_pos"];
		i_eq_modules[label="i_eq_modules"];
		return_NULL[label="return_NULL"];
		return_i[label="return_i"];
	}

	subgraph cluster_m_next{
		label="static void *m_next(struct seq_file *m, void *p, loff_t *pos)";
		set_i_p[label="set_i_p"];
		pos_inc[label="pos_inc"];
		i_next_eq_modules[label="i_next_eq_modules"];
		return_NULL[label="return_NULL"];
		return_i_next[label="return_i_next"];
	}

	subgraph cluster_m_stop{
		label="static void m_stop(struct seq_file *m, void *p)";
		up_module_mutex[label="up_module_mutex"];
	}

	subgraph cluster_search_module_extables{
		label="const struct exception_table_entry *search_module_extables(unsigned long addr)";
		lock_modlist_lock[label="lock_modlist_lock"];
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		mod_num_exentries_eq_0[label="mod_num_exentries_eq_0"];
		set_e_search_extable_mod-extable_mod_extable_add_mod_num_exentries_sub_1_addr[label="set_e_search_extable_mod-extable_mod_extable_add_mod_num_exentries_sub_1_addr"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
		return_e[label="return_e"];
	}

	subgraph cluster___module_text_address{
		label="struct module *__module_text_address(unsigned long addr)";
		list_for_each_entry_mod_modules_list[label="list_for_each_entry_mod_modules_list"];
		within_addr_mod_module_init_mod_init_text_size_or_within_addr_mod_module_core_mod_core_text_size[label="within_addr_mod_module_init_mod_init_text_size_or_within_addr_mod_module_core_mod_core_text_size"];
		return_mod[label="return_mod"];
		return_NULL[label="return_NULL"];
	}

	subgraph cluster_module_text_address{
		label="struct module *module_text_address(unsigned long addr)";
		lock_modlist_lock[label="lock_modlist_lock"];
		set_mod___module_text_address_addr[label="set_mod___module_text_address_addr"];
		unlock_modlist_lock[label="unlock_modlist_lock"];
		return_mod[label="return_mod"];
	}

	subgraph cluster_module_add_driver{
		label="void module_add_driver(struct module *mod, struct device_driver *drv)";
		mod_null_or_dir_null[label="mod_null_or_dir_null"];
		return[label="return"];
		sysfs_create_link_drv_kobj_mod_mkobj_kobj_module[label="sysfs_create_link_drv_kobj_mod_mkobj_kobj_module"];
	}

	subgraph cluster_module_remove_driver{
		label="void module_remove_driver(struct device_driver *drv)";
		drv_null[label="drv_null"];
		return[label="return"];
		sysfs_remove_link_drv_kobj_module[label="sysfs_remove_link_drv_kobj_module"];
	}
}
