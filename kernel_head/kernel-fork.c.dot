digraph fork_c{
        size="20,80";
        ratio=filled;

        subgraph cluster_copy_process{
                label="static task_t *copy_process(unsigned long clone_flags,unsigned long stack_start,struct pt_regs *regs,unsigned long stack_size,int __user *parent_tidptr,int __user *child_tidptr,int pid)";

                CLONE_NEWNS_and_CLONE_FS_set_true[label="CLONE_NEWNS_and_CLONE_FS_set_true"];
                return_ERR_PTR_EINVAL[label="return_ERR_PTR_EINVAL"];
                CLONE_THREAD_set_and_not_CLONE_SIGHAND[label="CLONE_THREAD_set_and_not_CLONE_SIGHAND"];
                return_ERR_PTR_EINVAL_1[label="return_ERR_PTR_EINVAL"];
                CLONE_SIGHAND_set_and_not_CLONE_VM[label="CLONE_SIGHAND_set_and_not_CLONE_VM"];
                return_ERR_PTR_EINVAL_2[label="return_ERR_PTR_EINVAL"];
                security_task_create[label="security_task_create(clone_flags)"];
                set_retval_ENOMEM[label="set_retval_ENOMEM"];
                dup_task_struct[label="dup_task_struct(current);"];
		goto_fork_out[label="goto_fork_out"];
                set_retval_EAGAIN[label="set_retval_EAGAIN"];
                p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC[label="p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC"];
                cap_sys_admin_resource_p_user_root_user[label="cap_sys_admin_resource_p_user_root_user"];
		goto_bad_fork_free[label="goto_bad_fork_free"];
                inc_p_user___count[label="inc_p_user___count"];
                inc_p_user_processes[label="inc_p_user_processes"];
                get_group_info[label="get_group_info(p->group_info)"];
                max_threads_small_nr_threads[label="max_threads_small_nr_threads"];
		goto_bad_fork_cleanup_count[label="goto_bad_fork_cleanup_count"];
                goto_bad_fork_cleanup_put_domain[label="goto_bad_fork_cleanup_put_domain"];
		try_module_get_false[label="try_module_get(p->thread_info->exec_domain->module)"];
                p_bitfmt_true_and_try_module_get_p_bitfmt_module_false[label="p_bitfmt_true_and_try_module_get_p_bitfmt_module_false"];
                clean_p_did_exec[label="clean_p_did_exec"];
                copy_flags[label="copy_flags(clone_flags, p)"];
                set_p_pid_pid[label="set_p_pid_pid"];
                set_retval_EFAULT[label="set_retval_EFAULT"];
                CLONE_PARENT_SETTID_set[label="CLONE_PARENT_SETTID_set"];
                put_user[label="put_user_p_pid_parent_tidptr"];
                clean_p_proc_dentry[label="clean_p_proc_dentry"];
		goto_bad_fork_cleanup[label="goto_bad_fork_cleanup"];
                init_p_children_list[label="init_p_children_list"];
                init_p_sibling_list[label="init_p_sibling_list"];
                clean_p_vfork_done[label="clean_p_vfork_done"];
                lock_p_alloc_lock[label="lock_p_alloc_lock"];
                lock_p_proc_lock[label="lock_p_proc_lock"];
                clear_tsk_thread_flag_TIF_SIGPENDING[label="clear_tsk_thread_flag(p, TIF_SIGPENDING);"];
                init_sigpending[label="init_sigpending(&p->pending);"];
                set_p_utime_cputime_zero[label="set_p_utime_cputime_zero"];
                set_p_stime_cputime_zero[label="set_stime_cputime_zero"];
                clear_p_sched_time[label="clear_sched_time"];
                clear_p_rchar[label="clear_p_rchar"];
                clear_p_wchar[label="clear_p_wchar"];
                clear_p_syscr[label="clear_p_syscr"];
                clear_p_syscw[label="clear_p_syscw"];
                acct_clear_integrals[label="acct_clear_integrals(p);"];
                set_p_it_virt_expires_cputime_zero[label="set_p_it_virt_expires_cputime_zero"];
                set_p_it_prof_expires_cputime_zero[label="set_p_it_prof_expires_cputime_zero"];
                clear_it_sched_expires[label="clear_it_sched_expires"];
                init_p_cpu_timers_0_list[label="init_p_cpu_timers_0_list"];
                init_p_cpu_timers_1_list[label="init_p_cpu_timers_1_list"];
                init_p_cpu_timers_2_list[label="init_p_cpu_timers_2_list"];
                clear_p_lock_depth[label="clear_p_lock_depth"];
                do_posix_clock_monotonic_gettime[label="do_posix_clock_monotonic_gettime(&p->start_time);"];
                clear_p_security[label="clear_p_security"];
                clear_p_io_context[label="clear_p_io_context"];
                clear_p_io_wait[label="clear_io_wait"];
                clear_p_audit_context[label="clear_p_audit_context"];
                set_p_tgid_p_pid[label="p->tgid = p->pid"];
                CLONE_THREAD_set[label="CLONE_THREAD_set"];
                p_tgid_current_tgid[label="p->tgid = current->tgid"];
                security_task_alloc[label="security_task_alloc(p)"];
                audit_alloc[label="audit_alloc(p)"];
                copy_semundo[label="copy_semundo(clone_flags, p)"];
                copy_files[label="copy_file(clone_flags, p)"];
                copy_fs[label="copy_fs(clone_flags, p)"];
		copy_sighand[label="copy_sighand(clone_flags, p)"];
                copy_signal[label="copy_signal(clone_flags, p)"];
                copy_mm[label="copy_mm(clone_flags, p)"];
                copy_key[label="copy_key(clone_flags, p)"];
                copy_namespace[label="copy_namespace(clone_flags, p)"];
                copy_thread[label="copy_thread(0, clone_flags, stack_start, stack_size, p, regs);"];
		goto_bad_fork_cleanup_policy[label="goto_bad_fork_cleanup_policy"];
		goto_bad_fork_cleanup_security[label="goto_bad_fork_cleanup_security"];
		goto_bad_fork_cleanup_audit[label="goto_bad_fork_cleanup_audit"];
		goto_bad_fork_cleanup_semundo[label="goto_bad_fork_cleanup_semundo"];
		goto_bad_fork_cleanup_files[label="goto_bad_fork_cleanup_files"];
		goto_bad_fork_cleanup_fs[label="goto_bad_fork_cleanup_fs"];
		goto_bad_fork_cleanup_sighand[label="goto_bad_fork_cleanup_sighand"];
		goto_bad_fork_cleanup_signal[label="goto_bad_fork_cleanup_signal"];
		goto_bad_fork_cleanup_mm[label="goto_bad_fork_cleanup_mm"];
		goto_bad_fork_cleanup_keys[label="goto_bad_fork_cleanup_keys"];
		goto_bad_fork_cleanup_namespace[label="goto_bad_fork_cleanup_namespace"];
		set_p_set_child_tid[label="set_p_set_child_tid"];
                set_p_clear_child_tid[label="set_p_clear_child_tid"];
                clear_tsk_thread_flag_TIF_SYSCALL_TRACE[label="clear_tsk_thread_flag(p, TIF_SYSCALL_TRACE);"];
                set_p_parent_exec_id_p_self_exec_id[label="set_p_parent_exec_id_p_self_exec_id"];
                set_p_exit_signal[label="set_p_exit_signal"];
                clear_p_pdeath_signal[label="clear_p_pdeath_signal"];
                clear_p_exit_state[label="clear_exit_state"];
                sched_fork[label="sched_fork(p)"];
                set_p_group_leader_p[label="p->group_leader = p"];
                init_p_ptrace_children_list[label="init_p_ptrace_children_list"];
                init_p_ptrace_list_list[label="init_p_ptrace_list_list"];
                get_write_lock_irq[label="write_lock_irq(&tasklist_lock);"];

                set_p_cpus_allowed[label="p->cpus_allowed = current->cpus_allowed;"];
                set_task_cpu[label="set_task_cpu(p, smp_processor_id());"];
                sigismember_SIGKILL[label="sigismember(&current->pending.signal, SIGKILL)"];
                write_unlock_irq[label="write_unlock_irq(&tasklist_lock)"];
                retval_EINTR[label="retval_EINTR"];
                CLONE_PARENT_and_CLONE_THREAD_set[label="CLONE_PARENT_and_CLONE_THREAD_set"];
                set_p_real_parent_current_real_parent[label="set_p_real_parent_current_real_parent"];
                set_p_real_parent_current[label="set_p_real_parent_current"];
                set_p_parent_p_real_parent[label="set_p_parent_p_real_parent"];
                CLONE_THREAD_set_1[label="CLONE_THREAD_set"];
                spin_lock_current_sighand_siglock[label="spin_lock_current_sighand_siglock"];
                current_signal_flags_SIGNAL_GROUP_EXIT[label="current_signal_flags_SIGNAL_GROUP_EXIT"];
                spin_unlock_current_sighand_siglock[label="spin_unlock_current_sighand_siglock"]; 
                write_unlock_irq_1[label="write_unlock_irq(&tasklist_lock)"];
                retval_EAGAIN[label="retval_EAGAIN"];
                set_p_group_leader_current_group_leader[label="set_p_group_leader_current_group_leader"];
                current_signal_group_stop_count[label="current_signal_group_stop_count_greater_0"];
                set_tsk_thread_flag[label="set_tsk_thread_flag(p, TIF_SIGPENDING);"];
                inc_current_signal_group_stop_count[label="inc_current_signal_group_stop_count"];
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2[label="cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2"];
                set_p_it_prof_expires[label="p->it_prof_expires = jiffies_to_cputime(1);"];
                spin_unlock_current_sighand_siglock_1[label="spin_unlock_current_sighand_siglock"];
                SET_LINKS[label="SET_LINKS(p);"];
                p_ptrace_PT_PTRACED_set[label="p_ptrace_PT_PTRACED_set"];
                __ptrace_link[label="__ptrace_link"];
                cpuset_fork[label="cpuset_fork(p)"];
                attach_pid_PID[label="attach_pid(p, PIDTYPE_PID, p->pid);"];
                attack_pid_TGID[label="attach_pid(p, PIDTYPE_TGID, p->tgid);"];
                p_thread_group_leader[label="p_thread_group_leader"];
                attack_pid_PGID[label="attach_pid(p, PIDTYPE_PGID, process_group(p));"];
                attack_pid_SID[label="attach_pid(p, PIDTYPE_SID, p->signal->session);"];               
                p_pid_not_null[label="p_pid_not_null"];
                __get_cpu_var[label="__get_cpu_var(process_counts)++;"];
                inc_nr_threads[label="inc_nr_threads"];
                inc_total_forks[label="inc_total_forks"];
                write_unlock_irq_2[label="write_unlock_irq(&tasklist_lock)"];
                clean_retval[label="clean_retval"];
                retval_not_null[label="retval_not_null"];
		return_ERR_PTR_retval[label="return_ERR_PTR_retval"];
		return_p[label="return_p"];
		exit_namespace[label="exit_namespace(p)"];
                // exit_keys[label="exit_keys(p)"];
                p_mm_not_null[label="p_mm_not_null"];
                mmput[label="mmput(p->mm);"];
                exit_signal[label="exit_signal(p)"];
                exit_sighand[label="exit_sighand(p)"];
                exit_fs[label="exit_fs(p)"];
                exit_files[label="exit_files(p)"];
                exit_sem[label="exit_sem(p)"];
                audit_free[label="audit_free(p)"];
                security_task_free[label="security_task_free(p)"];
                mpol_free[label="mpol_free(p->mempolicy)"];
                p_bitfmt_not_null[label="p_bitfmt_not_null"];
                module_put[label="module_put(p->binfmt->module);"];
                module_put_1[label="module_put(p->thread_info->exec_domain->module);"];
                put_group_info[label="put_group_info(p->group_info);"];
                atomic_dec[label="atomic_dec(&p->user->processes);"];
                free_uid[label="free_uid(p->user)"];
                free_task[label="free_task(p)"];
		
		CLONE_NEWNS_and_CLONE_FS_set_true -> return_ERR_PTR_EINVAL;
		CLONE_NEWNS_and_CLONE_FS_set_true -> CLONE_THREAD_set_and_not_CLONE_SIGHAND;
		CLONE_THREAD_set_and_not_CLONE_SIGHAND -> return_ERR_PTR_EINVAL_1;
		CLONE_THREAD_set_and_not_CLONE_SIGHAND -> CLONE_SIGHAND_set_and_not_CLONE_VM;
		CLONE_SIGHAND_set_and_not_CLONE_VM -> return_ERR_PTR_EINVAL_2;
		CLONE_SIGHAND_set_and_not_CLONE_VM -> security_task_create;
		security_task_create -> set_retval_ENOMEM;
		security_task_create -> goto_fork_out;
		set_retval_ENOMEM -> dup_task_struct;
		dup_task_struct -> goto_fork_out;
		dup_task_struct -> set_retval_EAGAIN;
		set_retval_EAGAIN -> p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC;
		p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC -> cap_sys_admin_resource_p_user_root_user;
		p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC -> inc_p_user___count;
		cap_sys_admin_resource_p_user_root_user -> goto_bad_fork_free;
		cap_sys_admin_resource_p_user_root_user -> inc_p_user___count;
		inc_p_user___count -> inc_p_user_processes;
		inc_p_user_processes -> get_group_info;
		get_group_info -> max_threads_small_nr_threads;
		max_threads_small_nr_threads -> goto_bad_fork_cleanup_count;
		max_threads_small_nr_threads -> try_module_get_false;
		try_module_get_false -> goto_bad_fork_cleanup_count;
		try_module_get_false -> p_bitfmt_true_and_try_module_get_p_bitfmt_module_false;
		p_bitfmt_true_and_try_module_get_p_bitfmt_module_false -> goto_bad_fork_cleanup_put_domain;
		p_bitfmt_true_and_try_module_get_p_bitfmt_module_false -> clean_p_did_exec;
		clean_p_did_exec -> copy_flags;
		copy_flags -> set_p_pid_pid;
		set_p_pid_pid -> set_retval_EFAULT;
		set_retval_EFAULT -> CLONE_PARENT_SETTID_set;
		CLONE_PARENT_SETTID_set -> put_user;
		CLONE_PARENT_SETTID_set -> clean_p_proc_dentry;
		put_user -> goto_bad_fork_cleanup;
		put_user -> clean_p_proc_dentry;
		clean_p_proc_dentry -> init_p_children_list;
		init_p_children_list -> init_p_sibling_list;
		init_p_sibling_list -> clean_p_vfork_done;
		clean_p_vfork_done -> lock_p_alloc_lock;
		lock_p_alloc_lock -> lock_p_proc_lock;
		lock_p_proc_lock -> clear_tsk_thread_flag_TIF_SIGPENDING;
		clear_tsk_thread_flag_TIF_SIGPENDING -> init_sigpending;
		init_sigpending -> set_p_utime_cputime_zero;
		set_p_utime_cputime_zero -> set_p_stime_cputime_zero;
		set_p_stime_cputime_zero -> clear_p_sched_time;
		clear_p_sched_time -> clear_p_rchar;
		clear_p_rchar -> clear_p_wchar;
		clear_p_wchar -> clear_p_syscr;
		clear_p_syscr -> clear_p_syscw;
		clear_p_syscw -> acct_clear_integrals;
		acct_clear_integrals -> set_p_it_virt_expires_cputime_zero;
		set_p_it_virt_expires_cputime_zero -> set_p_it_prof_expires_cputime_zero;
		set_p_it_prof_expires_cputime_zero -> clear_it_sched_expires;
		clear_it_sched_expires -> init_p_cpu_timers_0_list;
		init_p_cpu_timers_0_list -> init_p_cpu_timers_1_list;
		init_p_cpu_timers_1_list -> init_p_cpu_timers_2_list;
		init_p_cpu_timers_2_list -> clear_p_lock_depth;
		clear_p_lock_depth -> do_posix_clock_monotonic_gettime;
		do_posix_clock_monotonic_gettime -> clear_p_security;
		clear_p_security -> clear_p_io_context;
		clear_p_io_context -> clear_p_io_wait;
		clear_p_io_wait -> clear_p_audit_context;
		clear_p_audit_context -> set_p_tgid_p_pid;
		set_p_tgid_p_pid -> CLONE_THREAD_set;
		CLONE_THREAD_set -> p_tgid_current_tgid;
		CLONE_THREAD_set -> security_task_alloc;
		p_tgid_current_tgid -> security_task_alloc;
		security_task_alloc -> audit_alloc;
		audit_alloc -> copy_semundo;
		copy_semundo -> copy_files;
		copy_files -> copy_fs;
		copy_fs -> copy_sighand;
		copy_sighand -> copy_signal;
		copy_signal -> copy_mm;
		copy_mm -> copy_key;
		copy_key -> copy_namespace;
		copy_namespace -> copy_thread;
		security_task_alloc -> goto_bad_fork_cleanup_policy;
		audit_alloc -> goto_bad_fork_cleanup_security;
		copy_semundo -> goto_bad_fork_cleanup_audit;
		copy_files -> goto_bad_fork_cleanup_semundo;
		copy_fs -> goto_bad_fork_cleanup_files;
		copy_sighand -> goto_bad_fork_cleanup_fs;
		copy_signal -> goto_bad_fork_cleanup_sighand;
		copy_mm -> goto_bad_fork_cleanup_signal;
		copy_key -> goto_bad_fork_cleanup_mm;
		copy_namespace -> goto_bad_fork_cleanup_keys;
		copy_thread -> goto_bad_fork_cleanup_namespace;
		copy_thread -> set_p_set_child_tid;
		set_p_set_child_tid -> set_p_clear_child_tid;
		set_p_clear_child_tid -> clear_tsk_thread_flag_TIF_SYSCALL_TRACE;
		clear_tsk_thread_flag_TIF_SYSCALL_TRACE -> set_p_parent_exec_id_p_self_exec_id;
		set_p_parent_exec_id_p_self_exec_id -> set_p_exit_signal;
		set_p_exit_signal -> clear_p_pdeath_signal;
		clear_p_pdeath_signal -> clear_p_exit_state;
		clear_p_exit_state -> sched_fork;
		sched_fork -> set_p_group_leader_p;
		set_p_group_leader_p -> init_p_ptrace_children_list;
		init_p_ptrace_children_list -> init_p_ptrace_list_list;
		init_p_ptrace_list_list -> get_write_lock_irq;
		get_write_lock_irq -> set_p_cpus_allowed;
		set_p_cpus_allowed -> set_task_cpu;
		set_task_cpu -> sigismember_SIGKILL;
		sigismember_SIGKILL -> write_unlock_irq;
		write_unlock_irq -> retval_EINTR;
		retval_EINTR -> goto_bad_fork_cleanup_namespace;
		sigismember_SIGKILL -> CLONE_PARENT_and_CLONE_THREAD_set;
		CLONE_PARENT_and_CLONE_THREAD_set -> set_p_real_parent_current_real_parent;
		CLONE_PARENT_and_CLONE_THREAD_set -> set_p_real_parent_current;
		set_p_real_parent_current -> set_p_parent_p_real_parent;
		set_p_real_parent_current_real_parent -> set_p_parent_p_real_parent;
		set_p_parent_p_real_parent -> CLONE_THREAD_set_1;
		CLONE_THREAD_set_1 -> spin_lock_current_sighand_siglock;
		spin_lock_current_sighand_siglock -> current_signal_flags_SIGNAL_GROUP_EXIT;
		current_signal_flags_SIGNAL_GROUP_EXIT -> spin_unlock_current_sighand_siglock;
		spin_unlock_current_sighand_siglock -> write_unlock_irq_1;
		write_unlock_irq_1 -> retval_EAGAIN;
		retval_EAGAIN -> goto_bad_fork_cleanup_namespace;
		current_signal_flags_SIGNAL_GROUP_EXIT -> set_p_group_leader_current_group_leader;
		set_p_group_leader_current_group_leader -> current_signal_group_stop_count;
		current_signal_group_stop_count -> inc_current_signal_group_stop_count;
		inc_current_signal_group_stop_count -> set_tsk_thread_flag;
		current_signal_group_stop_count -> cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2;
		set_tsk_thread_flag -> cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2;
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2 -> set_p_it_prof_expires;
		set_p_it_prof_expires -> spin_unlock_current_sighand_siglock_1;
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2 -> spin_unlock_current_sighand_siglock_1;
		spin_unlock_current_sighand_siglock_1 -> SET_LINKS;
		CLONE_THREAD_set_1 -> SET_LINKS;
		SET_LINKS -> p_ptrace_PT_PTRACED_set;
		p_ptrace_PT_PTRACED_set -> cpuset_fork;
		p_ptrace_PT_PTRACED_set -> __ptrace_link;
		__ptrace_link -> cpuset_fork;
		cpuset_fork -> attach_pid_PID;
		attach_pid_PID -> attack_pid_TGID;
		attack_pid_TGID -> p_thread_group_leader;
		p_thread_group_leader -> inc_nr_threads;
		p_thread_group_leader -> attack_pid_PGID;
		attack_pid_PGID -> attack_pid_SID;
		attack_pid_SID -> p_pid_not_null;
		p_pid_not_null -> __get_cpu_var;
		__get_cpu_var -> inc_nr_threads;
		inc_nr_threads -> inc_total_forks;
		inc_total_forks -> write_unlock_irq_2;
		write_unlock_irq_2 -> clean_retval;
		clean_retval -> goto_fork_out;
		goto_fork_out -> retval_not_null;
		retval_not_null -> return_ERR_PTR_retval;
		retval_not_null -> return_p;
		goto_bad_fork_cleanup_namespace -> exit_namespace;
		exit_namespace -> goto_bad_fork_cleanup_keys;
		goto_bad_fork_cleanup_keys -> goto_bad_fork_cleanup_mm;
		goto_bad_fork_cleanup_mm -> p_mm_not_null;
		p_mm_not_null -> mmput;
		mmput -> goto_bad_fork_cleanup_signal;
		p_mm_not_null -> goto_bad_fork_cleanup_signal;
		goto_bad_fork_cleanup_signal -> exit_signal;
		exit_signal  -> goto_bad_fork_cleanup_sighand;
		goto_bad_fork_cleanup_sighand -> exit_sighand;
		exit_sighand -> goto_bad_fork_cleanup_fs;
		goto_bad_fork_cleanup_fs -> exit_fs;
		exit_fs -> goto_bad_fork_cleanup_files;
		goto_bad_fork_cleanup_files -> exit_files;
		exit_files -> goto_bad_fork_cleanup_semundo;
		goto_bad_fork_cleanup_semundo -> exit_sem;
		exit_sem -> goto_bad_fork_cleanup_audit;
		goto_bad_fork_cleanup_audit -> audit_free;
		audit_free -> goto_bad_fork_cleanup_security;
		goto_bad_fork_cleanup_security -> security_task_free;
		security_task_free -> goto_bad_fork_cleanup_policy;
		goto_bad_fork_cleanup_policy -> mpol_free;
		mpol_free -> goto_bad_fork_cleanup;
		goto_bad_fork_cleanup -> p_bitfmt_not_null;
		p_bitfmt_not_null -> module_put;
		p_bitfmt_not_null -> goto_bad_fork_cleanup_put_domain;
		module_put -> goto_bad_fork_cleanup_put_domain;
		goto_bad_fork_cleanup_put_domain -> module_put_1;
		module_put_1 -> goto_bad_fork_cleanup_count;
		goto_bad_fork_cleanup_count -> put_group_info;
		put_group_info -> atomic_dec;
		atomic_dec -> free_uid;
		free_uid -> goto_bad_fork_free;
		goto_bad_fork_free -> free_task;
		free_task -> goto_fork_out;
		
        }

        subgraph cluster_dup_task_struct{
                label="struct task_struct *dup_task_struct(struct task_struct *orig)";

		prepare_to_copy[label="prepare_to_copy(orig)"];
		alloc_task_struct[label="alloc_task_struct()"];
		alloc_thread_info[label="alloc_thread_info()"];
                free_task_struct[label="free_task_struct(tsk)"];
		return_null[label="return_null"];
		copy_ti[label="copy_ti"];
		copy_tsk[label="copy_tsk"];
		get_ti[label="get_ti"];
		get_tsk[label="get_tsk"];
		set_usage_2[label="set_usage_2"];

		prepare_to_copy -> alloc_task_struct;
		alloc_task_struct -> alloc_thread_info;
		alloc_thread_info -> free_task_struct[label="NULL"];
		alloc_thread_info -> copy_ti;
		free_task_struct -> return_null;
		alloc_task_struct -> return_null[label="NULL"];
		copy_ti -> copy_tsk;
		copy_tsk -> get_ti;
		get_ti -> get_tsk;
		get_tsk -> set_usage_2;
        }

        subgraph cluster_alloc_task_struct {
                label="alloc_task_struct()";

                kmem_cache_alloc[label="kmem_cache_alloc(task_struct_cachep, GFP_KERNEL)"];
        }

        subgraph cluster_copy_flags {
                label="void copy_flags(unsigned long clone_flags, struct task_struct *p)";

                clear_PF_SUPERPRIV[label="clear_PF_SUPERPRIV"];
                set_PF_FORKNOEXEC[label="set_PF_FORKNOEXEC"];
                CLONE_PTRACE_set[label="CLONE_PTRACE_set"];
                clear_p_ptrace[label="clear_p_ptrace"];
        }

	subgraph cluster_do_fork{
		label="long do_fork(unsigned long clone_flags,unsigned long stack_start,struct pt_regs *regs,unsigned long stack_size,int __user *parent_tidptr,int __user *child_tidptr)";

		alloc_pidmap[label="alloc_pidmap()"];
		current_ptrace_true[label="current_ptrace_true"];
		fork_traceflag[label="fork_traceflag (clone_flags);"];
		clone_flags_set_CLONE_PTRACE[label="clone_flags_set_CLONE_PTRACE"];
		copy_process[label="copy_process(clone_flags, stack_start, regs, stack_size, parent_tidptr, child_tidptr, pid);"];
		CLONE_VFORK_set[label="CLONE_VFORK_set"];
		set_p_vfork_done[label="set_p_vfork_done"];
		init_completion[label="init_completion(&vfork);"];
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set[label="p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set"];
		sigaddset_SIGSTOP[label="sigaddset(&p->pending.signal, SIGSTOP);"];
		set_tsk_thread_flag_TIF_SIGPENDING[label="set_tsk_thread_flag_TIF_SIGPENDING"];
		CLONE_STOPPED_set[label="CLONE_STOPPED_set"];
		wake_up_new_task[label="wake_up_new_task(p, clone_flags);"];
		set_p_state_TASK_STOPPED[label="set_p_state_TASK_STOPPED"];
		trace_true[label="trace_true"];
		set_current_ptrace_message_pid[label="set_current_ptrace_message_pid"];
		ptrace_notify[label="ptrace_notify ((trace << 8) | SIGTRAP);"];
		clone_flags_CLONE_VFORK_set[label="clone_flags_CLONE_VFORK_set"];
		wait_for_completion[label="wait_for_completion(&vfork);"];
		current_ptrace_PT_TRACE_VFORK_DONE_set[label="current_ptrace_PT_TRACE_VFORK_DONE_set"];
		ptrace_notify_1[label="ptrace_notify ((PTRACE_EVENT_VFORK_DONE << 8) | SIGTRAP);"];
		return_pid[label="return_pid"];

		alloc_pidmap -> current_ptrace_true;
		current_ptrace_true -> fork_traceflag;
		fork_traceflag -> clone_flags_set_CLONE_PTRACE;
		clone_flags_set_CLONE_PTRACE -> copy_process;
		current_ptrace_true -> copy_process;
		fork_traceflag -> copy_process;
		copy_process -> CLONE_VFORK_set;
		CLONE_VFORK_set -> set_p_vfork_done;
		set_p_vfork_done -> init_completion;
		init_completion -> p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set;
		CLONE_VFORK_set -> p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set;
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set -> sigaddset_SIGSTOP;
		sigaddset_SIGSTOP -> set_tsk_thread_flag_TIF_SIGPENDING;
		set_tsk_thread_flag_TIF_SIGPENDING -> CLONE_STOPPED_set;
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set -> CLONE_STOPPED_set;
		CLONE_STOPPED_set -> wake_up_new_task;
		wake_up_new_task -> trace_true;
		set_p_state_TASK_STOPPED -> trace_true;
		trace_true -> set_current_ptrace_message_pid;
		set_current_ptrace_message_pid -> ptrace_notify;
		ptrace_notify -> clone_flags_CLONE_VFORK_set;
		trace_true -> clone_flags_CLONE_VFORK_set;
		clone_flags_CLONE_VFORK_set -> wait_for_completion;
		wait_for_completion -> current_ptrace_PT_TRACE_VFORK_DONE_set;
		wait_for_completion -> reurn_pid;
		current_ptrace_PT_TRACE_VFORK_DONE_set -> return_pid;
		current_ptrace_PT_TRACE_VFORK_DONE_set -> ptrace_notify_1;
		ptrace_notify_1 -> return_pid;
	}

        subgraph cluster_copy_mm{
                set_tsk_min_flt_tsk_maj_flt_0[label="set_tsk_min_flt_tsk_maj_flt_0"];
                set_tsk_nvcsw_tsk_nivcsw_0[label="set_tsk_nvcsw_tsk_nivcsw_0"];
                clear_tsk_mm[label="clear_tsk_mm"];
                clear_active_mm[label="clear_active_mm"];
                set_oldmm_current_mm[label="set_oldmm_current_mm"];
                oldmm_null[label="oldmm_null"];
                return_0[label="return_0"];
                clone_flags_CLONE_VM_set[label="clone_flags_CLONE_VM_set"];
                atomic_inc_oldmm_mm_users[label="atomic_inc_oldmm_mm_users"];
                set_mm_oldmm[label="set_mm_oldmm"];
                unlock_wait_oldmm_page_table_lock[label="unlock_wait_oldmm_page_table_lock"];
                set_retval_ENOMEM[label="set_retval_ENOMEM"];
                set_mm_allocate_mm[label="set_mm_allocate_mm"];
                mm_null[label="mm_null"];
                memcpy_mm_oldmm[label="memcpy_mm_oldmm"];
                mm_init_mm_false[label="mm_init_mm_false"];
                init_new_context_tsk_mm[label="init_new_context_tsk_mm"];
                set_retval_dup_mmap_mm_oldmm[label="set_retval_dup_mmap_mm_oldmm"];
                retval_not_null[label="retval_not_null"];
                set_mm_hiwater_rss_get_mm_counter_mm_rss[label="set_mm_hiwater_rss_get_mm_counter_mm_rss"];
                set_mm_hiwater_vm_mm_total_vm[label="set_mm_hiwater_vm_mm_total_vm"];
                set_tsk_active_mm_mm[label="set_tsk_active_mm_mm"];
                return_0[label="return_0"];
                mmput_mm[label="mmput_mm"];
                return_retval[label="return_retval"];
                mm_free_pgd_mm[label="mm_free_pgd_mm"];
                free_mm_mm[label="free_mm_mm"];
                return_retval[label="return_retval"];
        }
}


