digraph fork_c{
        size="300,100";
        ratio=filled;

        subgraph cluster_copy_process{
                label="static task_t *copy_process(unsigned long clone_flags,unsigned long stack_start,struct pt_regs *regs,unsigned long stack_size,int __user *parent_tidptr,int __user *child_tidptr,int pid)";

                CLONE_NEWNS_and_CLONE_FS_set_true[label="CLONE_NEWNS_and_CLONE_FS_set_true"];
                return_ERR_PTR_EINVAL[label="return_ERR_PTR_EINVAL"];
                CLONE_THREAD_set_and_not_CLONE_SIGHAND[label="CLONE_THREAD_set_and_not_CLONE_SIGHAND"];
                return_ERR_PTR_EINVAL_1[label="return_ERR_PTR_EINVAL"];
                CLONE_SIGHAND_set_and_not_CLONE_VM[label="CLONE_SIGHAND_set_and_not_CLONE_VM"];
                return_ERR_PTR_EINVAL_2[label="return_ERR_PTR_EINVAL"];
                security_task_create[label="security_task_create(clone_flags)"];
                set_retval_ENOMEM[label="set_retval_ENOMEM"];
                dup_task_struct[label="dup_task_struct(current);"];
		goto_fork_out[label="goto_fork_out"];
                set_retval_EAGAIN[label="set_retval_EAGAIN"];
                p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC[label="p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC"];
                cap_sys_admin_resource_p_user_root_user[label="cap_sys_admin_resource_p_user_root_user"];
		goto_bad_fork_free[label="goto_bad_fork_free"];
                inc_p_user___count[label="inc_p_user___count"];
                inc_p_user_processes[label="inc_p_user_processes"];
                get_group_info[label="get_group_info(p->group_info)"];
                max_threads_small_nr_threads[label="max_threads_small_nr_threads"];
		goto_bad_fork_cleanup_count[label="goto_bad_fork_cleanup_count"];
                goto_bad_fork_cleanup_put_domain[label="goto_bad_fork_cleanup_put_domain"];
		try_module_get_false[label="try_module_get(p->thread_info->exec_domain->module)"];
                p_bitfmt_true_and_try_module_get_p_bitfmt_module_false[label="p_bitfmt_true_and_try_module_get_p_bitfmt_module_false"];
                clean_p_did_exec[label="clean_p_did_exec"];
                copy_flags[label="copy_flags(clone_flags, p)"];
                set_p_pid_pid[label="set_p_pid_pid"];
                set_retval_EFAULT[label="set_retval_EFAULT"];
                CLONE_PARENT_SETTID_set[label="CLONE_PARENT_SETTID_set"];
                put_user[label="put_user_p_pid_parent_tidptr"];
                clean_p_proc_dentry[label="clean_p_proc_dentry"];
		goto_bad_fork_cleanup[label="goto_bad_fork_cleanup"];
                init_p_children_list[label="init_p_children_list"];
                init_p_sibling_list[label="init_p_sibling_list"];
                clean_p_vfork_done[label="clean_p_vfork_done"];
                lock_p_alloc_lock[label="lock_p_alloc_lock"];
                lock_p_proc_lock[label="lock_p_proc_lock"];
                clear_tsk_thread_flag_TIF_SIGPENDING[label="clear_tsk_thread_flag(p, TIF_SIGPENDING);"];
                init_sigpending[label="init_sigpending(&p->pending);"];
                set_p_utime_cputime_zero[label="set_p_utime_cputime_zero"];
                set_p_stime_cputime_zero[label="set_stime_cputime_zero"];
                clear_p_sched_time[label="clear_sched_time"];
                clear_p_rchar[label="clear_p_rchar"];
                clear_p_wchar[label="clear_p_wchar"];
                clear_p_syscr[label="clear_p_syscr"];
                clear_p_syscw[label="clear_p_syscw"];
                acct_clear_integrals[label="acct_clear_integrals(p);"];
                set_p_it_virt_expires_cputime_zero[label="set_p_it_virt_expires_cputime_zero"];
                set_p_it_prof_expires_cputime_zero[label="set_p_it_prof_expires_cputime_zero"];
                clear_it_sched_expires[label="clear_it_sched_expires"];
                init_p_cpu_timers_0_list[label="init_p_cpu_timers_0_list"];
                init_p_cpu_timers_1_list[label="init_p_cpu_timers_1_list"];
                init_p_cpu_timers_2_list[label="init_p_cpu_timers_2_list"];
                clear_p_lock_depth[label="clear_p_lock_depth"];
                do_posix_clock_monotonic_gettime[label="do_posix_clock_monotonic_gettime(&p->start_time);"];
                clear_p_security[label="clear_p_security"];
                clear_p_io_context[label="clear_p_io_context"];
                clear_p_io_wait[label="clear_io_wait"];
                clear_p_audit_context[label="clear_p_audit_context"];
                set_p_tgid_p_pid[label="p->tgid = p->pid"];
                CLONE_THREAD_set[label="CLONE_THREAD_set"];
                p_tgid_current_tgid[label="p->tgid = current->tgid"];
                security_task_alloc[label="security_task_alloc(p)"];
                audit_alloc[label="audit_alloc(p)"];
                copy_semundo[label="copy_semundo(clone_flags, p)"];
                copy_files[label="copy_file(clone_flags, p)"];
                copy_fs[label="copy_fs(clone_flags, p)"];
		copy_sighand[label="copy_sighand(clone_flags, p)"];
                copy_signal[label="copy_signal(clone_flags, p)"];
                copy_mm[label="copy_mm(clone_flags, p)"];
                copy_key[label="copy_key(clone_flags, p)"];
                copy_namespace[label="copy_namespace(clone_flags, p)"];
                copy_thread[label="copy_thread(0, clone_flags, stack_start, stack_size, p, regs);"];
		goto_bad_fork_cleanup_policy[label="goto_bad_fork_cleanup_policy"];
		goto_bad_fork_cleanup_security[label="goto_bad_fork_cleanup_security"];
		goto_bad_fork_cleanup_audit[label="goto_bad_fork_cleanup_audit"];
		goto_bad_fork_cleanup_semundo[label="goto_bad_fork_cleanup_semundo"];
		goto_bad_fork_cleanup_files[label="goto_bad_fork_cleanup_files"];
		goto_bad_fork_cleanup_fs[label="goto_bad_fork_cleanup_fs"];
		goto_bad_fork_cleanup_sighand[label="goto_bad_fork_cleanup_sighand"];
		goto_bad_fork_cleanup_signal[label="goto_bad_fork_cleanup_signal"];
		goto_bad_fork_cleanup_mm[label="goto_bad_fork_cleanup_mm"];
		goto_bad_fork_cleanup_keys[label="goto_bad_fork_cleanup_keys"];
		goto_bad_fork_cleanup_namespace[label="goto_bad_fork_cleanup_namespace"];
		set_p_set_child_tid[label="set_p_set_child_tid"];
                set_p_clear_child_tid[label="set_p_clear_child_tid"];
                clear_tsk_thread_flag_TIF_SYSCALL_TRACE[label="clear_tsk_thread_flag(p, TIF_SYSCALL_TRACE);"];
                set_p_parent_exec_id_p_self_exec_id[label="set_p_parent_exec_id_p_self_exec_id"];
                set_p_exit_signal[label="set_p_exit_signal"];
                clear_p_pdeath_signal[label="clear_p_pdeath_signal"];
                clear_p_exit_state[label="clear_exit_state"];
                sched_fork[label="sched_fork(p)"];
                set_p_group_leader_p[label="p->group_leader = p"];
                init_p_ptrace_children_list[label="init_p_ptrace_children_list"];
                init_p_ptrace_list_list[label="init_p_ptrace_list_list"];
                get_write_lock_irq[label="write_lock_irq(&tasklist_lock);"];

                set_p_cpus_allowed[label="p->cpus_allowed = current->cpus_allowed;"];
                set_task_cpu[label="set_task_cpu(p, smp_processor_id());"];
                sigismember_SIGKILL[label="sigismember(&current->pending.signal, SIGKILL)"];
                write_unlock_irq[label="write_unlock_irq(&tasklist_lock)"];
                retval_EINTR[label="retval_EINTR"];
                CLONE_PARENT_and_CLONE_THREAD_set[label="CLONE_PARENT_and_CLONE_THREAD_set"];
                set_p_real_parent_current_real_parent[label="set_p_real_parent_current_real_parent"];
                set_p_real_parent_current[label="set_p_real_parent_current"];
                set_p_parent_p_real_parent[label="set_p_parent_p_real_parent"];
                CLONE_THREAD_set_1[label="CLONE_THREAD_set"];
                spin_lock_current_sighand_siglock[label="spin_lock_current_sighand_siglock"];
                current_signal_flags_SIGNAL_GROUP_EXIT[label="current_signal_flags_SIGNAL_GROUP_EXIT"];
                spin_unlock_current_sighand_siglock[label="spin_unlock_current_sighand_siglock"]; 
                write_unlock_irq_1[label="write_unlock_irq(&tasklist_lock)"];
                retval_EAGAIN[label="retval_EAGAIN"];
                set_p_group_leader_current_group_leader[label="set_p_group_leader_current_group_leader"];
                current_signal_group_stop_count[label="current_signal_group_stop_count_greater_0"];
                set_tsk_thread_flag[label="set_tsk_thread_flag(p, TIF_SIGPENDING);"];
                inc_current_signal_group_stop_count[label="inc_current_signal_group_stop_count"];
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2[label="cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2"];
                set_p_it_prof_expires[label="p->it_prof_expires = jiffies_to_cputime(1);"];
                spin_unlock_current_sighand_siglock_1[label="spin_unlock_current_sighand_siglock"];
                SET_LINKS[label="SET_LINKS(p);"];
                p_ptrace_PT_PTRACED_set[label="p_ptrace_PT_PTRACED_set"];
                __ptrace_link[label="__ptrace_link"];
                cpuset_fork[label="cpuset_fork(p)"];
                attach_pid_PID[label="attach_pid(p, PIDTYPE_PID, p->pid);"];
                attack_pid_TGID[label="attach_pid(p, PIDTYPE_TGID, p->tgid);"];
                p_thread_group_leader[label="p_thread_group_leader"];
                attack_pid_PGID[label="attach_pid(p, PIDTYPE_PGID, process_group(p));"];
                attack_pid_SID[label="attach_pid(p, PIDTYPE_SID, p->signal->session);"];               
                p_pid_not_null[label="p_pid_not_null"];
                __get_cpu_var[label="__get_cpu_var(process_counts)++;"];
                inc_nr_threads[label="inc_nr_threads"];
                inc_total_forks[label="inc_total_forks"];
                write_unlock_irq_2[label="write_unlock_irq(&tasklist_lock)"];
                clean_retval[label="clean_retval"];
                retval_not_null[label="retval_not_null"];
		return_ERR_PTR_retval[label="return_ERR_PTR_retval"];
		return_p[label="return_p"];
		exit_namespace[label="exit_namespace(p)"];
                // exit_keys[label="exit_keys(p)"];
                p_mm_not_null[label="p_mm_not_null"];
                mmput[label="mmput(p->mm);"];
                exit_signal[label="exit_signal(p)"];
                exit_sighand[label="exit_sighand(p)"];
                exit_fs[label="exit_fs(p)"];
                exit_files[label="exit_files(p)"];
                exit_sem[label="exit_sem(p)"];
                audit_free[label="audit_free(p)"];
                security_task_free[label="security_task_free(p)"];
                mpol_free[label="mpol_free(p->mempolicy)"];
                p_bitfmt_not_null[label="p_bitfmt_not_null"];
                module_put[label="module_put(p->binfmt->module);"];
                module_put_1[label="module_put(p->thread_info->exec_domain->module);"];
                put_group_info[label="put_group_info(p->group_info);"];
                atomic_dec[label="atomic_dec(&p->user->processes);"];
                free_uid[label="free_uid(p->user)"];
                free_task[label="free_task(p)"];
		
		CLONE_NEWNS_and_CLONE_FS_set_true -> return_ERR_PTR_EINVAL;
		CLONE_NEWNS_and_CLONE_FS_set_true -> CLONE_THREAD_set_and_not_CLONE_SIGHAND;
		CLONE_THREAD_set_and_not_CLONE_SIGHAND -> return_ERR_PTR_EINVAL_1;
		CLONE_THREAD_set_and_not_CLONE_SIGHAND -> CLONE_SIGHAND_set_and_not_CLONE_VM;
		CLONE_SIGHAND_set_and_not_CLONE_VM -> return_ERR_PTR_EINVAL_2;
		CLONE_SIGHAND_set_and_not_CLONE_VM -> security_task_create;
		security_task_create -> set_retval_ENOMEM;
		security_task_create -> goto_fork_out;
		set_retval_ENOMEM -> dup_task_struct;
		dup_task_struct -> goto_fork_out;
		dup_task_struct -> set_retval_EAGAIN;
		set_retval_EAGAIN -> p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC;
		p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC -> cap_sys_admin_resource_p_user_root_user;
		p_user_processes_greater_p_signal_rlim_RLIMIT_NPROC -> inc_p_user___count;
		cap_sys_admin_resource_p_user_root_user -> goto_bad_fork_free;
		cap_sys_admin_resource_p_user_root_user -> inc_p_user___count;
		inc_p_user___count -> inc_p_user_processes;
		inc_p_user_processes -> get_group_info;
		get_group_info -> max_threads_small_nr_threads;
		max_threads_small_nr_threads -> goto_bad_fork_cleanup_count;
		max_threads_small_nr_threads -> try_module_get_false;
		try_module_get_false -> goto_bad_fork_cleanup_count;
		try_module_get_false -> p_bitfmt_true_and_try_module_get_p_bitfmt_module_false;
		p_bitfmt_true_and_try_module_get_p_bitfmt_module_false -> goto_bad_fork_cleanup_put_domain;
		p_bitfmt_true_and_try_module_get_p_bitfmt_module_false -> clean_p_did_exec;
		clean_p_did_exec -> copy_flags;
		copy_flags -> set_p_pid_pid;
		set_p_pid_pid -> set_retval_EFAULT;
		set_retval_EFAULT -> CLONE_PARENT_SETTID_set;
		CLONE_PARENT_SETTID_set -> put_user;
		CLONE_PARENT_SETTID_set -> clean_p_proc_dentry;
		put_user -> goto_bad_fork_cleanup;
		put_user -> clean_p_proc_dentry;
		clean_p_proc_dentry -> init_p_children_list;
		init_p_children_list -> init_p_sibling_list;
		init_p_sibling_list -> clean_p_vfork_done;
		clean_p_vfork_done -> lock_p_alloc_lock;
		lock_p_alloc_lock -> lock_p_proc_lock;
		lock_p_proc_lock -> clear_tsk_thread_flag_TIF_SIGPENDING;
		clear_tsk_thread_flag_TIF_SIGPENDING -> init_sigpending;
		init_sigpending -> set_p_utime_cputime_zero;
		set_p_utime_cputime_zero -> set_p_stime_cputime_zero;
		set_p_stime_cputime_zero -> clear_p_sched_time;
		clear_p_sched_time -> clear_p_rchar;
		clear_p_rchar -> clear_p_wchar;
		clear_p_wchar -> clear_p_syscr;
		clear_p_syscr -> clear_p_syscw;
		clear_p_syscw -> acct_clear_integrals;
		acct_clear_integrals -> set_p_it_virt_expires_cputime_zero;
		set_p_it_virt_expires_cputime_zero -> set_p_it_prof_expires_cputime_zero;
		set_p_it_prof_expires_cputime_zero -> clear_it_sched_expires;
		clear_it_sched_expires -> init_p_cpu_timers_0_list;
		init_p_cpu_timers_0_list -> init_p_cpu_timers_1_list;
		init_p_cpu_timers_1_list -> init_p_cpu_timers_2_list;
		init_p_cpu_timers_2_list -> clear_p_lock_depth;
		clear_p_lock_depth -> do_posix_clock_monotonic_gettime;
		do_posix_clock_monotonic_gettime -> clear_p_security;
		clear_p_security -> clear_p_io_context;
		clear_p_io_context -> clear_p_io_wait;
		clear_p_io_wait -> clear_p_audit_context;
		clear_p_audit_context -> set_p_tgid_p_pid;
		set_p_tgid_p_pid -> CLONE_THREAD_set;
		CLONE_THREAD_set -> p_tgid_current_tgid;
		CLONE_THREAD_set -> security_task_alloc;
		p_tgid_current_tgid -> security_task_alloc;
		security_task_alloc -> audit_alloc;
		audit_alloc -> copy_semundo;
		copy_semundo -> copy_files;
		copy_files -> copy_fs;
		copy_fs -> copy_sighand;
		copy_sighand -> copy_signal;
		copy_signal -> copy_mm;
		copy_mm -> copy_key;
		copy_key -> copy_namespace;
		copy_namespace -> copy_thread;
		security_task_alloc -> goto_bad_fork_cleanup_policy;
		audit_alloc -> goto_bad_fork_cleanup_security;
		copy_semundo -> goto_bad_fork_cleanup_audit;
		copy_files -> goto_bad_fork_cleanup_semundo;
		copy_fs -> goto_bad_fork_cleanup_files;
		copy_sighand -> goto_bad_fork_cleanup_fs;
		copy_signal -> goto_bad_fork_cleanup_sighand;
		copy_mm -> goto_bad_fork_cleanup_signal;
		copy_key -> goto_bad_fork_cleanup_mm;
		copy_namespace -> goto_bad_fork_cleanup_keys;
		copy_thread -> goto_bad_fork_cleanup_namespace;
		copy_thread -> set_p_set_child_tid;
		set_p_set_child_tid -> set_p_clear_child_tid;
		set_p_clear_child_tid -> clear_tsk_thread_flag_TIF_SYSCALL_TRACE;
		clear_tsk_thread_flag_TIF_SYSCALL_TRACE -> set_p_parent_exec_id_p_self_exec_id;
		set_p_parent_exec_id_p_self_exec_id -> set_p_exit_signal;
		set_p_exit_signal -> clear_p_pdeath_signal;
		clear_p_pdeath_signal -> clear_p_exit_state;
		clear_p_exit_state -> sched_fork;
		sched_fork -> set_p_group_leader_p;
		set_p_group_leader_p -> init_p_ptrace_children_list;
		init_p_ptrace_children_list -> init_p_ptrace_list_list;
		init_p_ptrace_list_list -> get_write_lock_irq;
		get_write_lock_irq -> set_p_cpus_allowed;
		set_p_cpus_allowed -> set_task_cpu;
		set_task_cpu -> sigismember_SIGKILL;
		sigismember_SIGKILL -> write_unlock_irq;
		write_unlock_irq -> retval_EINTR;
		retval_EINTR -> goto_bad_fork_cleanup_namespace;
		sigismember_SIGKILL -> CLONE_PARENT_and_CLONE_THREAD_set;
		CLONE_PARENT_and_CLONE_THREAD_set -> set_p_real_parent_current_real_parent;
		CLONE_PARENT_and_CLONE_THREAD_set -> set_p_real_parent_current;
		set_p_real_parent_current -> set_p_parent_p_real_parent;
		set_p_real_parent_current_real_parent -> set_p_parent_p_real_parent;
		set_p_parent_p_real_parent -> CLONE_THREAD_set_1;
		CLONE_THREAD_set_1 -> spin_lock_current_sighand_siglock;
		spin_lock_current_sighand_siglock -> current_signal_flags_SIGNAL_GROUP_EXIT;
		current_signal_flags_SIGNAL_GROUP_EXIT -> spin_unlock_current_sighand_siglock;
		spin_unlock_current_sighand_siglock -> write_unlock_irq_1;
		write_unlock_irq_1 -> retval_EAGAIN;
		retval_EAGAIN -> goto_bad_fork_cleanup_namespace;
		current_signal_flags_SIGNAL_GROUP_EXIT -> set_p_group_leader_current_group_leader;
		set_p_group_leader_current_group_leader -> current_signal_group_stop_count;
		current_signal_group_stop_count -> inc_current_signal_group_stop_count;
		inc_current_signal_group_stop_count -> set_tsk_thread_flag;
		current_signal_group_stop_count -> cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2;
		set_tsk_thread_flag -> cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2;
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2 -> set_p_it_prof_expires;
		set_p_it_prof_expires -> spin_unlock_current_sighand_siglock_1;
		cputime_eq_virt_prof_RLIM_INFINIT_current_signal_cpu_timers_0_1_2 -> spin_unlock_current_sighand_siglock_1;
		spin_unlock_current_sighand_siglock_1 -> SET_LINKS;
		CLONE_THREAD_set_1 -> SET_LINKS;
		SET_LINKS -> p_ptrace_PT_PTRACED_set;
		p_ptrace_PT_PTRACED_set -> cpuset_fork;
		p_ptrace_PT_PTRACED_set -> __ptrace_link;
		__ptrace_link -> cpuset_fork;
		cpuset_fork -> attach_pid_PID;
		attach_pid_PID -> attack_pid_TGID;
		attack_pid_TGID -> p_thread_group_leader;
		p_thread_group_leader -> inc_nr_threads;
		p_thread_group_leader -> attack_pid_PGID;
		attack_pid_PGID -> attack_pid_SID;
		attack_pid_SID -> p_pid_not_null;
		p_pid_not_null -> __get_cpu_var;
		__get_cpu_var -> inc_nr_threads;
		inc_nr_threads -> inc_total_forks;
		inc_total_forks -> write_unlock_irq_2;
		write_unlock_irq_2 -> clean_retval;
		clean_retval -> goto_fork_out;
		goto_fork_out -> retval_not_null;
		retval_not_null -> return_ERR_PTR_retval;
		retval_not_null -> return_p;
		goto_bad_fork_cleanup_namespace -> exit_namespace;
		exit_namespace -> goto_bad_fork_cleanup_keys;
		goto_bad_fork_cleanup_keys -> goto_bad_fork_cleanup_mm;
		goto_bad_fork_cleanup_mm -> p_mm_not_null;
		p_mm_not_null -> mmput;
		mmput -> goto_bad_fork_cleanup_signal;
		p_mm_not_null -> goto_bad_fork_cleanup_signal;
		goto_bad_fork_cleanup_signal -> exit_signal;
		exit_signal  -> goto_bad_fork_cleanup_sighand;
		goto_bad_fork_cleanup_sighand -> exit_sighand;
		exit_sighand -> goto_bad_fork_cleanup_fs;
		goto_bad_fork_cleanup_fs -> exit_fs;
		exit_fs -> goto_bad_fork_cleanup_files;
		goto_bad_fork_cleanup_files -> exit_files;
		exit_files -> goto_bad_fork_cleanup_semundo;
		goto_bad_fork_cleanup_semundo -> exit_sem;
		exit_sem -> goto_bad_fork_cleanup_audit;
		goto_bad_fork_cleanup_audit -> audit_free;
		audit_free -> goto_bad_fork_cleanup_security;
		goto_bad_fork_cleanup_security -> security_task_free;
		security_task_free -> goto_bad_fork_cleanup_policy;
		goto_bad_fork_cleanup_policy -> mpol_free;
		mpol_free -> goto_bad_fork_cleanup;
		goto_bad_fork_cleanup -> p_bitfmt_not_null;
		p_bitfmt_not_null -> module_put;
		p_bitfmt_not_null -> goto_bad_fork_cleanup_put_domain;
		module_put -> goto_bad_fork_cleanup_put_domain;
		goto_bad_fork_cleanup_put_domain -> module_put_1;
		module_put_1 -> goto_bad_fork_cleanup_count;
		goto_bad_fork_cleanup_count -> put_group_info;
		put_group_info -> atomic_dec;
		atomic_dec -> free_uid;
		free_uid -> goto_bad_fork_free;
		goto_bad_fork_free -> free_task;
		free_task -> goto_fork_out;
		
        }

        subgraph cluster_dup_task_struct{
                label="struct task_struct *dup_task_struct(struct task_struct *orig)";

		prepare_to_copy[label="prepare_to_copy(orig)"];
		alloc_task_struct[label="alloc_task_struct()"];
		alloc_thread_info[label="alloc_thread_info()"];
                free_task_struct[label="free_task_struct(tsk)"];
		return_null[label="return_null"];
		copy_ti[label="copy_ti"];
		copy_tsk[label="copy_tsk"];
		get_ti[label="get_ti"];
		get_tsk[label="get_tsk"];
		set_usage_2[label="set_usage_2"];

		prepare_to_copy -> alloc_task_struct;
		alloc_task_struct -> alloc_thread_info;
		alloc_thread_info -> free_task_struct[label="NULL"];
		alloc_thread_info -> copy_ti;
		free_task_struct -> return_null;
		alloc_task_struct -> return_null[label="NULL"];
		copy_ti -> copy_tsk;
		copy_tsk -> get_ti;
		get_ti -> get_tsk;
		get_tsk -> set_usage_2;
        }

        subgraph cluster_alloc_task_struct {
                label="alloc_task_struct()";

                kmem_cache_alloc[label="kmem_cache_alloc(task_struct_cachep, GFP_KERNEL)"];
        }

        subgraph cluster_copy_flags {
                label="void copy_flags(unsigned long clone_flags, struct task_struct *p)";

                clear_PF_SUPERPRIV[label="clear_PF_SUPERPRIV"];
                set_PF_FORKNOEXEC[label="set_PF_FORKNOEXEC"];
                CLONE_PTRACE_set[label="CLONE_PTRACE_set"];
                clear_p_ptrace[label="clear_p_ptrace"];
        }

	subgraph cluster_do_fork{
		label="long do_fork(unsigned long clone_flags,unsigned long stack_start,struct pt_regs *regs,unsigned long stack_size,int __user *parent_tidptr,int __user *child_tidptr)";

		alloc_pidmap[label="alloc_pidmap()"];
		current_ptrace_true[label="current_ptrace_true"];
		fork_traceflag[label="fork_traceflag (clone_flags);"];
		clone_flags_set_CLONE_PTRACE[label="clone_flags_set_CLONE_PTRACE"];
		copy_process[label="copy_process(clone_flags, stack_start, regs, stack_size, parent_tidptr, child_tidptr, pid);"];
		CLONE_VFORK_set[label="CLONE_VFORK_set"];
		set_p_vfork_done[label="set_p_vfork_done"];
		init_completion[label="init_completion(&vfork);"];
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set[label="p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set"];
		sigaddset_SIGSTOP[label="sigaddset(&p->pending.signal, SIGSTOP);"];
		set_tsk_thread_flag_TIF_SIGPENDING[label="set_tsk_thread_flag_TIF_SIGPENDING"];
		CLONE_STOPPED_set[label="CLONE_STOPPED_set"];
		wake_up_new_task[label="wake_up_new_task(p, clone_flags);"];
		set_p_state_TASK_STOPPED[label="set_p_state_TASK_STOPPED"];
		trace_true[label="trace_true"];
		set_current_ptrace_message_pid[label="set_current_ptrace_message_pid"];
		ptrace_notify[label="ptrace_notify ((trace << 8) | SIGTRAP);"];
		clone_flags_CLONE_VFORK_set[label="clone_flags_CLONE_VFORK_set"];
		wait_for_completion[label="wait_for_completion(&vfork);"];
		current_ptrace_PT_TRACE_VFORK_DONE_set[label="current_ptrace_PT_TRACE_VFORK_DONE_set"];
		ptrace_notify_1[label="ptrace_notify ((PTRACE_EVENT_VFORK_DONE << 8) | SIGTRAP);"];
		return_pid[label="return_pid"];

		alloc_pidmap -> current_ptrace_true;
		current_ptrace_true -> fork_traceflag;
		fork_traceflag -> clone_flags_set_CLONE_PTRACE;
		clone_flags_set_CLONE_PTRACE -> copy_process;
		current_ptrace_true -> copy_process;
		fork_traceflag -> copy_process;
		copy_process -> CLONE_VFORK_set;
		CLONE_VFORK_set -> set_p_vfork_done;
		set_p_vfork_done -> init_completion;
		init_completion -> p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set;
		CLONE_VFORK_set -> p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set;
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set -> sigaddset_SIGSTOP;
		sigaddset_SIGSTOP -> set_tsk_thread_flag_TIF_SIGPENDING;
		set_tsk_thread_flag_TIF_SIGPENDING -> CLONE_STOPPED_set;
		p_ptrace_PT_PTRACED_set_or_clone_flags_CLONE_STOPPED_set -> CLONE_STOPPED_set;
		CLONE_STOPPED_set -> wake_up_new_task;
		wake_up_new_task -> trace_true;
		set_p_state_TASK_STOPPED -> trace_true;
		trace_true -> set_current_ptrace_message_pid;
		set_current_ptrace_message_pid -> ptrace_notify;
		ptrace_notify -> clone_flags_CLONE_VFORK_set;
		trace_true -> clone_flags_CLONE_VFORK_set;
		clone_flags_CLONE_VFORK_set -> wait_for_completion;
		wait_for_completion -> current_ptrace_PT_TRACE_VFORK_DONE_set;
		wait_for_completion -> reurn_pid;
		current_ptrace_PT_TRACE_VFORK_DONE_set -> return_pid;
		current_ptrace_PT_TRACE_VFORK_DONE_set -> ptrace_notify_1;
		ptrace_notify_1 -> return_pid;
	}

        subgraph cluster_copy_mm{
                set_tsk_min_flt_tsk_maj_flt_0[label="set_tsk_min_flt_tsk_maj_flt_0"];
                set_tsk_nvcsw_tsk_nivcsw_0[label="set_tsk_nvcsw_tsk_nivcsw_0"];
                clear_tsk_mm[label="clear_tsk_mm"];
                clear_active_mm[label="clear_active_mm"];
                set_oldmm_current_mm[label="set_oldmm_current_mm"];
                oldmm_null[label="oldmm_null"];
                return_0[label="return_0"];
                clone_flags_CLONE_VM_set[label="clone_flags_CLONE_VM_set"];
                atomic_inc_oldmm_mm_users[label="atomic_inc_oldmm_mm_users"];
                set_mm_oldmm[label="set_mm_oldmm"];
                unlock_wait_oldmm_page_table_lock[label="unlock_wait_oldmm_page_table_lock"];
                set_retval_ENOMEM[label="set_retval_ENOMEM"];
                set_mm_allocate_mm[label="set_mm_allocate_mm"];
                mm_null[label="mm_null"];
                memcpy_mm_oldmm[label="memcpy_mm_oldmm"];
                mm_init_mm_false[label="mm_init_mm_false"];
                init_new_context_tsk_mm[label="init_new_context_tsk_mm"];
                set_retval_dup_mmap_mm_oldmm[label="set_retval_dup_mmap_mm_oldmm"];
                retval_not_null[label="retval_not_null"];
                set_mm_hiwater_rss_get_mm_counter_mm_rss[label="set_mm_hiwater_rss_get_mm_counter_mm_rss"];
                set_mm_hiwater_vm_mm_total_vm[label="set_mm_hiwater_vm_mm_total_vm"];
                set_tsk_active_mm_mm[label="set_tsk_active_mm_mm"];
                return_0[label="return_0"];
                mmput_mm[label="mmput_mm"];
                return_retval[label="return_retval"];
                mm_free_pgd_mm[label="mm_free_pgd_mm"];
                free_mm_mm[label="free_mm_mm"];
                return_retval[label="return_retval"];
        }

		subgraph cluster_nr_processes{
			label="int nr_processes(void)";
			set_total_0[label="set_total_0"];
			for_each_online_cpu_cpu[label="for_each_online_cpu_cpu"];
			total_self_add_per_cpu_process_counts_cpu[label="total_self_add_per_cpu_process_counts_cpu"];
			return_total[label="return_total"];
		}

		subgraph cluster_free_task{
			label="void free_task(struct task_struct *tsk)";
			free_thread_info_tsk_thread_info[label="free_thread_info_tsk_thread_info"];
			free_task_struct_tsk[label="free_task_struct_tsk"];
		}

		subgraph cluster___put_task_struct{
			label="void __put_task_struct(struct task_struct *tsk)";
			tsk_audit_context[label="tsk_audit_context"];
			audit_free_tsk[label="audit_free_tsk"];
			security_task_free_tsk[label="security_task_free_tsk"];
			free_uid_tsk_user[label="free_uid_tsk_user"];
			put_group_info_tsk_group_info[label="put_group_info_tsk_group_info"];
			profile_handoff_task_tsk_null[label="profile_handoff_task_tsk_null"];
			free_task_tsk[label="free_task_tsk"];
		}

		subgraph cluster_fork_init{
			label="void __init fork_init(unsigned long mempages)";
			__HAVE_ARCH_TASK_STRUCT_ALLOCATOR_false[label="__HAVE_ARCH_TASK_STRUCT_ALLOCATOR_false"];
			set_task_struct_cachep_kmem_cache_create[label="set_task_struct_cachep_kmem_cache_create"];
			set_max_threads_mempages_div_8_multi_THREAD_SIZE_div_PAGE_SIZE[label="set_max_threads_mempages_div_8_multi_THREAD_SIZE_div_PAGE_SIZE"];
			max_threads_small_20[label="max_threads_small_20"];
			set_max_threads_20[label="set_max_threads_20"];
			set_init_task_signal_rlim_RLIMIT_NPROC_rlim_cur_max_threads_div_2[label="set_init_task_signal_rlim_RLIMIT_NPROC_rlim_cur_max_threads_div_2"];
			set_init_task_signal_rlim_RLIMIT_NPROC_rlim_max_max_threads_div_2[label="set_init_task_signal_rlim_RLIMIT_NPROC_rlim_max_max_threads_div_2"];
			set_init_task_signal_rlim_RLIMIT_SIGPENDING_init_task_signal_rlim_RLIMIT_NPROC[label="set_init_task_signal_rlim_RLIMIT_SIGPENDING_init_task_signal_rlim_RLIMIT_NPROC"];
		}

		subgraph cluster_dup_mmap{
			label="static inline int dup_mmap(struct mm_struct * mm, struct mm_struct * oldmm)";
			down_write_oldmm_mmap_sem[label="down_write_oldmm_mmap_sem"];
			flush_cache_mm_current_mm[label="flush_cache_mm_current_mm"];
			set_mm_locked_vm_0[label="set_mm_locked_vm_0"];
			clear_mm_mmap[label="clear_mm_mmap"];
			clear_mm_mmap_cache[label="clear_mm_mmap_cache"];
			set_mm_free_area_cache_oldmm_mmap_base[label="set_mm_free_area_cache_oldmm_mmap_base"];
			set_mm_map_count_0[label="set_mm_map_count_0"];
			set_mm_counter_mm_rss_0[label="set_mm_counter_mm_rss_0"];
			cpus_clear_mm_cpu_vm_mask[label="cpus_clear_mm_cpu_vm_mask"];
			set_mm_mm_rb_RB_ROOT[label="set_mm_mm_rb_RB_ROOT"];
			set_rb_link_mm_mmrb_rb_node[label="set_rb_link_mm_mmrb_rb_node"];
			clear_rb_parent[label="clear_rb_parent"];
			set_pprev_mm_mmap[label="set_pprev_mm_mmap"];
			for_mpnt_current_mm_mmap[label="for_mpnt_current_mm_mmap"];
			mpnt_vm_flags_VM_DONTCOPY_set[label="mpnt_vm_flags_VM_DONTCOPY_set"];
			__vm_stat_account_mm_mpnt_vm_flags_mpnt_vm_file_neg_vma_pages_mpnt[label="__vm_stat_account_mm_mpnt_vm_flags_mpnt_vm_file_neg_vma_pages_mpnt"];
			set_charge_0[label="set_charge_0"];
			mpnt_vm_flags_VM_ACCOUNT_set[label="mpnt_vm_flags_VM_ACCOUNT_set"];
			set_len_mpnt_vm_end_sub_mpnt_vm_start_right_move_PAGE_SHIFT[label="set_len_mpnt_vm_end_sub_mpnt_vm_start_right_move_PAGE_SHIFT"];
			security_vm_enough_memory_len_true[label="security_vm_enough_memory_len_true"];
			goto_fail_nomem[label="goto_fail_nomem"];
			set_charge_len[label="set_charge_len"];
			tmp_null[label="tmp_null"];
			goto_fail_nomem[label="goto_fail_nomem"];
			set_tmp_mpnt[label="set_tmp_mpnt"];
			set_pol_mpol_copy_vma_policy_mpnt[label="set_pol_mpol_copy_vma_policy_mpnt"];
			set_retval_PTR_ERR_pol[label="set_retval_PTR_ERR_pol"];
			IS_ERR_pol_true[label="IS_ERR_pol_true"];
			goto_fail_nomem_policy[label="goto_fail_nomem_policy"];
			vma_set_policy_tmp_pol[label="vma_set_policy_tmp_pol"];
			tmp_vm_flags_VM_LOCKED_clear[label="tmp_vm_flags_VM_LOCKED_clear"];
			set_tmp_vm_mm_mm[label="set_tmp_vm_mm_mm"];
			clear_tmp_vm_next[label="clear_tmp_vm_next"];
			anon_vma_link_tmp[label="anon_vma_link_tmp"];
			set_file_tmp_vm_file[label="set_file_tmp_vm_file"];
			file_not_null[label="file_not_null"];
			set_inode_file_f_dentry_d_inode[label="set_inode_file_f_dentry_d_inode"];
			get_file_file[label="get_file_file"];
			tmp_vm_flags_VM_DENYWRITE[label="tmp_vm_flags_VM_DENYWRITE"];
			atomic_dec_inode_i_writecount[label="atomic_dec_inode_i_writecount"];
			lock_file_f_mapping_i_mmap_lock[label="lock_file_f_mapping_i_mmap_lock"];
			set_tmp_vm_truncate_count_mpnt_vm_truncate_count[label="set_tmp_vm_truncate_count_mpnt_vm_truncate_count"];
			flush_dcache_mmap_lock_file_f_mapping[label="flush_dcache_mmap_lock_file_f_mapping"];
			vma_prio_tree_add_tmp_mpnt[label="vma_prio_tree_add_tmp_mpnt"];
			flush_dcache_mmap_unlock_file_f_mapping[label="flush_dcache_mmap_unlock_file_f_mapping"];
			unlock_file_f_mapping_i_mmap_lock[label="unlock_file_f_mapping_i_mmap_lock"];
			lock_mm_page_table_lock[label="lock_mm_page_table_lock"];
			set_pprev_tmp[label="set_pprev_tmp"];
			set_pprev_tmp_vm_next[label="set_pprev_tmp_vm_next"];
			__vma_link_rb_mm_tmp_rb_link_rb_parent[label="__vma_link_rb_mm_tmp_rb_link_rb_parent"];
			set_rb_link_tmp_vm_rb_rb_right[label="set_rb_link_tmp_vm_rb_rb_right"];
			set_rb_parent_tmp_vm_rb[label="set_rb_parent_tmp_vm_rb"];
			inc_mm_map_count[label="inc_mm_map_count"];
			set_retval_copy_page_range_mm_current_mm_tmp[label="set_retval_copy_page_range_mm_current_mm_tmp"];
			unlock_mm_page_table_lock[label="unlock_mm_page_table_lock"];
			tmp_vm_ops_not_null_and_tmp_vm_ops_open_not_null[label="tmp_vm_ops_not_null_and_tmp_vm_ops_open_not_null"];
			tmp_vm_ops_open_tmp[label="tmp_vm_ops_open_tmp"];
			retval_not_null[label="retval_not_null"];
			goto_out[label="goto_out"];
			set_retval_0[label="set_retval_0"];
			flush_tlb_mm_current_mm[label="flush_tlb_mm_current_mm"];
			up_write_oldmm_mmap_sem[label="up_write_oldmm_mmap_sem"];
			return_retval[label="return_retval"];
			kmem_cache_free_vm_area_cachep_tmp[label="kmem_cache_free_vm_area_cachep_tmp"];
			set_retval_ENOMEM[label="set_retval_ENOMEM"];
			vm_unacct_memory_charge[label="vm_unacct_memory_charge"];
		}

		subgraph cluster_mm_alloc_pgd{
			label="static inline int mm_alloc_pgd(struct mm_struct * mm)";
			set_mm_pgd_pgd_alloc_mm[label="set_mm_pgd_pgd_alloc_mm"];
			mm_pgd_null[label="mm_pgd_null"];
			return_ENOMEM[label="return_ENOMEM"];
			return_0[label="return_0"];
		}

		subgraph cluster_mm_free_pgd{
			label="static inline void mm_free_pgd(struct mm_struct * mm)";
			pgd_free_mm_pgd[label="pgd_free_mm_pgd"];
		}

		subgraph cluster_mm_init{
			label="static struct mm_struct * mm_init(struct mm_struct * mm)";
			atomic_set_mm_mm_users_1[label="atomic_set_mm_mm_users_1"];
			atomic_set_mm_mm_count_1[label="atomic_set_mm_mm_count_1"];
			init_rwsem_mm_mmap_sem[label="init_rwsem_mm_mmap_sem"];
			INIT_LIST_HEAD_mm_mmlist[label="INIT_LIST_HEAD_mm_mmlist"];
			set_mm_core_waiters_0[label="set_mm_core_waiters_0"];
			set_mm_nr_ptes_0[label="set_mm_nr_ptes_0"];
			lock_init_mm_page_table_lock[label="lock_init_mm_page_table_lock"];
			rwlock_init_mm_ioctx_list_lock[label="rwlock_init_mm_ioctx_list_lock"];
			clear_mm_ioctx_list[label="clear_mm_ioctx_list"];
			set_mm_default_kioctx_INIT_KIOCTX_mm_default_kioctx_mm[label="set_mm_default_kioctx_INIT_KIOCTX_mm_default_kioctx_mm"];
			set_mm_free_area_cache_TASK_UNMAPPED_BASE[label="set_mm_free_area_cache_TASK_UNMAPPED_BASE"];
			mm_alloc_pgd_mm_null[label="mm_alloc_pgd_mm_null"];
			set_mm_def_flags_0[label="set_mm_def_flags_0"];
			return_mm[label="return_mm"];
			free_mm_mm[label="free_mm_mm"];
			return_NULL[label="return_NULL"];
		}

		subgraph cluster_mm_alloc{
			label="struct mm_struct * mm_alloc(void)";
			set_mm_allocate_mm[label="set_mm_allocate_mm"];
			mm_not_null[label="mm_not_null"];
			memset_mm_0[label="memset_mm_0"];
			set_mm_mm_init_mm[label="set_mm_mm_init_mm"];
			return_mm[label="return_mm"];
		}

		subgraph cluster___mmdrop{
			label="void fastcall __mmdrop(struct mm_struct *mm)";
			mm_free_pgd_mm[label="mm_free_pgd_mm"];
			destroy_context_mm[label="destroy_context_mm"];
			free_mm_mm[label="free_mm_mm"];
		}

		subgraph cluster_mmput{
			label="void mmput(struct mm_struct *mm)";
			atomic_dec_and_test_mm_mm_users[label="atomic_dec_and_test_mm_mm_users"];
			exit_aio_mm[label="exit_aio_mm"];
			exit_mmap_mm[label="exit_mmap_mm"];
			list_empty_mm_mmlist_false[label="list_empty_mm_mmlist_false"];
			lock_mmlist_lock[label="lock_mmlist_lock"];
			list_del_mm_mmlist[label="list_del_mm_mmlist"];
			unlock_mmlist_lock[label="unlock_mmlist_lock"];
			put_swap_token_mm[label="put_swap_token_mm"];
			mmdrop_mm[label="mmdrop_mm"];
		}

		subgraph cluster_get_task_mm{
			label="struct mm_struct *get_task_mm(struct task_struct *task)";
			task_lock_task[label="task_lock_task"];
			set_mm_task_mm[label="set_mm_task_mm"];
			mm_not_null[label="mm_not_null"];
			task_flags_PF_BORROWED_MM_set[label="task_flags_PF_BORROWED_MM_set"];
			clear_mm_NULL[label="clear_mm_NULL"];
			atomic_inc_mm_mm_users[label="atomic_inc_mm_mm_users"];
			task_unlock_task[label="task_unlock_task"];
			return_mm[label="return_mm"];
		}

		subgraph cluster_mm_release{
			label="void mm_release(struct task_struct *tsk, struct mm_struct *mm)";
			set_vfork_done_tsk_vfork_done[label="set_vfork_done_tsk_vfork_done"];
			deactivate_mm_tsk_mm[label="deactivate_mm_tsk_mm"];
			vfork_done_not_null[label="vfork_done_not_null"];
			clear_tsk_vfork_done[label="clear_tsk_vfork_done"];
			complete_vfork_done[label="complete_vfork_done"];
			tsk_clear_child_tid_and_atomic_read_mm_mm_users_great_1[label="tsk_clear_child_tid_and_atomic_read_mm_mm_users_great_1"];
			set_tidptr_tsk_clear_child_tid[label="set_tidptr_tsk_clear_child_tid"];
			clear_tsk_clear_child_tid[label="clear_tsk_clear_child_tid"];
			put_user_0_tidptr[label="put_user_0_tidptr"];
			sys_futex_tidptr_FUTEX_WAKE_1_NULL_NULL_0[label="sys_futex_tidptr_FUTEX_WAKE_1_NULL_NULL_0"];
		}

		subgraph cluster___copy_fs_struct{
			label="static inline struct fs_struct *__copy_fs_struct(struct fs_struct *old)";
			set_fs_kmem_cache_alloc_fs_cachep_GFP_KERNEL[label="set_fs_kmem_cache_alloc_fs_cachep_GFP_KERNEL"];
			fs_not_null[label="fs_not_null"];
			atomic_set_fs_count_1[label="atomic_set_fs_count_1"];
			rwlock_init_fs_lock[label="rwlock_init_fs_lock"];
			set_fs_umask_old_umask[label="set_fs_umask_old_umask"];
			read_lock_old_lock[label="read_lock_old_lock"];
			set_fs_rootmnt_mntget_old_rootmnt[label="set_fs_rootmnt_mntget_old_rootmnt"];
			set_fs_root_dget_old_root[label="set_fs_root_dget_old_root"];
			set_fs_pwdmnt_mntget_old_pwdmnt[label="set_fs_pwdmnt_mntget_old_pwdmnt"];
			set_fs_pwd_dget_old_pwd[label="set_fs_pwd_dget_old_pwd"];
			old_altroot_not_null[label="old_altroot_not_null"];
			set_fs_altrootmnt_mntget_old_altrootmnt[label="set_fs_altrootmnt_mntget_old_altrootmnt"];
			set_fs_altroot_dget_old_altroot[label="set_fs_altroot_dget_old_altroot"];
			clear_fs_altrootmnt[label="clear_fs_altrootmnt"];
			clear_fs_altroot[label="clear_fs_altroot"];
			read_unlock_old_lock[label="read_unlock_old_lock"];
			return_fs[label="return_fs"];
		}

		subgraph cluster_copy_fs_struct{
			label="struct fs_struct *copy_fs_struct(struct fs_struct *old)";
			return___copy_fs_struct_old[label="return___copy_fs_struct_old"];
		}

		subgraph cluster_copy_fs{
			label="static inline int copy_fs(unsigned long clone_flags, struct task_struct * tsk)";
			clone_flags_CLONE_FS_set[label="clone_flags_CLONE_FS_set"];
			atomic_inc_current_fs_count[label="atomic_inc_current_fs_count"];
			return_0[label="return_0"];
			set_tsk_fs___copy_fs_struct_current_fs[label="set_tsk_fs___copy_fs_struct_current_fs"];
			tsk_fs_null[label="tsk_fs_null"];
			return_ENOMEM[label="return_ENOMEM"];
			return_0[label="return_0"];
		}

		subgraph cluster_count_open_files{
			label="static int count_open_files(struct files_struct *files, int size)";
			for_i_size_div_8_multi_sizeof_long[label="for_i_size_div_8_multi_sizeof_long"];
			files_open_fds_fds_bits_i_dec_not_null[label="files_open_fds_fds_bits_i_dec_not_null"];
			set_i_i_add_1_multi_8_sizeof_long[label="set_i_i_add_1_multi_8_sizeof_long"];
			return_i[label="return_i"];
		}

		subgraph cluster_copy_files{
			label="static int copy_files(unsigned long clone_flags, struct task_struct * tsk)";
			set_oldf_current_files[label="set_oldf_current_files"];
			oldf_null[label="oldf_null"];
			goto_out[label="goto_out"];
			clone_flags_CLONE_FILES_set[label="clone_flags_CLONE_FILES_set"];
			atomic_inc_oldf_count[label="atomic_inc_oldf_count"];
			goto_out[label="goto_out"];
			clear_tsk_files[label="clear_tsk_files"];
			set_error_ENOMEM[label="set_error_ENOMEM"];
			set_newf_kmem_cache_alloc_files_cachep_SLAB_KERNEL[label="set_newf_kmem_cache_alloc_files_cachep_SLAB_KERNEL"];
			newf_null[label="newf_null"];
			goto_out[label="goto_out"];
			atomic_set_newf_count_1[label="atomic_set_newf_count_1"];
			lock_init_newf_file_lock[label="lock_init_newf_file_lock"];
			set_newf_next_fd_0[label="set_newf_next_fd_0"];
			set_newf_max_fds_NR_OPEN_DEFAULT[label="set_newf_max_fds_NR_OPEN_DEFAULT"];
			set_newf_max_fdset___FD_SETSIZE[label="set_newf_max_fdset___FD_SETSIZE"];
			set_newf_close_on_exec_newf_close_on_exec_init[label="set_newf_close_on_exec_newf_close_on_exec_init"];
			set_newf_open_fds_newf_open_fds_init[label="set_newf_open_fds_newf_open_fds_init"];
			set_newf_fd_newf_fd_array_0[label="set_newf_fd_newf_fd_array_0"];
			lock_oldf_file_lock[label="lock_oldf_file_lock"];
			set_open_files_count_open_files_oldf_oldf_max_fdset[label="set_open_files_count_open_files_oldf_oldf_max_fdset"];
			set_expand_0[label="set_expand_0"];
			open_files_great_newf_max_fdset[label="open_files_great_newf_max_fdset"];
			set_newf_max_fdset_0[label="set_newf_max_fdset_0"];
			set_expand_1[label="set_expand_1"];
			open_files_great_newf_max_fds[label="open_files_great_newf_max_fds"];
			set_newf_max_fds_0[label="set_newf_max_fds_0"];
			set_expand_1[label="set_expand_1"];
			expand_not_null[label="expand_not_null"];
			unlock_oldf_file_lock[label="unlock_oldf_file_lock"];
			lock_newf_file_lock[label="lock_newf_file_lock"];
			set_error_expand_files_newf_open_files_sub_1[label="set_error_expand_files_newf_open_files_sub_1"];
			unlock_newf_file_lock[label="unlock_newf_file_lock"];
			error_small_0[label="error_small_0"];
			goto_out_release[label="goto_out_release"];
			lock_oldf_file_lock[label="lock_oldf_file_lock"];
			set_old_fds_oldf_fd[label="set_old_fds_oldf_fd"];
			set_new_fds_newf_fd[label="set_new_fds_newf_fd"];
			memcpy_newf_open_fds_fds_bits_oldf_open_fds_fds_bits_open_files_div_8[label="memcpy_newf_open_fds_fds_bits_oldf_open_fds_fds_bits_open_files_div_8"];
			memcpy_newf_close_on_exec_fds_bits_oldf_close_in_exec_fds_bits_open_files_div_8[label="memcpy_newf_close_on_exec_fds_bits_oldf_close_in_exec_fds_bits_open_files_div_8"];
			for_i_open_files[label="for_i_open_files"];
			f_not_null[label="f_not_null"];
			get_file_f[label="get_file_f"];
			FD_CLR_open_files_sub_1_newf_open_fds[label="FD_CLR_open_files_sub_1_newf_open_fds"];
			set_new_fds_f_and_inc[label="set_new_fds_f_and_inc"];
			unlock_oldf_file_lock[label="unlock_oldf_file_lock"];
			set_size_newf_max_fds_sub_open_files_multi_sizeof_struct_file[label="set_size_newf_max_fds_sub_open_files_multi_sizeof_struct_file"];
			memset_new_fds_0_size[label="memset_new_fds_0_size"];
			newf_max_fdset_great_open_files[label="newf_max_fdset_great_open_files"];
			set_left_newf_max_fdset_sub_open_files_div_8[label="set_left_newf_max_fdset_sub_open_files_div_8"];
			set_start_open_files_div_8_multi_sizeof_long[label="set_start_open_files_div_8_multi_sizeof_long"];
			memset_newf_open_fds_fds_bits_start_0_left[label="memset_newf_open_fds_fds_bits_start_0_left"];
			memset_newf_close_on_exec_fds_bits_start_0_left[label="memset_newf_close_on_exec_fds_bits_start_0_left"];
			set_tsk_files_newf[label="set_tsk_files_newf"];
			set_error_0[label="set_error_0"];
			return_error[label="return_error"];
			free_fdset_newf_close_on_exec_newf_max_fdset[label="free_fdset_newf_close_on_exec_newf_max_fdset"];
			free_fdset_newf_open_fds_newf_max_fdset[label="free_fdset_newf_open_fds_newf_max_fdset"];
			free_fd_array_newf_fd_newf_max_fds[label="free_fd_array_newf_fd_newf_max_fds"];
			kmem_cache_free_files_cachep_newf[label="kmem_cache_free_files_cachep_newf"];
			goto_out[label="goto_out"];
		}

		subgraph cluster_unshare_files{
			label="int unshare_files(void)";
			set_files_current_files[label="set_files_current_files"];
			files_null[label="files_null"];
			atomic_read_files_count_eq_1[label="atomic_read_files_count_eq_1"];
			atomic_inc_files_count[label="atomic_inc_files_count"];
			return_0[label="return_0"];
			set_rc_copy_files_0_current[label="set_rc_copy_files_0_current"];
			rc_not_null[label="rc_not_null"];
			set_current_files_files[label="set_current_files_files"];
			return_rc[label="return_rc"];
		}

		subgraph cluster_copy_sighand{
			label="static inline int copy_sighand(unsigned long clone_flags, struct task_struct * tsk)";
			clone_flags_CLONE_SIGHAND_CLONE_THREAD_set[label="clone_flags_CLONE_SIGHAND_CLONE_THREAD_set"];
			atomic_inc_current_sighand_count[label="atomic_inc_current_sighand_count"];
			return_0[label="return_0"];
			set_sig_kmem_cache_alloc_sighand_cachep_GFP_KERNEL[label="set_sig_kmem_cache_alloc_sighand_cachep_GFP_KERNEL"];
			set_tsk_sighand_sig[label="set_tsk_sighand_sig"];
			sig_null[label="sig_null"];
			return_ENOMEM[label="return_ENOMEM"];
			lock_init_sig_siglock[label="lock_init_sig_siglock"];
			atomic_set_sig_count_1[label="atomic_set_sig_count_1"];
			memcpy_sig_action_current_sighand_action_sizeof_sig_action[label="memcpy_sig_action_current_sighand_action_sizeof_sig_action"];
			return_0[label="return_0"];
		}

		subgraph cluster_copy_signal{
			label="static inline int copy_signal(unsigned long clone_flags, struct task_struct * tsk)";
			clone_flags_CLONE_THREAD_set[label="clone_flags_CLONE_THREAD_set"];
			atomic_inc_current_signal_count[label="atomic_inc_current_signal_count"];
			atomic_inc_current_signal_live[label="atomic_inc_current_signal_live"];
			return_0[label="return_0"];
			set_sig_kmem_cache_alloc_signal_cachep_GFP_KERNEL[label="set_sig_kmem_cache_alloc_signal_cachep_GFP_KERNEL"];
			set_tsk_singal_sig[label="set_tsk_singal_sig"];
			sig_null[label="sig_null"];
			return_ENOMEM[label="return_ENOMEM"];
			set_ret_copy_thread_group_keys_tsk[label="set_ret_copy_thread_group_keys_tsk"];
			ret_small_0[label="ret_small_0"];
			kmem_cache_free_signal_cachep_sig[label="kmem_cache_free_signal_cachep_sig"];
			return_ret[label="return_ret"];
			atomic_set_sig_count_1[label="atomic_set_sig_count_1"];
			atomic_set_sig_live_1[label="atomic_set_sig_live_1"];
			init_waitqueue_head_sig_wait_chldexit[label="init_waitqueue_head_sig_wait_chldexit"];
			set_sig_flags_0[label="set_sig_flags_0"];
			set_sig_group_exit_code_0[label="set_sig_group_exit_code_0"];
			clear_sig_group_exit_task[label="clear_sig_group_exit_task"];
			set_sig_group_stop_count_0[label="set_sig_group_stop_count_0"];
			clear_sig_curr_target[label="clear_sig_curr_target"];
			init_sigpnding_sig_shared_pending[label="init_sigpnding_sig_shared_pending"];
			INIT_LIST_HEAD_sig_posix_timers[label="INIT_LIST_HEAD_sig_posix_timers"];
			set_sig_it_real_value_sig_it_real_incr_0[label="set_sig_it_real_value_sig_it_real_incr_0"];
			set_sig_real_timer_function_it_real_fn[label="set_sig_real_timer_function_it_real_fn"];
			set_sig_real_timer_data_tsk[label="set_sig_real_timer_data_tsk"];
			init_timer_sig_real_timer[label="init_timer_sig_real_timer"];
			set_sig_it_virt_expires_cputime_zero[label="set_sig_it_virt_expires_cputime_zero"];
			set_sig_it_virt_incr_cputime_zero[label="set_sig_it_virt_incr_cputime_zero"];
			set_sig_it_prof_expires_cputime_zero[label="set_sig_it_prof_expires_cputime_zero"];
			set_sig_it_prof_incr_cputime_zero[label="set_sig_it_prof_incr_cputime_zero"];
			set_sig_tty_current_signal_tty[label="set_sig_tty_current_signal_tty"];
			set_sig_pgrp_process_group_current[label="set_sig_pgrp_process_group_current"];
			set_sig_session_current_signal_session[label="set_sig_session_current_signal_session"];
			set_sig_leader_0[label="set_sig_leader_0"];
			set_sig_tty_old_pgrp_0[label="set_sig_tty_old_pgrp_0"];
			set_sig_utime_sig_stime_sig_cutime_sig_cstime_cputime_zero[label="set_sig_utime_sig_stime_sig_cutime_sig_cstime_cputime_zero"];
			set_sig_nvcsw_sig_nivcsw_sig_cnvcsw_sig_cnivcsw_0[label="set_sig_nvcsw_sig_nivcsw_sig_cnvcsw_sig_cnivcsw_0"];
			set_sig_min_flt_sig_maj_flt_sig_cmin_flt_sig_cmaj_flt_0[label="set_sig_min_flt_sig_maj_flt_sig_cmin_flt_sig_cmaj_flt_0"];
			set_sig_sched_time_0[label="set_sig_sched_time_0"];
			INIT_LIST_HEAD_sig_cpu_timers_0[label="INIT_LIST_HEAD_sig_cpu_timers_0"];
			INIT_LIST_HEAD_sig_cpu_timers_1[label="INIT_LIST_HEAD_sig_cpu_timers_1"];
			INIT_LIST_HEAD_sig_cpu_timers_2[label="INIT_LIST_HEAD_sig_cpu_timers_2"];
			task_lock_current_group_leader[label="task_lock_current_group_leader"];
			memcpy_sig_rlim_current_signal_rlim_sizeof_sig_rlim[label="memcpy_sig_rlim_current_signal_rlim_sizeof_sig_rlim"];
			task_unlock_current_group_leader[label="task_unlock_current_group_leader"];
			sig_rlim_RLIMIT_CPU_rlim_cur_not_eq_RLIM_INFINITY[label="sig_rlim_RLIMIT_CPU_rlim_cur_not_eq_RLIM_INFINITY"];
			set_tsk_it_prof_expires_secs_to_cputime_sig_rlim_RLIMIT_CPU_rlim_cur[label="set_tsk_it_prof_expires_secs_to_cputime_sig_rlim_RLIMIT_CPU_rlim_cur"];
			return_0[label="return_0"];
		}

		subgraph cluster_sys_set_tid_address{
			label="asmlinkage long sys_set_tid_address(int __user *tidptr)";
			set_current_clear_child_tid_tidptr[label="set_current_clear_child_tid_tidptr"];
			return_current_pid[label="return_current_pid"];
		}

		subgraph cluster_idle_regs{
			label="struct pt_regs * __devinit __attribute__((weak)) idle_regs(struct pt_regs *regs)";
			memset_regs_0[label="memset_regs_0"];
			return_regs[label="return_regs"];
		}

		subgraph cluster_fork_idle{
			label="task_t * __devinit fork_idle(int cpu)";
			set_task_process_CLONE_VM_0_idle_regs_regs_0_NULL_NULL_0[label="set_task_process_CLONE_VM_0_idle_regs_regs_0_NULL_NULL_0"];
			task_null[label="task_null"];
			return_ERR_PTR_ENOMEM[label="return_ERR_PTR_ENOMEM"];
			init_idle_task_cpu[label="init_idle_task_cpu"];
			unhash_process_task[label="unhash_process_task"];
			return_task[label="return_task"];
		}

		subgraph clusterfork_traceflag{
			label="int fork_traceflag (unsigned clone_flags)";
			node[style=filled, shape = box, margin="0.05,0.005",height="0.1",width="0.1"];

			CLONE_UNTRACED[label="CLONE_UNTRACED"];
			CLONE_VFORK[label="CLONE_VFORK"];
			current_PT_TRACE_VFORK[label="current_PT_TRACE_VFORK"];
			not_SIGCHLD[label="not_SIGCHLD"];
			current_PT_TRACE_CLONE[label="current_PT_TRACE_CLONE"];
			current_PT_TRACE_FORK[label="current_PT_TRACE_FORK"];
			return_0_1[label="return_0"];
			return_0_2[label="return_0"];
			return_PTRACE_EVENT_VFORK[label="return_PTRACE_EVENT_VFORK"];
			return_PTRACE_EVENT_CLONE[label="return_PTRACE_EVENT_CLONE"];
			return_PTRACE_EVENT_FORK[label="return_PTRACE_EVENT_FORK"];

			CLONE_UNTRACED -> return_0_1[label="ture"];
			CLONE_UNTRACED -> CLONE_VFORK[label="false"];
			CLONE_VFORK -> current_PT_TRACE_VFORK[label="ture"];
			CLONE_VFORK -> not_SIGCHLD[label="false"];
			current_PT_TRACE_VFORK -> return_PTRACE_EVENT_VFORK[label="ture"];
			current_PT_TRACE_VFORK -> not_SIGCHLD[label="false"];
			not_SIGCHLD -> current_PT_TRACE_CLONE[label="ture"];
			not_SIGCHLD -> current_PT_TRACE_FORK[label="falsee"];
			current_PT_TRACE_CLONE -> return_PTRACE_EVENT_CLONE[label="ture"];
			current_PT_TRACE_CLONE -> current_PT_TRACE_FORK[label="false"];
			current_PT_TRACE_FORK -> return_PTRACE_EVENT_FORK[label="ture"];
			current_PT_TRACE_FORK -> return_0_2[label="false"];
		}
		subgraph cluster_proc_caches_init{
			label="void __init proc_caches_init(void)";
			set_sighand_cachep_kmem_cache_create_sighand_chace_sizeof_struct_sighand_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL[label="set_sighand_cachep_kmem_cache_create_sighand_chace_sizeof_struct_sighand_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL"];
			set_signal_cachep_kmem_cache_create_signal_chace_sizeof_struct_signal_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL[label="set_signal_cachep_kmem_cache_create_signal_chace_sizeof_struct_signal_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL"];
			set_files_cachep_kmem_cache_create_files_chace_sizeof_struct_files_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL[label="set_files_cachep_kmem_cache_create_files_chace_sizeof_struct_files_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL"];
			set_fs_cachep_kmem_cache_create_fs_chace_sizeof_struct_fs_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL[label="set_fs_cachep_kmem_cache_create_fs_chace_sizeof_struct_fs_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL"];
			set_vm_area_cachep_kmem_cache_create_vm_area_chace_sizeof_struct_vm_area_struct_0_SLAB_PANIC_NULL_NULL[label="set_vm_area_cachep_kmem_cache_create_vm_area_chace_sizeof_struct_vm_area_struct_0_ALIGN_SLAB_PANIC_NULL_NULL"];
			set_mm_cachep_kmem_cache_create_mm_chace_sizeof_struct_mm_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL[label="set_mm_cachep_kmem_cache_create_mm_chace_sizeof_struct_mm_struct_0_SLAB_HWCACHE_ALIGN_SLAB_PANIC_NULL_NULL"];
		}
}


